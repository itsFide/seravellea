*{margin:0;padding:0;-webkit-box-sizing:border-box;box-sizing:border-box}html{scroll-behavior:smooth}main{overflow:hidden}@font-face{font-family:"Bebas Book";src:url(../font/BebasNeueBook.woff2);font-weight:400;font-display:swap}@font-face{font-family:"Inter";src:url(../font/Inter-Regular.woff2);font-weight:400;font-display:swap}@font-face{font-family:"Inter";src:url(../font/Inter-Bold.woff2);font-weight:700;font-display:swap}@font-face{font-family:"Inter";src:url(../font/Inter-Medium.woff2);font-weight:500;font-display:swap}@font-face{font-family:"Inter";src:url(../font/Inter-LightBETA.woff2);font-weight:300;font-display:swap}@font-face{font-family:"Montserrat";src:url(../font/Montserrat-Regular.woff2);font-weight:400;font-display:swap}@font-face{font-family:"Montserrat";src:url(../font/Montserrat-Bold.woff2);font-weight:700;font-display:swap}@font-face{font-family:"Montserrat";src:url(../font/Montserrat-Medium.woff2);font-weight:500;font-display:swap}@font-face{font-family:"Montserrat";src:url(../font/Montserrat-Light.woff2);font-weight:300;font-display:swap}@font-face{font-family:"Montserrat";src:url(../font/Montserrat-SemiBold.woff2);font-weight:600;font-display:swap}body{font-family:"Inter";font-size:16px;line-height:140%;color:#414141}.container{max-width:1440px;padding:0 20px;margin:0 auto}.title,body{font-weight:400}.title{font-family:"Bebas Neue",sans-serif;line-height:100%;font-size:76px}.title span{color:#68cab7}.show-tablet{display:none}.header{background:#0d7161}.header__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:15px 0 23px}.header__logo img{width:103px;height:42px}.header__nav{margin-top:20px}.header__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__item{margin-right:30px;list-style:none}.header__item:last-child{margin-right:0}.header__link{font-size:18px;color:#fff;text-decoration:none}.burger,.form__label input{display:none}.form{padding:120px 0 100px}.form__title{text-align:center}.form__left{width:453px;margin-right:54px}.form__btn{padding:16px 40px;background:-webkit-gradient(linear,left top,left bottom,from(#ffe022),to(#ffc622));background:linear-gradient(180deg,#ffe022 0,#ffc622 100%);font-size:32px;font-family:"Bebas Neue";font-weight:400;line-height:100%;color:#fff;margin-top:25px;cursor:pointer;border:unset;border-radius:12px}.form__label{font-size:16px;font-weight:500;padding-left:47px;margin-top:14px;position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;font-family:"Montserrat"}.form__label span{position:absolute;left:0;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);width:29px;height:29px;background:#68cab7;border-radius:4px;border:1px solid #dadada}.form__label input:checked~span::before{content:"";width:19px;height:19px;position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);background-image:url(../img/check-icon.svg);background-size:100%;background-repeat:no-repeat;background-position:center}.form__item{margin-bottom:25px}.form-list li:last-child,.form__item:last-child{margin-bottom:0}.form__item p{font-size:18px;margin-bottom:6px;font-family:"Montserrat"}.form__item p span{color:#e91313}.form__item input{border:1px solid #efefef;border-radius:12px;width:100%;padding:19px 30px;font-size:18px}.form__item input::-webkit-input-placeholder{color:#b3b3b3}.form__item input::-moz-placeholder{color:#b3b3b3}.form__item input:-ms-input-placeholder{color:#b3b3b3}.form__item input::-ms-input-placeholder{color:#b3b3b3}.form__item input::placeholder{color:#b3b3b3}.form__right{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.form__text{width:440px;margin-right:54px}.form__img{width:399px;height:711px}.form__img img{width:100%;height:100%}.form-wrapper,.guarantee{display:-webkit-box;display:-ms-flexbox;display:flex;margin-top:40px}.guarantee{-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-top:20px}.guarantee img{width:34px;height:44px;margin-right:16px}.form-list li,.form-timer h3,.guarantee p{font-size:18px;font-family:"Montserrat"}.guarantee p{font-weight:500}.form-timer h3{font-size:22px;font-weight:700;line-height:27px;margin-bottom:30px;text-align:center}.form-list{margin-top:40px}.form-list h3{font-size:42px;font-weight:400;font-family:"Bebas Neue";line-height:100%;margin-bottom:20px}.form-list li{padding-left:34px;position:relative;list-style:none;margin-bottom:20px}.form-list li::before{content:"";width:24px;height:24px;position:absolute;left:0;background-image:url(../img/hero-list-icon.svg);background-size:100%;background-repeat:no-repeat;background-position:center}.countdown{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.ring{width:55px;height:55px;position:relative;display:grid;margin-right:10px;place-items:center}.ring svg{-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);overflow:visible}.ring .track{stroke:#ccc;fill:none;stroke-width:1px}.ring .progress{stroke:#68cab7;fill:none;stroke-width:2px;stroke-linecap:round;-webkit-transition:stroke-dashoffset .25s linear;transition:stroke-dashoffset .25s linear}.label,.value{position:absolute}.value{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;font-size:24px;font-family:"Montserrat";font-weight:300}.label{top:-20px;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);text-align:center;font-size:10px;opacity:.8}.footer__menu.show-tablet,.show-mobile{display:none}.footer{background:#313131;padding-top:40px}.footer__logo{width:129px;height:43px;margin-right:41px}.footer__logo img,.ring svg{width:100%;height:100%}.footer-top,.footer__menu{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.footer__menu li{list-style:none;margin-right:30px}.footer__menu li:last-child{margin-right:0}.footer__menu li a{color:#fff;font-size:18px;font-family:"Montserrat";text-decoration:none}.footer-privacy{background:#292929;margin-top:30px;padding:11px 0;color:#9e9e9e;font-size:16px;cursor:pointer;text-align:center;font-family:"Montserrat"}@supports (-webkit-appearance:none){.form__label input:checked~span::before{background-image:url(../img/check-icon.svg)}.form-list li::before{background-image:url(../img/hero-list-icon.svg)}}@media screen and (max-width:1919px){.container{max-width:75vw;padding:0 1.042vw}.title{font-size:3.958vw}.header__inner{padding:.781vw 0 1.198vw}.header__logo img{width:5.365vw;height:2.188vw}.header__nav{margin-top:1.042vw}.header__item{margin-right:1.563vw}.header__link{font-size:.938vw}.form{padding:6.25vw 0 5.208vw}.form__left{width:23.594vw;margin-right:2.813vw}.form__btn{padding:.833vw 2.083vw;font-size:1.667vw;margin-top:1.302vw;border-radius:.625vw}.form__label{font-size:.833vw;padding-left:2.448vw;margin-top:.729vw}.form__label span{width:1.51vw;height:1.51vw;border-radius:.208vw;border:.052vw solid #dadada}.form__label input{display:none}.form__label input:checked~span::before{width:.99vw;height:.99vw}.form__item{margin-bottom:1.302vw}.form__item p{margin-bottom:.313vw}.form__item input{border:.052vw solid #efefef;border-radius:.625vw;padding:.99vw 1.563vw;font-size:.938vw}.form__text{width:22.917vw;margin-right:2.813vw}.form__img{width:20.781vw;height:37.031vw}.form-wrapper{margin-top:2.083vw}.guarantee{margin-top:1.042vw}.guarantee img{width:1.771vw;height:2.292vw;margin-right:.833vw}.footer__menu li a,.form__item p,.guarantee p{font-size:.938vw}.form-timer h3{font-size:1.146vw;line-height:1.406vw;margin-bottom:1.563vw}.form-list{margin-top:2.083vw}.form-list h3,.form-list li{font-size:2.188vw;margin-bottom:1.042vw}.form-list li{padding-left:1.771vw;font-size:.938vw}.form-list li::before{width:1.25vw;height:1.25vw}.ring{width:2.865vw;height:2.865vw;margin-right:.521vw}.ring .track{stroke-width:.052vw}.ring .progress{stroke-width:.104vw}.value{font-size:1.25vw}.label{top:-1.042vw;font-size:.521vw}.footer{padding-top:2.083vw}.footer__logo{width:6.719vw;height:2.24vw;margin-right:2.135vw}.footer__menu li{margin-right:1.563vw}.footer-privacy{margin-top:1.563vw;padding:.573vw 0;font-size:.833vw}}@media screen and (max-width:1024px){.container{max-width:100%;padding:0 2.604vw}.title{font-size:7.552vw}.show-tablet{display:block}.form__label input,.hide-tablet{display:none}.header__inner{padding:1.693vw 0;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;position:relative}.header .burger{display:block;width:6.51vw;height:6.51vw;position:relative;margin-left:auto;background:#fff;border-radius:100%}.header .burger span{width:2.604vw;height:.26vw;position:absolute;border-radius:.521vw;background:#0d7161;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.header .burger span:nth-child(1){top:2.474vw}.header .burger span:nth-child(2){top:3.125vw}.header .burger span:nth-child(3){bottom:2.474vw}.header__logo{margin-left:auto}.header__logo img{width:13.932vw;height:5.729vw}.header__nav{padding:13.021vw}.header__menu{display:none;position:absolute;width:100%;height:max;top:0;left:0;z-index:10;background:#fff}.header__menu.active{display:block}.header .mob-close{position:absolute;top:5.208vw;right:2.604vw;cursor:pointer;width:2.344vw;height:2.344vw}.header .mob-close img{width:100%;height:100%}.header__list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.header__item{margin-right:0;text-align:center;margin-bottom:6.51vw}.footer__menu li:last-child,.header__item:last-child{margin-bottom:0}.header__link{color:#414141;font-size:2.604vw}.form{padding:100px 0 80px}.form__right{margin-top:25px}.form__left{width:100%;margin-right:0}.form__btn{padding:20px;width:100%;font-size:40px;margin-top:25px;border-radius:12px}.form__label{font-size:18px;padding-left:47px;margin-top:20px}.form__label span{width:29px;height:29px;border-radius:4px;border:1px solid #dadada}.form__label input:checked~span::before{width:19px;height:19px}.form__item{margin-bottom:25px}.form__item p{margin-bottom:6px}.form__item input{border:1px solid #efefef;border-radius:12px;padding:19px 30px;font-size:18px}.form__text{width:440px;margin-right:31px}.form__img{width:257px;height:536px}.form-wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-top:40px}.guarantee{margin-top:20px}.guarantee img{width:34px;height:44px;margin-right:16px}.form-list li,.form__item p,.guarantee p{font-size:18px}.form-timer{margin-top:30px}.form-timer h3{font-size:22px;line-height:27px;margin-bottom:30px}.form-list{margin-top:16px}.form-list h3{font-size:42px;margin-bottom:16px}.form-list li{padding-left:34px;margin-bottom:20px}.form-list li::before{width:24px;height:24px}.ring{width:55px;height:55px;margin-right:10px}.ring .track{stroke-width:1px}.ring .progress{stroke-width:2px}.value{font-size:24px}.label{top:-20px;font-size:10px}.footer{padding-top:5.208vw}.footer__logo{width:28.255vw;height:11.589vw;margin-left:auto;margin-right:auto}.footer__menu{margin-top:6.51vw}.footer__menu.show-tablet{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;width:100%;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.footer__menu li{margin-right:0;margin-bottom:5.208vw}.footer__menu li a{font-size:2.604vw;font-weight:600}.footer-privacy{margin-top:7.813vw;padding:1.432vw 0;font-size:2.083vw}}@media screen and (max-width:650px){.container{padding:0 3.623vw}.title{font-size:9.662vw}.header__inner{padding:5.072vw 0}.header .burger{width:7.246vw;height:3.14vw;background:0 0}.header .burger span{width:100%;height:.725vw;border-radius:0;background:#fff;left:0;-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}.header .burger span:nth-child(1){top:0}.header .burger span:nth-child(2){top:1.208vw}.header .burger span:nth-child(3){bottom:0}.header__logo{margin-left:auto}.header__logo img{width:22.222vw;height:9.179vw}.header__nav{padding:24.155vw 0 19.324vw}.header__menu{top:2.415vw}.header .mob-close{position:absolute;top:5.314vw;right:5.314vw;width:4.831vw;height:4.831vw}.header__item{margin-bottom:3.623vw}.header__link{font-size:4.348vw}.form{padding:12.077vw 0 14.493vw}.form-top{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.form__title{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2;text-align:left;margin-top:12.077vw}.form__label input,.form__title br{display:none}.form__timer{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.form__right{margin-top:6.039vw}.form__left{width:100%;margin-right:0}.form__btn{padding:4.831vw 6.039vw;font-size:7.246vw;margin-top:4.831vw;border-radius:2.899vw}.form__label{font-size:4.348vw;padding-left:11.35vw;margin-top:2.415vw}.form__label span{width:7.006vw;height:7.006vw;border-radius:.966vw;border:.242vw solid #dadada}.form__label input:checked~span::before{width:4.589vw;height:4.589vw}.footer__menu ul,.form__item{margin-bottom:2.415vw}.form__item p{margin-bottom:1.449vw}.form__item input{border:.242vw solid #efefef;border-radius:2.899vw;padding:4.589vw 7.246vw;font-size:4.348vw}.form__text{width:100%;margin-right:0;display:none}.form__img{width:100%;height:auto}.form-wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-top:19.324vw}.guarantee{margin-top:3.382vw}.guarantee img{width:8.213vw;height:10.628vw;margin-right:3.865vw}.form__item p,.guarantee p{font-size:4.348vw}.form-timer{margin-top:0}.form-timer h3{font-size:4.106vw;line-height:5.072vw;margin-bottom:5.556vw}.form-list{margin-top:6.039vw}.form-list h3,.form-list li{font-size:7.729vw;margin-bottom:2.415vw}.form-list li{padding-left:8.213vw;font-size:3.865vw}.form-list li::before{width:5.797vw;height:5.797vw}.ring{width:10.387vw;height:10.387vw;margin-right:1.691vw}.ring .track{stroke-width:.242vw}.ring .progress{stroke-width:.483vw}.value{font-size:4.348vw}.label{top:-4.831vw;font-size:1.932vw}.show-mobile{display:block}.hide-mobile{display:none}.footer{padding-top:7.246vw}.footer__logo{width:31.159vw;height:12.802vw}.footer__menu{margin-top:8.696vw;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.footer__menu li{text-align:center;margin-bottom:2.415vw}.footer__menu li a{font-size:4.348vw;font-weight:400}.footer-privacy{margin-top:11.111vw;padding:2.657vw 0;font-size:3.865vw}}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
