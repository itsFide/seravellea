*{margin:0;padding:0;-webkit-box-sizing:border-box;box-sizing:border-box}html{scroll-behavior:smooth}main{overflow:hidden}@font-face{font-family:"Bebas Book";src:url(../font/BebasNeueBook.woff2);font-weight:400;font-display:swap}@font-face{font-family:"Inter";src:url(../font/Inter-Regular.woff2);font-weight:400;font-display:swap}@font-face{font-family:"Inter";src:url(../font/Inter-Bold.woff2);font-weight:700;font-display:swap}@font-face{font-family:"Inter";src:url(../font/Inter-Medium.woff2);font-weight:500;font-display:swap}@font-face{font-family:"Inter";src:url(../font/Inter-LightBETA.woff2);font-weight:300;font-display:swap}@font-face{font-family:"Montserrat";src:url(../font/Montserrat-Regular.woff2);font-weight:400;font-display:swap}@font-face{font-family:"Montserrat";src:url(../font/Montserrat-Bold.woff2);font-weight:700;font-display:swap}@font-face{font-family:"Montserrat";src:url(../font/Montserrat-Medium.woff2);font-weight:500;font-display:swap}@font-face{font-family:"Montserrat";src:url(../font/Montserrat-Light.woff2);font-weight:300;font-display:swap}@font-face{font-family:"Montserrat";src:url(../font/Montserrat-SemiBold.woff2);font-weight:600;font-display:swap}body{font-family:"Inter";font-size:16px;line-height:140%;color:#414141}.container{max-width:1440px;padding:0 20px;margin:0 auto}.title,body{font-weight:400}.title{font-family:"Bebas Neue",sans-serif;line-height:100%;font-size:76px}.title span{color:#68cab7}.show-tablet{display:none}.header{background:#0d7161}.header__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:15px 0 23px}.header__logo img{width:103px;height:42px}.header__nav{margin-top:20px}.header__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__item{margin-right:30px;list-style:none}.header__item:last-child{margin-right:0}.header__link{font-size:18px;color:#fff;text-decoration:none}.burger,.form__label input{display:none}.form{padding:120px 0 100px}.form__title{text-align:center}.form__left{width:453px;margin-right:54px}.form__btn{padding:16px 40px;background:-webkit-gradient(linear,left top,left bottom,from(#ffe022),to(#ffc622));background:linear-gradient(180deg,#ffe022 0,#ffc622 100%);font-size:32px;font-family:"Bebas Neue";font-weight:400;line-height:100%;color:#fff;margin-top:25px;cursor:pointer;border:unset;border-radius:12px}.form__label{font-size:16px;font-weight:500;padding-left:47px;margin-top:14px;position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;font-family:"Montserrat"}.form__label span{position:absolute;left:0;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);width:29px;height:29px;background:#68cab7;border-radius:4px;border:1px solid #dadada}.form__label input:checked~span::before{content:"";width:19px;height:19px;position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);background-image:url(../img/check-icon.svg);background-size:100%;background-repeat:no-repeat;background-position:center}.form__item{margin-bottom:25px}.form-list li:last-child,.form__item:last-child{margin-bottom:0}.form__item p{font-size:18px;margin-bottom:6px;font-family:"Montserrat"}.form__item p span{color:#e91313}.form__item input{border:1px solid #efefef;border-radius:12px;width:100%;padding:19px 30px;font-size:18px}.form__item input::-webkit-input-placeholder{color:#b3b3b3}.form__item input::-moz-placeholder{color:#b3b3b3}.form__item input:-ms-input-placeholder{color:#b3b3b3}.form__item input::-ms-input-placeholder{color:#b3b3b3}.form__item input::placeholder{color:#b3b3b3}.form__right{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.form__text{width:440px;margin-right:54px}.form__img{width:399px;height:711px}.form__img img{width:100%;height:100%}.form-wrapper,.guarantee{display:-webkit-box;display:-ms-flexbox;display:flex;margin-top:40px}.guarantee{-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-top:20px}.guarantee img{width:34px;height:44px;margin-right:16px}.form-list li,.form-timer h3,.guarantee p{font-size:18px;font-family:"Montserrat"}.guarantee p{font-weight:500}.form-timer h3{font-size:22px;font-weight:700;line-height:27px;margin-bottom:30px;text-align:center}.form-list{margin-top:40px}.form-list h3{font-size:42px;font-weight:400;font-family:"Bebas Neue";line-height:100%;margin-bottom:20px}.form-list li{padding-left:34px;position:relative;list-style:none;margin-bottom:20px}.form-list li::before{content:"";width:24px;height:24px;position:absolute;left:0;background-image:url(../img/hero-list-icon.svg);background-size:100%;background-repeat:no-repeat;background-position:center}.countdown{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.ring{width:55px;height:55px;position:relative;display:grid;margin-right:10px;place-items:center}.ring svg{-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);overflow:visible}.ring .track{stroke:#ccc;fill:none;stroke-width:1px}.ring .progress{stroke:#68cab7;fill:none;stroke-width:2px;stroke-linecap:round;-webkit-transition:stroke-dashoffset .25s linear;transition:stroke-dashoffset .25s linear}.label,.value{position:absolute}.value{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;font-size:24px;font-family:"Montserrat";font-weight:300}.label{top:-20px;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);text-align:center;font-size:10px;opacity:.8}.footer__menu.show-tablet,.show-mobile{display:none}.footer{background:#313131;padding-top:40px}.footer__logo{width:129px;height:43px;margin-right:41px}.footer__logo img,.ring svg{width:100%;height:100%}.footer-top,.footer__menu{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.footer__menu li{list-style:none;margin-right:30px}.footer__menu li:last-child{margin-right:0}.footer__menu li a{color:#fff;font-size:18px;font-family:"Montserrat";text-decoration:none}.footer-privacy{background:#292929;margin-top:30px;padding:11px 0;color:#9e9e9e;font-size:16px;cursor:pointer;text-align:center;font-family:"Montserrat"}@supports (-webkit-appearance:none){.form__label input:checked~span::before{background-image:url(../img/check-icon.svg)}.form-list li::before{background-image:url(../img/hero-list-icon.svg)}}@media screen and (max-width:1919px){.container{max-width:75vw;padding:0 1.042vw}.title{font-size:3.958vw}.header__inner{padding:.781vw 0 1.198vw}.header__logo img{width:5.365vw;height:2.188vw}.header__nav{margin-top:1.042vw}.header__item{margin-right:1.563vw}.header__link{font-size:.938vw}.form{padding:6.25vw 0 5.208vw}.form__left{width:23.594vw;margin-right:2.813vw}.form__btn{padding:.833vw 2.083vw;font-size:1.667vw;margin-top:1.302vw;border-radius:.625vw}.form__label{font-size:.833vw;padding-left:2.448vw;margin-top:.729vw}.form__label span{width:1.51vw;height:1.51vw;border-radius:.208vw;border:.052vw solid #dadada}.form__label input{display:none}.form__label input:checked~span::before{width:.99vw;height:.99vw}.form__item{margin-bottom:1.302vw}.form__item p{margin-bottom:.313vw}.form__item input{border:.052vw solid #efefef;border-radius:.625vw;padding:.99vw 1.563vw;font-size:.938vw}.form__text{width:22.917vw;margin-right:2.813vw}.form__img{width:20.781vw;height:37.031vw}.form-wrapper{margin-top:2.083vw}.guarantee{margin-top:1.042vw}.guarantee img{width:1.771vw;height:2.292vw;margin-right:.833vw}.footer__menu li a,.form__item p,.guarantee p{font-size:.938vw}.form-timer h3{font-size:1.146vw;line-height:1.406vw;margin-bottom:1.563vw}.form-list{margin-top:2.083vw}.form-list h3,.form-list li{font-size:2.188vw;margin-bottom:1.042vw}.form-list li{padding-left:1.771vw;font-size:.938vw}.form-list li::before{width:1.25vw;height:1.25vw}.ring{width:2.865vw;height:2.865vw;margin-right:.521vw}.ring .track{stroke-width:.052vw}.ring .progress{stroke-width:.104vw}.value{font-size:1.25vw}.label{top:-1.042vw;font-size:.521vw}.footer{padding-top:2.083vw}.footer__logo{width:6.719vw;height:2.24vw;margin-right:2.135vw}.footer__menu li{margin-right:1.563vw}.footer-privacy{margin-top:1.563vw;padding:.573vw 0;font-size:.833vw}}@media screen and (max-width:1024px){.container{max-width:100%;padding:0 2.604vw}.title{font-size:7.552vw}.show-tablet{display:block}.form__label input,.hide-tablet{display:none}.header__inner{padding:1.693vw 0;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;position:relative}.header .burger{display:block;width:6.51vw;height:6.51vw;position:relative;margin-left:auto;background:#fff;border-radius:100%}.header .burger span{width:2.604vw;height:.26vw;position:absolute;border-radius:.521vw;background:#0d7161;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.header .burger span:nth-child(1){top:2.474vw}.header .burger span:nth-child(2){top:3.125vw}.header .burger span:nth-child(3){bottom:2.474vw}.header__logo{margin-left:auto}.header__logo img{width:13.932vw;height:5.729vw}.header__nav{padding:13.021vw}.header__menu{display:none;position:absolute;width:100%;height:max;top:0;left:0;z-index:10;background:#fff}.header__menu.active{display:block}.header .mob-close{position:absolute;top:5.208vw;right:2.604vw;cursor:pointer;width:2.344vw;height:2.344vw}.header .mob-close img{width:100%;height:100%}.header__list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.header__item{margin-right:0;text-align:center;margin-bottom:6.51vw}.footer__menu li:last-child,.header__item:last-child{margin-bottom:0}.header__link{color:#414141;font-size:2.604vw}.form{padding:100px 0 80px}.form__right{margin-top:25px}.form__left{width:100%;margin-right:0}.form__btn{padding:20px;width:100%;font-size:40px;margin-top:25px;border-radius:12px}.form__label{font-size:18px;padding-left:47px;margin-top:20px}.form__label span{width:29px;height:29px;border-radius:4px;border:1px solid #dadada}.form__label input:checked~span::before{width:19px;height:19px}.form__item{margin-bottom:25px}.form__item p{margin-bottom:6px}.form__item input{border:1px solid #efefef;border-radius:12px;padding:19px 30px;font-size:18px}.form__text{width:440px;margin-right:31px}.form__img{width:257px;height:536px}.form-wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-top:40px}.guarantee{margin-top:20px}.guarantee img{width:34px;height:44px;margin-right:16px}.form-list li,.form__item p,.guarantee p{font-size:18px}.form-timer{margin-top:30px}.form-timer h3{font-size:22px;line-height:27px;margin-bottom:30px}.form-list{margin-top:16px}.form-list h3{font-size:42px;margin-bottom:16px}.form-list li{padding-left:34px;margin-bottom:20px}.form-list li::before{width:24px;height:24px}.ring{width:55px;height:55px;margin-right:10px}.ring .track{stroke-width:1px}.ring .progress{stroke-width:2px}.value{font-size:24px}.label{top:-20px;font-size:10px}.footer{padding-top:5.208vw}.footer__logo{width:28.255vw;height:11.589vw;margin-left:auto;margin-right:auto}.footer__menu{margin-top:6.51vw}.footer__menu.show-tablet{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;width:100%;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.footer__menu li{margin-right:0;margin-bottom:5.208vw}.footer__menu li a{font-size:2.604vw;font-weight:600}.footer-privacy{margin-top:7.813vw;padding:1.432vw 0;font-size:2.083vw}}@media screen and (max-width:650px){.container{padding:0 3.623vw}.title{font-size:9.662vw}.header__inner{padding:5.072vw 0}.header .burger{width:7.246vw;height:3.14vw;background:0 0}.header .burger span{width:100%;height:.725vw;border-radius:0;background:#fff;left:0;-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}.header .burger span:nth-child(1){top:0}.header .burger span:nth-child(2){top:1.208vw}.header .burger span:nth-child(3){bottom:0}.header__logo{margin-left:auto}.header__logo img{width:22.222vw;height:9.179vw}.header__nav{padding:24.155vw 0 19.324vw}.header__menu{top:2.415vw}.header .mob-close{position:absolute;top:5.314vw;right:5.314vw;width:4.831vw;height:4.831vw}.header__item{margin-bottom:3.623vw}.header__link{font-size:4.348vw}.form{padding:50px 0 60px}.form-top{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.form__title{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2;text-align:left;margin-top:50px}.form__label input,.form__title br{display:none}.form__timer{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.form__right{margin-top:25px}.form__left{width:100%;margin-right:0}.form__btn{padding:20px 25px;font-size:30px;margin-top:20px;border-radius:12px}.form__label{font-size:18px;padding-left:47px;margin-top:10px}.form__label span{width:29px;height:29px;border-radius:4px;border:1px solid #dadada}.form__label input:checked~span::before{width:19px;height:19px}.form__item{margin-bottom:10px}.form__item p{margin-bottom:6px}.form__item input{border:1px solid #efefef;border-radius:12px;padding:19px 30px;font-size:18px}.form__text{width:100%;margin-right:0;display:none}.form__img{width:100%;height:auto}.form-wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-top:80px}.guarantee{margin-top:14px}.guarantee img{width:34px;height:44px;margin-right:16px}.form__item p,.guarantee p{font-size:18px}.form-timer{margin-top:0}.form-timer h3{font-size:17px;line-height:21px;margin-bottom:23px}.form-list{margin-top:25px}.form-list h3,.form-list li{font-size:32px;margin-bottom:10px}.form-list li{padding-left:34px;font-size:16px}.form-list li::before{width:24px;height:24px}.ring{width:43px;height:43px;margin-right:7px}.ring .track{stroke-width:1px}.ring .progress{stroke-width:2px}.value{font-size:18px}.label{top:-20px;font-size:8px}.show-mobile{display:block}.hide-mobile{display:none}.footer{padding-top:7.246vw}.footer__logo{width:31.159vw;height:12.802vw}.footer__menu{margin-top:8.696vw;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.footer__menu li,.footer__menu ul{margin-bottom:2.415vw}.footer__menu li{text-align:center}.footer__menu li a{font-size:4.348vw;font-weight:400}.footer-privacy{margin-top:11.111vw;padding:2.657vw 0;font-size:3.865vw}}/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGE6O2NoYXJzZXQ9dXRmLTgsJTBEJTBBKiUyMCU3QiUwRCUwQSUyMCUyMCUyMCUyMG1hcmdpbjolMjAwOyUwRCUwQSUyMCUyMCUyMCUyMHBhZGRpbmc6JTIwMDslMEQlMEElMjAlMjAlMjAlMjBib3gtc2l6aW5nOiUyMGJvcmRlci1ib3glMEQlMEElN0QlMEQlMEEkZ3JheTolMjM0MTQxNDE7JTBEJTBBJHdoaXRlOiUyM2ZmZjslMEQlMEEkYmx1ZTolMjM2OENBQjc7JTBEJTBBaHRtbCU3QiUwRCUwQSUyMCUyMHNjcm9sbC1iZWhhdmlvcjolMjBzbW9vdGg7JTBEJTBBJTdEJTBEJTBBbWFpbiU3QiUwRCUwQSUyMCUyMCUyMCUyMG92ZXJmbG93OiUyMGhpZGRlbjslMEQlMEElN0QlMEQlMEFAZm9udC1mYWNlJTIwJTdCJTBEJTBBJTIwJTIwJTIwJTIwZm9udC1mYW1pbHk6JTIwJTIyQmViYXMlMjBCb29rJTIyOyUwRCUwQSUyMCUyMCUyMCUyMHNyYzolMjB1cmwoJTIyLi4vZm9udC9CZWJhc05ldWVCb29rLndvZmYyJTIyKTslMEQlMEElMjAlMjAlMjAlMjBmb250LXdlaWdodDolMjA0MDA7JTBEJTBBJTIwJTIwJTIwJTIwZm9udC1kaXNwbGF5OiUyMHN3YXA7JTBEJTBBJTdEJTBEJTBBJTBEJTBBQGZvbnQtZmFjZSUyMCU3QiUwRCUwQSUyMCUyMCUyMCUyMGZvbnQtZmFtaWx5OiUyMCUyMkludGVyJTIyOyUwRCUwQSUyMCUyMCUyMCUyMHNyYzolMjB1cmwoJTIyLi4vZm9udC9JbnRlci1SZWd1bGFyLndvZmYyJTIyKTslMEQlMEElMjAlMjAlMjAlMjBmb250LXdlaWdodDolMjA0MDA7JTBEJTBBJTIwJTIwJTIwJTIwZm9udC1kaXNwbGF5OiUyMHN3YXA7JTBEJTBBJTdEJTBEJTBBQGZvbnQtZmFjZSUyMCU3QiUwRCUwQSUyMCUyMCUyMCUyMGZvbnQtZmFtaWx5OiUyMCUyMkludGVyJTIyOyUwRCUwQSUyMCUyMCUyMCUyMHNyYzolMjB1cmwoJTIyLi4vZm9udC9JbnRlci1Cb2xkLndvZmYyJTIyKTslMEQlMEElMjAlMjAlMjAlMjBmb250LXdlaWdodDolMjA3MDA7JTBEJTBBJTIwJTIwJTIwJTIwZm9udC1kaXNwbGF5OiUyMHN3YXA7JTBEJTBBJTdEJTBEJTBBQGZvbnQtZmFjZSUyMCU3QiUwRCUwQSUyMCUyMGZvbnQtZmFtaWx5OiUyMCUyMkludGVyJTIyOyUwRCUwQSUyMCUyMHNyYzolMjB1cmwoJTIyLi4vZm9udC9JbnRlci1NZWRpdW0ud29mZjIlMjIpOyUwRCUwQSUyMCUyMGZvbnQtd2VpZ2h0OiUyMDUwMDslMEQlMEElMjAlMjBmb250LWRpc3BsYXk6JTIwc3dhcDslMEQlMEElN0QlMEQlMEFAZm9udC1mYWNlJTIwJTdCJTBEJTBBJTIwJTIwZm9udC1mYW1pbHk6JTIwJTIySW50ZXIlMjI7JTBEJTBBJTIwJTIwc3JjOiUyMHVybCglMjIuLi9mb250L0ludGVyLUxpZ2h0QkVUQS53b2ZmMiUyMik7JTBEJTBBJTIwJTIwZm9udC13ZWlnaHQ6JTIwMzAwOyUwRCUwQSUyMCUyMGZvbnQtZGlzcGxheTolMjBzd2FwOyUwRCUwQSU3RCUwRCUwQUBmb250LWZhY2UlMjAlN0IlMEQlMEElMjAlMjBmb250LWZhbWlseTolMjAlMjJNb250c2VycmF0JTIyOyUwRCUwQSUyMCUyMHNyYzolMjB1cmwoJTIyLi4vZm9udC9Nb250c2VycmF0LVJlZ3VsYXIud29mZjIlMjIpOyUwRCUwQSUyMCUyMGZvbnQtd2VpZ2h0OiUyMDQwMDslMEQlMEElMjAlMjBmb250LWRpc3BsYXk6JTIwc3dhcDslMEQlMEElN0QlMEQlMEFAZm9udC1mYWNlJTIwJTdCJTBEJTBBJTIwJTIwZm9udC1mYW1pbHk6JTIwJTIyTW9udHNlcnJhdCUyMjslMEQlMEElMjAlMjBzcmM6JTIwdXJsKCUyMi4uL2ZvbnQvTW9udHNlcnJhdC1Cb2xkLndvZmYyJTIyKTslMEQlMEElMjAlMjBmb250LXdlaWdodDolMjA3MDA7JTBEJTBBJTIwJTIwZm9udC1kaXNwbGF5OiUyMHN3YXA7JTBEJTBBJTdEJTBEJTBBQGZvbnQtZmFjZSUyMCU3QiUwRCUwQSUyMCUyMGZvbnQtZmFtaWx5OiUyMCUyMk1vbnRzZXJyYXQlMjI7JTBEJTBBJTIwJTIwc3JjOiUyMHVybCglMjIuLi9mb250L01vbnRzZXJyYXQtTWVkaXVtLndvZmYyJTIyKTslMEQlMEElMjAlMjBmb250LXdlaWdodDolMjA1MDA7JTBEJTBBJTIwJTIwZm9udC1kaXNwbGF5OiUyMHN3YXA7JTBEJTBBJTdEJTBEJTBBQGZvbnQtZmFjZSUyMCU3QiUwRCUwQSUyMCUyMGZvbnQtZmFtaWx5OiUyMCUyMk1vbnRzZXJyYXQlMjI7JTBEJTBBJTIwJTIwc3JjOiUyMHVybCglMjIuLi9mb250L01vbnRzZXJyYXQtTGlnaHQud29mZjIlMjIpOyUwRCUwQSUyMCUyMGZvbnQtd2VpZ2h0OiUyMDMwMDslMEQlMEElMjAlMjBmb250LWRpc3BsYXk6JTIwc3dhcDslMEQlMEElN0QlMEQlMEFAZm9udC1mYWNlJTIwJTdCJTBEJTBBJTIwJTIwZm9udC1mYW1pbHk6JTIwJTIyTW9udHNlcnJhdCUyMjslMEQlMEElMjAlMjBzcmM6JTIwdXJsKCUyMi4uL2ZvbnQvTW9udHNlcnJhdC1TZW1pQm9sZC53b2ZmMiUyMik7JTBEJTBBJTIwJTIwZm9udC13ZWlnaHQ6JTIwNjAwOyUwRCUwQSUyMCUyMGZvbnQtZGlzcGxheTolMjBzd2FwOyUwRCUwQSU3RCUwRCUwQSUwRCUwQWJvZHklMjAlN0IlMEQlMEElMjAlMjBmb250LWZhbWlseTolMjAlMjJJbnRlciUyMjslMEQlMEElMjAlMjBmb250LXdlaWdodDolMjA0MDA7JTBEJTBBJTIwJTIwZm9udC1zaXplOiUyMDE2cHg7JTBEJTBBJTIwJTIwbGluZS1oZWlnaHQ6JTIwMTQwJTI1OyUwRCUwQSUyMCUyMGNvbG9yOiUyMCUyMzQxNDE0MTslMEQlMEElN0QlMEQlMEElMEQlMEEuY29udGFpbmVyJTdCJTBEJTBBJTIwJTIwbWF4LXdpZHRoOiUyMDE0NDBweDslMEQlMEElMjAlMjBwYWRkaW5nOiUyMDAlMjAyMHB4OyUwRCUwQSUyMCUyMG1hcmdpbjolMjAwJTIwYXV0bzslMEQlMEElMjAlMjBAbWVkaWElMjBzY3JlZW4lMjBhbmQlMjAobWF4LXdpZHRoOiUyMDE5MTlweCklMjAlN0IlMEQlMEElMjAlMjAlMjAlMjBtYXgtd2lkdGg6JTIwNzV2dzslMEQlMEElMjAlMjAlMjAlMjBwYWRkaW5nOiUyMDAlMjAxLjA0MnZ3OyUwRCUwQSUyMCUyMCU3RCUyMCUwRCUwQSUyMCUyMEBtZWRpYSUyMHNjcmVlbiUyMGFuZCUyMChtYXgtd2lkdGg6JTIwMTAyNHB4KSUyMCU3QiUwRCUwQSUyMCUyMCUyMCUyMG1heC13aWR0aDolMjAxMDAlMjU7JTBEJTBBJTIwJTIwJTIwJTIwcGFkZGluZzolMjAwJTIwMi42MDR2dzslMEQlMEElMjAlMjAlN0QlMjAlMEQlMEElMjAlMjBAbWVkaWElMjBzY3JlZW4lMjBhbmQlMjAobWF4LXdpZHRoOiUyMDY1MHB4KSUyMCU3QiUwRCUwQSUyMCUyMCUyMCUyMHBhZGRpbmc6JTIwMCUyMDMuNjIzdnc7JTBEJTBBJTIwJTIwJTdEJTIwJTBEJTBBJTdEJTBEJTBBLnRpdGxlJTdCJTBEJTBBJTIwJTIwZm9udC1mYW1pbHk6JTIwJTIyQmViYXMlMjBOZXVlJTIyLCUyMHNhbnMtc2VyaWY7JTBEJTBBJTIwJTIwbGluZS1oZWlnaHQ6JTIwMTAwJTI1OyUwRCUwQSUyMCUyMGZvbnQtd2VpZ2h0OiUyMDQwMDslMEQlMEElMjAlMjBmb250LXNpemU6JTIwNzZweDslMEQlMEElMjAlMjAmJTIwc3BhbiU3QiUwRCUwQSUyMCUyMCUyMCUyMGNvbG9yOiUyMCRibHVlOyUwRCUwQSUyMCUyMCU3RCUwRCUwQSUyMCUyMEBtZWRpYSUyMHNjcmVlbiUyMGFuZCUyMChtYXgtd2lkdGg6JTIwMTkxOXB4KSUyMCU3QiUwRCUwQSUyMCUyMCUyMCUyMGZvbnQtc2l6ZTolMjAzLjk1OHZ3OyUwRCUwQSUyMCUyMCU3RCUwRCUwQSUyMCUyMEBtZWRpYSUyMHNjcmVlbiUyMGFuZCUyMChtYXgtd2lkdGg6JTIwMTAyNHB4KSUyMCU3QiUwRCUwQSUyMCUyMCUyMCUyMGZvbnQtc2l6ZTolMjA3LjU1MnZ3OyUwRCUwQSUyMCUyMCU3RCUwRCUwQSUyMCUyMEBtZWRpYSUyMHNjcmVlbiUyMGFuZCUyMChtYXgtd2lkdGg6JTIwNjUwcHgpJTIwJTdCJTBEJTBBJTIwJTIwJTIwJTIwZm9udC1zaXplOiUyMDkuNjYydnc7JTBEJTBBJTIwJTIwJTdEJTBEJTBBJTdEJTBEJTBBLnNob3ctdGFibGV0JTdCJTBEJTBBJTIwJTIwJTIwJTIwZGlzcGxheTolMjBub25lOyUwRCUwQSU3RCUwRCUwQUBtZWRpYSUyMHNjcmVlbiUyMGFuZCUyMChtYXgtd2lkdGg6JTIwMTAyNHB4KSUyMCU3QiUwRCUwQSUyMCUyMCUyMCUyMC5zaG93LXRhYmxldCU3QiUwRCUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMGRpc3BsYXk6JTIwYmxvY2s7JTBEJTBBJTIwJTIwJTIwJTIwJTdEJTBEJTBBJTIwJTIwJTIwJTIwLmhpZGUtdGFibGV0JTdCJTBEJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwZGlzcGxheTolMjBub25lOyUwRCUwQSUyMCUyMCUyMCUyMCU3RCUwRCUwQSU3RCUwRCUwQSUwRCUwQUBpbXBvcnQlMjAlMjJibG9jay9faGVhZGVyLnNjc3MlMjI7JTBEJTBBQGltcG9ydCUyMCUyMmJsb2NrL19mb3JtLnNjc3MlMjI7JTBEJTBBJTBEJTBBQGltcG9ydCUyMCUyMmJsb2NrL19mb290ZXIuc2NzcyUyMjsiLCJvcmRlci5taW4uY3NzIiwib3JkZXIuY3NzIiwiZmlsZTovQTovJUQwJTlGJUQxJTgwJUQwJUJFJUQwJUI1JUQwJUJBJUQxJTgyJUQxJThCL3NlcmF2ZWxsZWEvc3JjL3Nhc3MvYmxvY2svX2hlYWRlci5zY3NzIiwiZmlsZTovQTovJUQwJTlGJUQxJTgwJUQwJUJFJUQwJUI1JUQwJUJBJUQxJTgyJUQxJThCL3NlcmF2ZWxsZWEvc3JjL3Nhc3MvYmxvY2svX2Zvcm0uc2NzcyIsImZpbGU6L0E6LyVEMCU5RiVEMSU4MCVEMCVCRSVEMCVCNSVEMCVCQSVEMSU4MiVEMSU4Qi9zZXJhdmVsbGVhL3NyYy9zYXNzL2Jsb2NrL19mb290ZXIuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxDLENBQ0ksUSxDQUNBLFMsQ0FDQSw2QixDQ0FGLHFCLENES0YsSSxDQUNFLHNCLENBRUYsSSxDQUNJLGUsQ0FFSixXQUNJLHdCLENBQ0Esb0MsQ0FDQSxlLENBQ0Esa0IsQUNHSixXREVJLG1CLENBQ0Esb0MsQ0FDQSxlLENFREosa0IsQURJQSxXREVJLG1CLENBQ0EsaUMsQ0VESixlLENGR0Esa0IsQUNFQSxXREVFLG1CLENFREYsbUMsQ0ZHQSxlLENBQ0Usa0IsQUNFRixXQ0FBLG1CLENGR0Esc0MsQ0FDRSxlLENBQ0Esa0IsQUVDRixXRkdBLHdCLENBQ0UseUMsQ0FDQSxlLENBQ0Esa0IsQUFHRixXQUNFLHdCLENBQ0Esc0MsQ0FDQSxlLENBQ0Esa0IsQUNFRixXREVFLHdCLENBQ0Esd0MsQ0FDQSxlLENFREYsa0IsQURJQSxXREVFLHdCLENBQ0EsdUMsQ0VERixlLENGSUEsa0IsQUNDQSxXREdFLHdCLENBQ0EsMEMsQ0VGRixlLENERUUsa0JBR0YsSSxDREdFLG1CLENBQ0EsYyxDQUpGLGdCLENDS0UsYSxDQ0VGLFUsQ0ZDRSxnQixDQVJGLGMsQ0NXRSxhLENDRUYsTSxDRGJBLEksQ0FpQkUsZSxDQ0pGLE0sQ0ZERSxtQyxDQVpGLGdCLENFaUJFLGMsQ0ZERixXLENBQ0UsYSxDQ1FGLFksQ0NBQSxZLENBR0EsTyxDRkpFLGtCLENDU0YsYyxDQ0FBLG1CLENGTkUsbUIsQ0FYRixZLENDcUJFLHdCLENDQUEscUIsQ0FDRiw2QixDRlJFLHdCLENBZEYscUIsQ0MwQkUsa0IsQ0NBQSxtQixDRlJGLGlCLENBQ0ksVyxDRVlKLFcsQ0RJQSxZLENBQ0UsZSxDQUdGLGEsQ0NBRSxtQixDQUNGLG1CLENDN0lBLFksQ0FDSSx3QixDRCtJSixxQixDQzVJSSxrQixDRmlKSixhLENFL0lRLGlCLENGaUpOLGUsQ0FHRix3QixDQUNFLGMsQ0U3SU0sYSxDQUNJLGMsQ0FDQSxVLENEMElaLG9CLENBR0EsTyxDRGlFQSxrQixDRTdMSSxZLENGdUlKLEssQ0VwSVEscUIsQ0Q2SFIsWSxDQ3hISSxpQixDRDRISixXLENDeEhRLFcsQ0FDSSxpQixDRnVJWixVLENFL0hRLGlCLENBQ0Esa0YsQ0RzSFIseUQsQ0RZRSxjLENFOUhGLHdCLENBQ0ksZSxDRHFISixnQixDRFlFLFUsQ0UvSEYsZSxDQUVJLGMsQ0ZnSUYsWSxDQ1ZBLGtCLENEY0YsWSxDQ1ZFLGMsQ0M3R0UsZSxDRjBIRixpQixDQ1ZBLGUsQ0N4R0UsaUIsQ0ZxSEYsbUIsQ0NWQSxtQixDQ3RHRSxZLENGbUhGLHdCLENFOUdGLGlCLENBRUksaUIsQ0ZpSEYsTSxDQUNBLE8sQ0FDQSxrQyxDQUNBLDhCLENBQ0EsMEIsQ0NaQSxVLENDcEdFLFcsQ0ZtSEYsa0IsQ0FDQSxpQixDQUNBLHdCLENBT0YsdUMsQ0FDRSxVLENBQ0EsVSxDQUNBLFcsQ0FDQSxpQixDQUNBLE8sQ0FDQSxRLENBQ0Esc0MsQ0FDQSxrQyxDQ2RBLDhCLENDdEdNLDJDLENGdUhOLG9CLENDZEEsMkIsQ0N0R00sMEIsQ0Z5SFIsVyxDQUNFLGtCLENBZ0lGLHdCLENBN0hBLHNCLENDZEUsZSxDRGtCRixhLENDZEUsYyxDQ3BHRSxpQixDRnFIRix3QixDQUdGLGtCLENBQ0UsYSxDQUdGLGlCLENBQ0Usd0IsQ0FDQSxrQixDQUNBLFUsQ0NkQSxpQixDQ3JHSSxjLENGd0hOLDRDLENBQ0UsYSxDQUdGLG1DLENBQ0UsYSxDQUdGLHVDLENBQ0UsYSxDQUdGLHdDLENBQ0UsYSxDQUdGLDhCLENDakJFLGEsQ0RxQkYsWSxDQUNFLG1CLENDakJBLG1CLENDckdJLFksQ0Z5SEosd0IsQ0NqQkEscUIsQ0NwR0Usa0IsQ0YwSEosVyxDQ2pCQSxXLENDbkdBLGlCLENGeUhBLFUsQ0VwSEksVyxDRnNIRixZLENBR0YsYyxDRXJITSxVLENGdUhKLFcsQ0FHRixhLENBT0EsVSxDQU5FLG1CLENBQ0EsbUIsQ0FDQSxZLENBQ0EsZSxDQUdGLFUsQ0NoQkUsd0IsQ0NwR00scUIsQ0YwSE4sa0IsQ0NuQkEsZSxDRHVCRixjLENFdkhNLFUsQ0Z5SEosVyxDQUNBLGlCLENBOEJGLGEsQ0FyQkEsYyxDQU5BLFksQ0d6VFEsYyxDQUNBLHdCLENId1RSLFksQ0VySEksZSxDRjJISixjLENBQ0UsYyxDQUNBLGUsQ0FDQSxnQixDQ2xCQSxrQixDQ2xHRSxpQixDRjBISixVLENBQ0UsZSxDRy9WRixhLENBRUksYyxDRjhVSixlLENFclVJLHdCLENBQ0ksZ0IsQ0Z1VVIsa0IsQ0R1QkEsYSxDQ25CQSxpQixDRWxVSSxpQixDQUVJLGUsQ0FDQSxrQixDSCtWUixxQixDR3ZWUSxVLENGb1VSLFUsQ0VqVUksVyxDQUNJLGlCLENBQ0EsTSxDQUNBLCtDLENBQ0Esb0IsQ0FDQSwyQixDQUNBLDBCLENIMFZSLFUsQ0N0QkEsbUIsQ0VsVVEsbUIsQ0FDSSxZLENBQ0EsdUIsQ0FDQSxvQixDQUNBLHNCLENIMlZWLHdCLENBQ0EscUIsQ0czVlUsa0IsQ0grVlosSyxDRzNWWSxVLENGb1VaLFcsQ0VsVVEsaUIsQ0FDSSxZLENGb1VaLGlCLENFblVZLGtCLENIZ1daLFMsQ0cxVmdCLGdDLENBQ0EsNEIsQ0g4VmQsd0IsQ0FDQSxnQixDQUdGLFksQ0c5VmdCLFcsQ0ZxVWhCLFMsQ0VoVUksZ0IsQ0FFSSxlLENBQ0ksYyxDRm1VWixTLENFalVRLGdCLENBQ0ksb0IsQ0FDQSxnRCxDQUNBLHdDLENGZ1ZaLE0sQ0RnQkEsTSxDR3JWWSxpQixDSHFWWixNLENHM1ZRLG1CLENBQ0ksbUIsQ0FDQSxZLENBQ0Esd0IsQ0FDQSxxQixDQUNBLGtCLENGbVVaLHVCLENFbFVZLG9CLENBQ0ksc0IsQ0FESixjLENBQ0ksd0IsQ0ZvVWhCLGUsQ0FBQSxNLENFcFVnQixTLENGb1VoQixRLENFclVZLGtDLENBQ0ksOEIsQ0ZvVWhCLDBCLENFN1RJLGlCLENBQ0ksYyxDQUFBLFUsQ0hzWVIseUIsQ0E3QkEsWSxDQUNFLFksQ0FHRixPLENHcldRLGtCLENGNFRSLGdCLENEOENBLGEsQ0MxQ0EsVyxDRXhUUSxXLENBQ0ksaUIsQ0h1V1osaUIsQ0FwRUEsUyxDRzdSQSxVLENBQ0ksVyxDSGtZSixXLENBN0JBLGEsQ0M1Q0EsbUIsQ0Q4Q0UsbUIsQ0duV0YsWSxDQUNJLHdCLENBQUEscUIsQ0FBQSxrQixDSDZXSixnQixDR3hXUSxlLENBQ0EsaUIsQ0g0V1IsMkIsQ0d4V1EsYyxDSDRXUixrQixDR3ZXSSxVLENBQ0ksYyxDQUNBLHdCLENBQ0Esb0IsQ0hvWFIsZSxDR3ZXUSxrQixDQUNBLGUsQ0Z3VFIsYyxDRXRUSSxhLENBQ0ksYyxDQUNBLGMsQ0FDQSxpQixDQUNBLHdCLENGMFRSLFdBQUEsdUIsRUV2VFEsdUMsQ0FDSSwyQyxDQUdBLHFCLENBQ0EsaUQsQUg2V1oscUNHeFdZLFUsQ0FDQSxjLENBQ0EsaUIsQ0FTWixNLENBQ0ksaUIsQ0FDQSxjLENIc1dBLHdCLENBR0YsaUIsQ0FDRSxhLENDdERKLGMsQ0UvU0ksWSxDQUNBLGtCLENBR0EsYSxDQUNBLG9CLENBR0osYSxDQUNJLGdCLENINFdGLEssQ0FDRSx3QixDQUdGLFcsQ0cxV0YsYyxDQUNJLG9CLENGcVRKLFUsQ0QwREksc0IsQ0cxV0osaUIsQ0FDSSxrQixDQUNBLG9CLENBR0EsWSxDQUFBLGdCLENGbVRKLG9CLENEMkRJLGlCLENHeldBLGlCLENBQUEsWSxDQUFBLGEsQ0FDQSxvQixDSCtXQSwyQixDQUdGLGtCLENBQ0UsWSxDRy9XQSx1QyxDQUNBLFcsQ0ZtVEosWSxDRTlTSSxXLENBQ0EscUIsQ0hvWEYsYSxDR2pYRSxvQixDRm9USixpQixDRG1FSSwyQixDR2hYSixvQixDQUNJLHFCLENBQ0ksZ0IsQ0hvWE4sVyxDR2hYVSxjLENGZ1RWLG9CLENEcUVBLFUsQ0cvV1UsYyxDQUNBLGUsQ0htWFYsYSxDRzlXVSxrQixDQUdBLFUsQ0FDSSxrQixDSGtYZCxjLENDakVBLGEsQ0UzU1UsYyxDQUNJLG1CLENBNEZaLGtCLENIaVBGLGEsQ0FvQ0EsWSxDRzdXa0IsZ0IsQ0hpWGxCLGMsQ0NqRUEsaUIsQ0V4U1UsbUIsQ0FDSSxxQixDQUlKLFUsQ0FDSSxrQixDSDZXZCxhLENDN0RBLGEsQ0FKQSxpQixDRXJTTSxxQixDRnlTTixhLENFcFNNLG9CLENBQ0ksZ0IsQ0gyV1YscUIsQ0NqRUEsWSxDRWpTRSxhLENBR0ksSyxDQUNJLGEsQ0FDQSxjLENBQ0EsbUIsQ0h1V1YsWSxDQ2pFQSxtQixDRHFFQSxlLENHL1ZVLG1CLENIbVdWLE0sQ0NqRUEsZ0IsQ0RxRUEsTSxDQ2pFQSxZLENFMVJNLGdCLENIZ1dOLE8sQ0NqRUEsbUIsQ0RxRUEsYSxDQ2pFQSxhLENFdlJFLGEsQ0FDSSxvQixDRjJSTixnQixDRXRSRSxvQixDSGdXRixlLENDakVBLGtCLENFblJFLGdCLENBQ0ksa0IsQUg4VlIscUNBQ0UsVSxDQ2pFQSxjLENFcFJNLGlCLENGd1JOLE0sQ0VuUk0saUIsQ0h5Vk4sWSxDR3JWVSxhLENGMlpWLGtCLENFdlpNLFksQ0FDSSxZLENGc1JWLGMsQ0VsUlUsaUIsQ0FDSSxzQixDQUNBLG1CLENBQ0EscUIsQ0FDQSxpQixDSHdWZCxlLENDakVBLGEsQ0VqUmMsWSxDQUNJLGEsQ0FDQSxpQixDRm1SbEIsZ0IsQ0U5UU0sZSxDQUNJLGtCLENIb1ZWLG9CLENHaFZjLGEsQ0ZnUmQsWSxDRTdRVSxpQixDQUNJLG9CLENBQ0Esa0IsQ0FDQSxRLENBQ0Esa0MsQ0YrUWQsOEIsQ0UzUU0sMEIsQ0YrUU4saUMsQ0UxUU0sVyxDRjhRTixpQyxDRXhRRSxXLENIOFVGLGlDLENBQ0UsYyxDRzFVQSxhLENBQ0ksZ0IsQ0hnVk4saUIsQ0c1VVUsYyxDQUNBLGMsQ0hnVlYsWSxDQ3BFQSxnQixDQUdBLGEsQ0VyUU0sWSxDQUNJLGlCLENBQ0EsVSxDQUNBLFUsQ0Z1UVYsSyxDRW5RRSxNLENBQ0ksVSxDRnFRTixlLENEd0VBLG9CLENDcEVBLGEsQ0R3RUEsa0IsQ0d2VVUsaUIsQ0ZvUVYsVyxDRWxRVSxhLENBQ0ksYyxDQUNBLGEsQ0ZvUWQsYyxDRHdFQSxzQixDR3BVTSxVLENGaVFOLFcsQ0FHQSxhLENFN1BFLDJCLENBQ0ksNEIsQ0YrUE4seUIsQ0U1UEUscUIsQ0FJQSxhLENBQ0ksYyxDQUNBLGlCLENGNlBOLG9CLENHcnVCYywyQixDRDRlWix3QixDRjZQSixlLENFMVBJLGEsQ0FDSSxhLENGOFBOLGlCLENEd0VBLEssQ0dwVVUsb0IsQ0h3VVYsWSxDQUNFLGUsQ0FHRixXLENBQ0UsVSxDQUNBLGMsQ0N6RUYsVSxDRTlQVSxZLENBQ0ksVSxDRmdRZCxjLENFN1BNLGUsQ0FDSSxrQixDRitQVixZLENFN1BNLGMsQ0FDSSxpQixDRitQVixlLENEaUZBLGlCLENDN0VBLFUsQ0U1UE0sVyxDQUNJLGlCLENBQ0Esd0IsQ0hrVlYsdUMsQ0M3RUEsVSxDRTNQVSxXLENINlVWLFcsQ0d6VWMsa0IsQ0g2VWQsYSxDR3ZVYyxpQixDRjhQZCxpQixDRXZQTSx3QixDQUNJLGtCLENGeVBWLGlCLENFdlBVLGMsQ0YyUFYsVyxDRXRQVSxXLENBQ0ksaUIsQ0h3VWQsVSxDQzdFQSxXLENFcFBNLFksQ0hzVU4sYSxDQzdFQSwyQixDRW5QTSw0QixDQUNJLHlCLENBQ0EscUIsQ0ZxUFYsZSxDRGlGQSxVLENBQ0UsZSxDQzlFRixjLENFaFBFLFUsQ0FDSSxXLENGa1BOLGlCLENEMkdBLGEsQ0EvREEsYSxDQXdDQSxZLENHalVVLGMsQ0hxVVYsVyxDQ2hGQSxlLENBR0EsYyxDRTlPTSxjLENBQ0ksZ0IsQ0FDQSxrQixDQUtSLFUsQ0FDSSxlLENIaVVOLGEsQ0c3VFUsYyxDRjhPVixrQixDRG9GQSxhLENHNVRVLGlCLENBRUEsa0IsQ0YrT1YscUIsQ0V4T0UsVSxDQUNJLFcsQ0Y0T04sSyxDRXZPRSxVLENBQ0ksVyxDRnlPTixpQixDQUdBLFksQ0VyT0UsZ0IsQ0FJQSxlLENBQ0ksZ0IsQ0FHSixNLENBQ0ksYyxDSHlUTixNLENDaEZBLFMsQ0FDRixjLENHajVCSSxPLENIcTVCSixtQixDR2g1QlEsYSxDQUNBLGMsQ0hvNUJSLGUsQ0dsNUJZLGdCLENBQ0EsaUIsQ0FPSixhLENBQUEsaUIsQ0pxK0JOLHlCLENBQ0UsbUIsQ0NwRkosbUIsQ0doNUJRLFksQ0FDSSxrQixDSGs1QlosYyxDR2g1QlEsVSxDQUNJLHdCLENBQ0EscUIsQ0hrNUJaLDZCLENBR0EsZ0IsQ0dqNUJZLGMsQ0FDSSxxQixDQVdaLGtCLENBQUEsaUIsQ0FBQSxlLENKdytCRixlLENDeEZGLGtCLENEMEZJLGlCLENJdCtCSixtQixBSisrQkEsb0NDeEZBLFUsQ0QwRkksaUIsQ0FHRixNLENDeEZBLGlCLENENEZBLGMsQ0l2K0JVLGlCLENKMitCVixlLENDeEZBLGEsQ0c1NEJjLGEsQ0FDSSxjLENKeStCbEIsb0IsQ0lqK0JNLFUsQ0FDQSxhLENIMDRCTixlLENBQ0YsZSxDR3g0QkEsTSxDQUNJLCtCLENBQ0ksMkIsQ0gwNEJOLHVCLENENEZBLGlDLENJaitCVSxLLENINDRCVixpQyxDR3Y0Qk0sVyxDQUdJLGlDLENBQ0ksUSxDSm8rQmQsYSxDQUNFLGdCLENBR0YsaUIsQ0FDRSxjLENDN0ZGLGMsQ0RpR0EsWSxDQzdGQSwyQixDQUdBLGEsQ0duNEJjLFcsQ0h1NEJkLGtCLENHLzNCRSxpQixDQUNJLFcsQ0FDQSxhLENBQ0EsYSxDSGk0Qk4sYyxDRzczQkUsYSxDQUNJLHFCLENKaStCTixhLENJNzlCVSxpQixDSmkrQlYsSyxDSTU5QlUsbUIsQ0pnK0JWLFMsQ0kvOUJVLG1CLENKaStCUixtQixDQUNBLFksQ0NsR0YsMkIsQ0c5M0JVLDRCLENBQ0kseUIsQ0hnNEJkLHFCLENEc0dBLFksQ0NsR0EsMkIsQ0c3M0JjLGdCLENBQ0ksTyxDQUNBLGUsQ0grM0JsQixlLENENklBLGtCLENBdkNBLGUsQ0k1OUJNLFksQ0g2M0JSLFksQ0FDQSwyQixDQUNBLGdCLENBQ0EsTyxDRHNHRSxZLENDbEdGLGUsQ0RzR0UsVyxDQ2xHRixVLENEb0dJLGMsQ0NoR0osVSxDRG9HSSxpQixDQ2xHSixjLENEb0dJLGUsQ0NsR0osa0IsQ0RzR0UsWSxDQ2xHRixjLENEb0dJLGlCLENDbEdKLGUsQ0RzR0UsaUIsQ0FDRSxVLENBQ0EsVyxDQUNBLGlCLENBQ0Esd0IsQ0FPRix1QyxDQUNFLFUsQ0FDQSxXLENBR0YsVyxDQUNFLGtCLENBR0YsYSxDQUVFLGlCLENBR0YsaUIsQ0FDRSx3QixDQUNBLGtCLENBQ0EsaUIsQ0FDQSxjLENBR0YsVyxDQUNFLFUsQ0FDQSxjLENBQ0EsWSxDQUdGLFUsQ0FDRSxVLENBQ0EsVyxDQUdGLGEsQ0FDRSwyQixDQUNBLDRCLENBQ0EseUIsQ0FDQSxxQixDQUNBLGUsQ0FHRixVLENBQ0UsZSxDQUdGLGMsQ0FDRSxVLENBQ0EsVyxDQUNBLGlCLENBdENGLGEsQ0F5Q0EsWSxDQUNFLGMsQ0FHRixXLENBQ0UsWSxDQUdGLGMsQ0FDRSxjLENBQ0EsZ0IsQ0FDQSxrQixDQUdGLFUsQ0FDRSxlLENBR0YsYSxDQUtBLGEsQ0FKRSxjLENBQ0Esa0IsQ0FHRixhLENBQ0UsaUIsQ0FDQSxjLENBSUYscUIsQ0FDRSxVLENBQ0EsVyxDQUdGLEssQ0FDRSxVLENBQ0EsVyxDQUNBLGdCLENBR0YsWSxDQUNFLGdCLENBR0YsZSxDQUNFLGdCLENBR0YsTSxDQUNFLGMsQ0FHRixNLENBQ0UsUyxDQUNBLGEsQ0FHRixZLENBQ0UsYSxDQUdGLFksQ0FDRSxZLENBR0YsTyxDQUNFLG1CLENBR0YsYSxDQUNFLGMsQ0FDQSxlLENBR0YsYSxDQUNFLGtCLENBQ0EsMkIsQ0FDQSw0QixDQUNBLHlCLENBQ0EscUIsQ0FDQSx3QixDQUNBLHFCLENBQ0Esa0IsQ0FPRixnQixDQUpBLGdCLENBQ0UscUIsQ0FHRixnQixDQUNFLGlCLENBSUYsa0IsQ0FDRSxpQixDQUNBLGUsQ0FHRixlLENBQ0UsbUIsQ0FDQSxpQixDQUNBLG1CIiwiZmlsZSI6Im9yZGVyLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuKiB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveFxyXG59XHJcbiRncmF5OiM0MTQxNDE7XHJcbiR3aGl0ZTojZmZmO1xyXG4kYmx1ZTojNjhDQUI3O1xyXG5odG1se1xyXG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xyXG59XHJcbm1haW57XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6IFwiQmViYXMgQm9va1wiO1xyXG4gICAgc3JjOiB1cmwoXCIuLi9mb250L0JlYmFzTmV1ZUJvb2sud29mZjJcIik7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgZm9udC1kaXNwbGF5OiBzd2FwO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiBcIkludGVyXCI7XHJcbiAgICBzcmM6IHVybChcIi4uL2ZvbnQvSW50ZXItUmVndWxhci53b2ZmMlwiKTtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBmb250LWRpc3BsYXk6IHN3YXA7XHJcbn1cclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogXCJJbnRlclwiO1xyXG4gICAgc3JjOiB1cmwoXCIuLi9mb250L0ludGVyLUJvbGQud29mZjJcIik7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgZm9udC1kaXNwbGF5OiBzd2FwO1xyXG59XHJcbkBmb250LWZhY2Uge1xyXG4gIGZvbnQtZmFtaWx5OiBcIkludGVyXCI7XHJcbiAgc3JjOiB1cmwoXCIuLi9mb250L0ludGVyLU1lZGl1bS53b2ZmMlwiKTtcclxuICBmb250LXdlaWdodDogNTAwO1xyXG4gIGZvbnQtZGlzcGxheTogc3dhcDtcclxufVxyXG5AZm9udC1mYWNlIHtcclxuICBmb250LWZhbWlseTogXCJJbnRlclwiO1xyXG4gIHNyYzogdXJsKFwiLi4vZm9udC9JbnRlci1MaWdodEJFVEEud29mZjJcIik7XHJcbiAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICBmb250LWRpc3BsYXk6IHN3YXA7XHJcbn1cclxuQGZvbnQtZmFjZSB7XHJcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xyXG4gIHNyYzogdXJsKFwiLi4vZm9udC9Nb250c2VycmF0LVJlZ3VsYXIud29mZjJcIik7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICBmb250LWRpc3BsYXk6IHN3YXA7XHJcbn1cclxuQGZvbnQtZmFjZSB7XHJcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xyXG4gIHNyYzogdXJsKFwiLi4vZm9udC9Nb250c2VycmF0LUJvbGQud29mZjJcIik7XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICBmb250LWRpc3BsYXk6IHN3YXA7XHJcbn1cclxuQGZvbnQtZmFjZSB7XHJcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xyXG4gIHNyYzogdXJsKFwiLi4vZm9udC9Nb250c2VycmF0LU1lZGl1bS53b2ZmMlwiKTtcclxuICBmb250LXdlaWdodDogNTAwO1xyXG4gIGZvbnQtZGlzcGxheTogc3dhcDtcclxufVxyXG5AZm9udC1mYWNlIHtcclxuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XHJcbiAgc3JjOiB1cmwoXCIuLi9mb250L01vbnRzZXJyYXQtTGlnaHQud29mZjJcIik7XHJcbiAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICBmb250LWRpc3BsYXk6IHN3YXA7XHJcbn1cclxuQGZvbnQtZmFjZSB7XHJcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xyXG4gIHNyYzogdXJsKFwiLi4vZm9udC9Nb250c2VycmF0LVNlbWlCb2xkLndvZmYyXCIpO1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xyXG59XHJcblxyXG5ib2R5IHtcclxuICBmb250LWZhbWlseTogXCJJbnRlclwiO1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAxNDAlO1xyXG4gIGNvbG9yOiAjNDE0MTQxO1xyXG59XHJcblxyXG4uY29udGFpbmVye1xyXG4gIG1heC13aWR0aDogMTQ0MHB4O1xyXG4gIHBhZGRpbmc6IDAgMjBweDtcclxuICBtYXJnaW46IDAgYXV0bztcclxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxOTE5cHgpIHtcclxuICAgIG1heC13aWR0aDogNzV2dztcclxuICAgIHBhZGRpbmc6IDAgMS4wNDJ2dztcclxuICB9IFxyXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMCAyLjYwNHZ3O1xyXG4gIH0gXHJcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjUwcHgpIHtcclxuICAgIHBhZGRpbmc6IDAgMy42MjN2dztcclxuICB9IFxyXG59XHJcbi50aXRsZXtcclxuICBmb250LWZhbWlseTogXCJCZWJhcyBOZXVlXCIsIHNhbnMtc2VyaWY7XHJcbiAgbGluZS1oZWlnaHQ6IDEwMCU7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICBmb250LXNpemU6IDc2cHg7XHJcbiAgJiBzcGFue1xyXG4gICAgY29sb3I6ICRibHVlO1xyXG4gIH1cclxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxOTE5cHgpIHtcclxuICAgIGZvbnQtc2l6ZTogMy45NTh2dztcclxuICB9XHJcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICBmb250LXNpemU6IDcuNTUydnc7XHJcbiAgfVxyXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY1MHB4KSB7XHJcbiAgICBmb250LXNpemU6IDkuNjYydnc7XHJcbiAgfVxyXG59XHJcbi5zaG93LXRhYmxldHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAuc2hvdy10YWJsZXR7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbiAgICAuaGlkZS10YWJsZXR7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxufVxyXG5cclxuQGltcG9ydCBcImJsb2NrL19oZWFkZXIuc2Nzc1wiO1xyXG5AaW1wb3J0IFwiYmxvY2svX2Zvcm0uc2Nzc1wiO1xyXG5cclxuQGltcG9ydCBcImJsb2NrL19mb290ZXIuc2Nzc1wiOyIsIioge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuaHRtbCB7XG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xufVxuXG5tYWluIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkJlYmFzIEJvb2tcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250L0JlYmFzTmV1ZUJvb2sud29mZjJcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkludGVyXCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udC9JbnRlci1SZWd1bGFyLndvZmYyXCIpO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJJbnRlclwiO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvSW50ZXItQm9sZC53b2ZmMlwiKTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiSW50ZXJcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250L0ludGVyLU1lZGl1bS53b2ZmMlwiKTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiSW50ZXJcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250L0ludGVyLUxpZ2h0QkVUQS53b2ZmMlwiKTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC1SZWd1bGFyLndvZmYyXCIpO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udC9Nb250c2VycmF0LUJvbGQud29mZjJcIik7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250L01vbnRzZXJyYXQtTWVkaXVtLndvZmYyXCIpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udC9Nb250c2VycmF0LUxpZ2h0LndvZmYyXCIpO1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udC9Nb250c2VycmF0LVNlbWlCb2xkLndvZmYyXCIpO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogXCJJbnRlclwiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxNDAlO1xuICBjb2xvcjogIzQxNDE0MTtcbn1cblxuLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMTQ0MHB4O1xuICBwYWRkaW5nOiAwIDIwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4udGl0bGUge1xuICBmb250LWZhbWlseTogXCJCZWJhcyBOZXVlXCIsIHNhbnMtc2VyaWY7XG4gIGxpbmUtaGVpZ2h0OiAxMDAlO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDc2cHg7XG59XG5cbi50aXRsZSBzcGFuIHtcbiAgY29sb3I6ICM2OENBQjc7XG59XG5cbi5zaG93LXRhYmxldCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXIge1xuICBiYWNrZ3JvdW5kOiAjMEQ3MTYxO1xufVxuXG4uaGVhZGVyX19pbm5lciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiAxNXB4IDAgMjNweCAwO1xufVxuXG4uaGVhZGVyX19sb2dvIGltZyB7XG4gIHdpZHRoOiAxMDNweDtcbiAgaGVpZ2h0OiA0MnB4O1xufVxuXG4uaGVhZGVyX19uYXYge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG4uaGVhZGVyX19saXN0IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uaGVhZGVyX19pdGVtIHtcbiAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG4uaGVhZGVyX19pdGVtOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tcmlnaHQ6IDA7XG59XG5cbi5oZWFkZXJfX2xpbmsge1xuICBmb250LXNpemU6IDE4cHg7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5idXJnZXIge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uZm9ybSB7XG4gIHBhZGRpbmc6IDEyMHB4IDAgMTAwcHggMDtcbn1cblxuLmZvcm1fX3RpdGxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZm9ybV9fbGVmdCB7XG4gIHdpZHRoOiA0NTNweDtcbiAgbWFyZ2luLXJpZ2h0OiA1NHB4O1xufVxuXG4uZm9ybV9fYnRuIHtcbiAgcGFkZGluZzogMTZweCA0MHB4O1xuICBiYWNrZ3JvdW5kOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCB0b3AsIGxlZnQgYm90dG9tLCBmcm9tKCNGRkUwMjIpLCB0bygjRkZDNjIyKSk7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICNGRkUwMjIgMCUsICNGRkM2MjIgMTAwJSk7XG4gIGZvbnQtc2l6ZTogMzJweDtcbiAgZm9udC1mYW1pbHk6IFwiQmViYXMgTmV1ZVwiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMTAwJTtcbiAgY29sb3I6ICNmZmY7XG4gIG1hcmdpbi10b3A6IDI1cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyOiB1bnNldDtcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcbn1cblxuLmZvcm1fX2xhYmVsIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogNTAwO1xuICBwYWRkaW5nLWxlZnQ6IDQ3cHg7XG4gIG1hcmdpbi10b3A6IDE0cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG59XG5cbi5mb3JtX19sYWJlbCBzcGFuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDUwJTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgd2lkdGg6IDI5cHg7XG4gIGhlaWdodDogMjlweDtcbiAgYmFja2dyb3VuZDogIzY4Q0FCNztcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjREFEQURBO1xufVxuXG4uZm9ybV9fbGFiZWwgaW5wdXQge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uZm9ybV9fbGFiZWwgaW5wdXQ6Y2hlY2tlZCB+IHNwYW46OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHdpZHRoOiAxOXB4O1xuICBoZWlnaHQ6IDE5cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9jaGVjay1pY29uLnN2Zyk7XG4gIGJhY2tncm91bmQtc2l6ZTogMTAwJTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xufVxuXG4uZm9ybV9faXRlbSB7XG4gIG1hcmdpbi1ib3R0b206IDI1cHg7XG59XG5cbi5mb3JtX19pdGVtOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uZm9ybV9faXRlbSBwIHtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBtYXJnaW4tYm90dG9tOiA2cHg7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbn1cblxuLmZvcm1fX2l0ZW0gcCBzcGFuIHtcbiAgY29sb3I6ICNFOTEzMTM7XG59XG5cbi5mb3JtX19pdGVtIGlucHV0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI0VGRUZFRjtcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDE5cHggMzBweDtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuXG4uZm9ybV9faXRlbSBpbnB1dDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjQjNCM0IzO1xufVxuXG4uZm9ybV9faXRlbSBpbnB1dDo6LW1vei1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjQjNCM0IzO1xufVxuXG4uZm9ybV9faXRlbSBpbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0IzQjNCMztcbn1cblxuLmZvcm1fX2l0ZW0gaW5wdXQ6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjQjNCM0IzO1xufVxuXG4uZm9ybV9faXRlbSBpbnB1dDo6cGxhY2Vob2xkZXIge1xuICBjb2xvcjogI0IzQjNCMztcbn1cblxuLmZvcm1fX3JpZ2h0IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZm9ybV9fdGV4dCB7XG4gIHdpZHRoOiA0NDBweDtcbiAgbWFyZ2luLXJpZ2h0OiA1NHB4O1xufVxuXG4uZm9ybV9faW1nIHtcbiAgd2lkdGg6IDM5OXB4O1xuICBoZWlnaHQ6IDcxMXB4O1xufVxuXG4uZm9ybV9faW1nIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5mb3JtLXdyYXBwZXIge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbi10b3A6IDQwcHg7XG59XG5cbi5ndWFyYW50ZWUge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG59XG5cbi5ndWFyYW50ZWUgaW1nIHtcbiAgd2lkdGg6IDM0cHg7XG4gIGhlaWdodDogNDRweDtcbiAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xufVxuXG4uZ3VhcmFudGVlIHAge1xuICBmb250LXNpemU6IDE4cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbn1cblxuLmZvcm0tdGltZXIgaDMge1xuICBmb250LXNpemU6IDIycHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxpbmUtaGVpZ2h0OiAyN3B4O1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmZvcm0tbGlzdCB7XG4gIG1hcmdpbi10b3A6IDQwcHg7XG59XG5cbi5mb3JtLWxpc3QgaDMge1xuICBmb250LXNpemU6IDQycHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZmFtaWx5OiBcIkJlYmFzIE5ldWVcIjtcbiAgbGluZS1oZWlnaHQ6IDEwMCU7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5mb3JtLWxpc3QgbGkge1xuICBwYWRkaW5nLWxlZnQ6IDM0cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5mb3JtLWxpc3QgbGk6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5mb3JtLWxpc3QgbGk6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHdpZHRoOiAyNHB4O1xuICBoZWlnaHQ6IDI0cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy9oZXJvLWxpc3QtaWNvbi5zdmcpO1xuICBiYWNrZ3JvdW5kLXNpemU6IDEwMCU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbn1cblxuLmNvdW50ZG93biB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ucmluZyB7XG4gIHdpZHRoOiA1NXB4O1xuICBoZWlnaHQ6IDU1cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZ3JpZDtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICBwbGFjZS1pdGVtczogY2VudGVyO1xufVxuXG4ucmluZyBzdmcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC05MGRlZyk7XG4gIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLnJpbmcgLnRyYWNrIHtcbiAgc3Ryb2tlOiAjQ0NDQ0NDO1xuICBmaWxsOiBub25lO1xuICBzdHJva2Utd2lkdGg6IDFweDtcbn1cblxuLnJpbmcgLnByb2dyZXNzIHtcbiAgc3Ryb2tlOiAjNjhDQUI3O1xuICBmaWxsOiBub25lO1xuICBzdHJva2Utd2lkdGg6IDJweDtcbiAgc3Ryb2tlLWxpbmVjYXA6IHJvdW5kO1xuICAtd2Via2l0LXRyYW5zaXRpb246IHN0cm9rZS1kYXNob2Zmc2V0IDAuMjVzIGxpbmVhcjtcbiAgdHJhbnNpdGlvbjogc3Ryb2tlLWRhc2hvZmZzZXQgMC4yNXMgbGluZWFyO1xufVxuXG4udmFsdWUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbn1cblxuLmxhYmVsIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IC0yMHB4O1xuICBsZWZ0OiA1MCU7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBvcGFjaXR5OiAwLjg7XG59XG5cbi5zaG93LW1vYmlsZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5mb290ZXIge1xuICBiYWNrZ3JvdW5kOiAjMzEzMTMxO1xuICBwYWRkaW5nLXRvcDogNDBweDtcbn1cblxuLmZvb3Rlcl9fbG9nbyB7XG4gIHdpZHRoOiAxMjlweDtcbiAgaGVpZ2h0OiA0M3B4O1xuICBtYXJnaW4tcmlnaHQ6IDQxcHg7XG59XG5cbi5mb290ZXJfX2xvZ28gaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmZvb3Rlcl9fbWVudSB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmZvb3Rlcl9fbWVudS5zaG93LXRhYmxldCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5mb290ZXJfX21lbnUgbGkge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW4tcmlnaHQ6IDMwcHg7XG59XG5cbi5mb290ZXJfX21lbnUgbGk6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cblxuLmZvb3Rlcl9fbWVudSBsaSBhIHtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5mb290ZXItdG9wIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZm9vdGVyLXByaXZhY3kge1xuICBiYWNrZ3JvdW5kOiAjMjkyOTI5O1xuICBtYXJnaW4tdG9wOiAzMHB4O1xuICBwYWRkaW5nOiAxMXB4IDA7XG4gIGNvbG9yOiAjOUU5RTlFO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG59XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcbiAgLmZvcm1fX2xhYmVsIGlucHV0OmNoZWNrZWQgfiBzcGFuOjpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvY2hlY2staWNvbi5zdmcpO1xuICB9XG5cbiAgLmZvcm0tbGlzdCBsaTo6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2hlcm8tbGlzdC1pY29uLnN2Zyk7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTkxOXB4KSB7XG4gIC5jb250YWluZXIge1xuICAgIG1heC13aWR0aDogNzV2dztcbiAgICBwYWRkaW5nOiAwIDEuMDQydnc7XG4gIH1cblxuICAudGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMy45NTh2dztcbiAgfVxuXG4gIC5oZWFkZXJfX2lubmVyIHtcbiAgICBwYWRkaW5nOiAwLjc4MXZ3IDAgMS4xOTh2dyAwO1xuICB9XG5cbiAgLmhlYWRlcl9fbG9nbyBpbWcge1xuICAgIHdpZHRoOiA1LjM2NXZ3O1xuICAgIGhlaWdodDogMi4xODh2dztcbiAgfVxuXG4gIC5oZWFkZXJfX25hdiB7XG4gICAgbWFyZ2luLXRvcDogMS4wNDJ2dztcbiAgfVxuXG4gIC5oZWFkZXJfX2l0ZW0ge1xuICAgIG1hcmdpbi1yaWdodDogMS41NjN2dztcbiAgfVxuXG4gIC5oZWFkZXJfX2xpbmsge1xuICAgIGZvbnQtc2l6ZTogMC45Mzh2dztcbiAgfVxuXG4gIC5mb3JtIHtcbiAgICBwYWRkaW5nOiA2LjI1dncgMCA1LjIwOHZ3IDA7XG4gIH1cblxuICAuZm9ybV9fbGVmdCB7XG4gICAgd2lkdGg6IDIzLjU5NHZ3O1xuICAgIG1hcmdpbi1yaWdodDogMi44MTN2dztcbiAgfVxuXG4gIC5mb3JtX19idG4ge1xuICAgIHBhZGRpbmc6IDAuODMzdncgMi4wODN2dztcbiAgICBmb250LXNpemU6IDEuNjY3dnc7XG4gICAgbWFyZ2luLXRvcDogMS4zMDJ2dztcbiAgICBib3JkZXItcmFkaXVzOiAwLjYyNXZ3O1xuICB9XG5cbiAgLmZvcm1fX2xhYmVsIHtcbiAgICBmb250LXNpemU6IDAuODMzdnc7XG4gICAgcGFkZGluZy1sZWZ0OiAyLjQ0OHZ3O1xuICAgIG1hcmdpbi10b3A6IDAuNzI5dnc7XG4gIH1cblxuICAuZm9ybV9fbGFiZWwgc3BhbiB7XG4gICAgd2lkdGg6IDEuNTF2dztcbiAgICBoZWlnaHQ6IDEuNTF2dztcbiAgICBib3JkZXItcmFkaXVzOiAwLjIwOHZ3O1xuICAgIGJvcmRlcjogMC4wNTJ2dyBzb2xpZCAjREFEQURBO1xuICB9XG5cbiAgLmZvcm1fX2xhYmVsIGlucHV0IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLmZvcm1fX2xhYmVsIGlucHV0OmNoZWNrZWQgfiBzcGFuOjpiZWZvcmUge1xuICAgIHdpZHRoOiAwLjk5dnc7XG4gICAgaGVpZ2h0OiAwLjk5dnc7XG4gIH1cblxuICAuZm9ybV9faXRlbSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMS4zMDJ2dztcbiAgfVxuXG4gIC5mb3JtX19pdGVtIHAge1xuICAgIGZvbnQtc2l6ZTogMC45Mzh2dztcbiAgICBtYXJnaW4tYm90dG9tOiAwLjMxM3Z3O1xuICB9XG5cbiAgLmZvcm1fX2l0ZW0gaW5wdXQge1xuICAgIGJvcmRlcjogMC4wNTJ2dyBzb2xpZCAjRUZFRkVGO1xuICAgIGJvcmRlci1yYWRpdXM6IDAuNjI1dnc7XG4gICAgcGFkZGluZzogMC45OXZ3IDEuNTYzdnc7XG4gICAgZm9udC1zaXplOiAwLjkzOHZ3O1xuICB9XG5cbiAgLmZvcm1fX3RleHQge1xuICAgIHdpZHRoOiAyMi45MTd2dztcbiAgICBtYXJnaW4tcmlnaHQ6IDIuODEzdnc7XG4gIH1cblxuICAuZm9ybV9faW1nIHtcbiAgICB3aWR0aDogMjAuNzgxdnc7XG4gICAgaGVpZ2h0OiAzNy4wMzF2dztcbiAgfVxuXG4gIC5mb3JtLXdyYXBwZXIge1xuICAgIG1hcmdpbi10b3A6IDIuMDgzdnc7XG4gIH1cblxuICAuZ3VhcmFudGVlIHtcbiAgICBtYXJnaW4tdG9wOiAxLjA0MnZ3O1xuICB9XG5cbiAgLmd1YXJhbnRlZSBpbWcge1xuICAgIHdpZHRoOiAxLjc3MXZ3O1xuICAgIGhlaWdodDogMi4yOTJ2dztcbiAgICBtYXJnaW4tcmlnaHQ6IDAuODMzdnc7XG4gIH1cblxuICAuZ3VhcmFudGVlIHAge1xuICAgIGZvbnQtc2l6ZTogMC45Mzh2dztcbiAgfVxuXG4gIC5mb3JtLXRpbWVyIGgzIHtcbiAgICBmb250LXNpemU6IDEuMTQ2dnc7XG4gICAgbGluZS1oZWlnaHQ6IDEuNDA2dnc7XG4gICAgbWFyZ2luLWJvdHRvbTogMS41NjN2dztcbiAgfVxuXG4gIC5mb3JtLWxpc3Qge1xuICAgIG1hcmdpbi10b3A6IDIuMDgzdnc7XG4gIH1cblxuICAuZm9ybS1saXN0IGgzIHtcbiAgICBmb250LXNpemU6IDIuMTg4dnc7XG4gICAgbWFyZ2luLWJvdHRvbTogMS4wNDJ2dztcbiAgfVxuXG4gIC5mb3JtLWxpc3QgbGkge1xuICAgIHBhZGRpbmctbGVmdDogMS43NzF2dztcbiAgICBmb250LXNpemU6IDAuOTM4dnc7XG4gICAgbWFyZ2luLWJvdHRvbTogMS4wNDJ2dztcbiAgfVxuXG4gIC5mb3JtLWxpc3QgbGk6OmJlZm9yZSB7XG4gICAgd2lkdGg6IDEuMjV2dztcbiAgICBoZWlnaHQ6IDEuMjV2dztcbiAgfVxuXG4gIC5yaW5nIHtcbiAgICB3aWR0aDogMi44NjV2dztcbiAgICBoZWlnaHQ6IDIuODY1dnc7XG4gICAgbWFyZ2luLXJpZ2h0OiAwLjUyMXZ3O1xuICB9XG5cbiAgLnJpbmcgLnRyYWNrIHtcbiAgICBzdHJva2Utd2lkdGg6IDAuMDUydnc7XG4gIH1cblxuICAucmluZyAucHJvZ3Jlc3Mge1xuICAgIHN0cm9rZS13aWR0aDogMC4xMDR2dztcbiAgfVxuXG4gIC52YWx1ZSB7XG4gICAgZm9udC1zaXplOiAxLjI1dnc7XG4gIH1cblxuICAubGFiZWwge1xuICAgIHRvcDogLTEuMDQydnc7XG4gICAgZm9udC1zaXplOiAwLjUyMXZ3O1xuICB9XG5cbiAgLmZvb3RlciB7XG4gICAgcGFkZGluZy10b3A6IDIuMDgzdnc7XG4gIH1cblxuICAuZm9vdGVyX19sb2dvIHtcbiAgICB3aWR0aDogNi43MTl2dztcbiAgICBoZWlnaHQ6IDIuMjR2dztcbiAgICBtYXJnaW4tcmlnaHQ6IDIuMTM1dnc7XG4gIH1cblxuICAuZm9vdGVyX19tZW51IGxpIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDEuNTYzdnc7XG4gIH1cblxuICAuZm9vdGVyX19tZW51IGxpIGEge1xuICAgIGZvbnQtc2l6ZTogMC45Mzh2dztcbiAgfVxuXG4gIC5mb290ZXItcHJpdmFjeSB7XG4gICAgbWFyZ2luLXRvcDogMS41NjN2dztcbiAgICBwYWRkaW5nOiAwLjU3M3Z3IDA7XG4gICAgZm9udC1zaXplOiAwLjgzM3Z3O1xuICB9XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcblxufVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDAgMi42MDR2dztcbiAgfVxuXG4gIC50aXRsZSB7XG4gICAgZm9udC1zaXplOiA3LjU1MnZ3O1xuICB9XG5cbiAgLnNob3ctdGFibGV0IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIC5oaWRlLXRhYmxldCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC5oZWFkZXJfX2lubmVyIHtcbiAgICBwYWRkaW5nOiAxLjY5M3Z3IDA7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogc3RhcnQ7XG4gICAgLW1zLWZsZXgtcGFjazogc3RhcnQ7XG4gICAganVzdGlmeS1jb250ZW50OiBzdGFydDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cblxuICAuaGVhZGVyIC5idXJnZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiA2LjUxdnc7XG4gICAgaGVpZ2h0OiA2LjUxdnc7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIGJhY2tncm91bmQ6ICNGRkZGRkY7XG4gICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgfVxuXG4gIC5oZWFkZXIgLmJ1cmdlciBzcGFuIHtcbiAgICB3aWR0aDogMi42MDR2dztcbiAgICBoZWlnaHQ6IDAuMjZ2dztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm9yZGVyLXJhZGl1czogMC41MjF2dztcbiAgICBiYWNrZ3JvdW5kOiAjMEQ3MTYxO1xuICAgIGxlZnQ6IDUwJTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgfVxuXG4gIC5oZWFkZXIgLmJ1cmdlciBzcGFuOm50aC1jaGlsZCgxKSB7XG4gICAgdG9wOiAyLjQ3NHZ3O1xuICB9XG5cbiAgLmhlYWRlciAuYnVyZ2VyIHNwYW46bnRoLWNoaWxkKDIpIHtcbiAgICB0b3A6IDMuMTI1dnc7XG4gIH1cblxuICAuaGVhZGVyIC5idXJnZXIgc3BhbjpudGgtY2hpbGQoMykge1xuICAgIGJvdHRvbTogMi40NzR2dztcbiAgfVxuXG4gIC5oZWFkZXJfX2xvZ28ge1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICB9XG5cbiAgLmhlYWRlcl9fbG9nbyBpbWcge1xuICAgIHdpZHRoOiAxMy45MzJ2dztcbiAgICBoZWlnaHQ6IDUuNzI5dnc7XG4gIH1cblxuICAuaGVhZGVyX19uYXYge1xuICAgIHBhZGRpbmc6IDEzLjAyMXZ3O1xuICB9XG5cbiAgLmhlYWRlcl9fbWVudSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBtYXg7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgei1pbmRleDogMTA7XG4gICAgYmFja2dyb3VuZDogI0ZGRkZGRjtcbiAgfVxuXG4gIC5oZWFkZXJfX21lbnUuYWN0aXZlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIC5oZWFkZXIgLm1vYi1jbG9zZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNS4yMDh2dztcbiAgICByaWdodDogMi42MDR2dztcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgd2lkdGg6IDIuMzQ0dnc7XG4gICAgaGVpZ2h0OiAyLjM0NHZ3O1xuICB9XG5cbiAgLmhlYWRlciAubW9iLWNsb3NlIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG5cbiAgLmhlYWRlcl9fbGlzdCB7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG5cbiAgLmhlYWRlcl9faXRlbSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiA2LjUxdnc7XG4gIH1cblxuICAuaGVhZGVyX19pdGVtOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cblxuICAuaGVhZGVyX19saW5rIHtcbiAgICBjb2xvcjogIzQxNDE0MTtcbiAgICBmb250LXNpemU6IDIuNjA0dnc7XG4gIH1cblxuICAuZm9ybSB7XG4gICAgcGFkZGluZzogMTAwcHggMCA4MHB4IDA7XG4gIH1cblxuICAuZm9ybV9fcmlnaHQge1xuICAgIG1hcmdpbi10b3A6IDI1cHg7XG4gIH1cblxuICAuZm9ybV9fbGVmdCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG5cbiAgLmZvcm1fX2J0biB7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBmb250LXNpemU6IDQwcHg7XG4gICAgbWFyZ2luLXRvcDogMjVweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICB9XG5cbiAgLmZvcm1fX2xhYmVsIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgcGFkZGluZy1sZWZ0OiA0N3B4O1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gIH1cblxuICAuZm9ybV9fbGFiZWwgc3BhbiB7XG4gICAgd2lkdGg6IDI5cHg7XG4gICAgaGVpZ2h0OiAyOXB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjREFEQURBO1xuICB9XG5cbiAgLmZvcm1fX2xhYmVsIGlucHV0IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLmZvcm1fX2xhYmVsIGlucHV0OmNoZWNrZWQgfiBzcGFuOjpiZWZvcmUge1xuICAgIHdpZHRoOiAxOXB4O1xuICAgIGhlaWdodDogMTlweDtcbiAgfVxuXG4gIC5mb3JtX19pdGVtIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xuICB9XG5cbiAgLmZvcm1fX2l0ZW0gcCB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDZweDtcbiAgfVxuXG4gIC5mb3JtX19pdGVtIGlucHV0IHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjRUZFRkVGO1xuICAgIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gICAgcGFkZGluZzogMTlweCAzMHB4O1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgfVxuXG4gIC5mb3JtX190ZXh0IHtcbiAgICB3aWR0aDogNDQwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAzMXB4O1xuICB9XG5cbiAgLmZvcm1fX2ltZyB7XG4gICAgd2lkdGg6IDI1N3B4O1xuICAgIGhlaWdodDogNTM2cHg7XG4gIH1cblxuICAuZm9ybS13cmFwcGVyIHtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgbWFyZ2luLXRvcDogNDBweDtcbiAgfVxuXG4gIC5ndWFyYW50ZWUge1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gIH1cblxuICAuZ3VhcmFudGVlIGltZyB7XG4gICAgd2lkdGg6IDM0cHg7XG4gICAgaGVpZ2h0OiA0NHB4O1xuICAgIG1hcmdpbi1yaWdodDogMTZweDtcbiAgfVxuXG4gIC5ndWFyYW50ZWUgcCB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICB9XG5cbiAgLmZvcm0tdGltZXIge1xuICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gIH1cblxuICAuZm9ybS10aW1lciBoMyB7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyN3B4O1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gIH1cblxuICAuZm9ybS1saXN0IHtcbiAgICBtYXJnaW4tdG9wOiAxNnB4O1xuICB9XG5cbiAgLmZvcm0tbGlzdCBoMyB7XG4gICAgZm9udC1zaXplOiA0MnB4O1xuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIH1cblxuICAuZm9ybS1saXN0IGxpIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDM0cHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIH1cblxuICAuZm9ybS1saXN0IGxpOjpiZWZvcmUge1xuICAgIHdpZHRoOiAyNHB4O1xuICAgIGhlaWdodDogMjRweDtcbiAgfVxuXG4gIC5yaW5nIHtcbiAgICB3aWR0aDogNTVweDtcbiAgICBoZWlnaHQ6IDU1cHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICB9XG5cbiAgLnJpbmcgLnRyYWNrIHtcbiAgICBzdHJva2Utd2lkdGg6IDFweDtcbiAgfVxuXG4gIC5yaW5nIC5wcm9ncmVzcyB7XG4gICAgc3Ryb2tlLXdpZHRoOiAycHg7XG4gIH1cblxuICAudmFsdWUge1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgfVxuXG4gIC5sYWJlbCB7XG4gICAgdG9wOiAtMjBweDtcbiAgICBmb250LXNpemU6IDEwcHg7XG4gIH1cblxuICAuZm9vdGVyIHtcbiAgICBwYWRkaW5nLXRvcDogNS4yMDh2dztcbiAgfVxuXG4gIC5mb290ZXJfX2xvZ28ge1xuICAgIHdpZHRoOiAyOC4yNTV2dztcbiAgICBoZWlnaHQ6IDExLjU4OXZ3O1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIH1cblxuICAuZm9vdGVyX19tZW51IHtcbiAgICBtYXJnaW4tdG9wOiA2LjUxdnc7XG4gIH1cblxuICAuZm9vdGVyX19tZW51LnNob3ctdGFibGV0IHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC1tcy1mbGV4LXdyYXA6IHdyYXA7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIH1cblxuICAuZm9vdGVyX19tZW51IGxpIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogNS4yMDh2dztcbiAgfVxuXG4gIC5mb290ZXJfX21lbnUgbGk6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuXG4gIC5mb290ZXJfX21lbnUgbGkgYSB7XG4gICAgZm9udC1zaXplOiAyLjYwNHZ3O1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIH1cblxuICAuZm9vdGVyLXByaXZhY3kge1xuICAgIG1hcmdpbi10b3A6IDcuODEzdnc7XG4gICAgcGFkZGluZzogMS40MzJ2dyAwO1xuICAgIGZvbnQtc2l6ZTogMi4wODN2dztcbiAgfVxuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKSB7XG5cbn1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjUwcHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgcGFkZGluZzogMCAzLjYyM3Z3O1xuICB9XG5cbiAgLnRpdGxlIHtcbiAgICBmb250LXNpemU6IDkuNjYydnc7XG4gIH1cblxuICAuaGVhZGVyX19pbm5lciB7XG4gICAgcGFkZGluZzogNS4wNzJ2dyAwO1xuICB9XG5cbiAgLmhlYWRlciAuYnVyZ2VyIHtcbiAgICB3aWR0aDogNy4yNDZ2dztcbiAgICBoZWlnaHQ6IDMuMTR2dztcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgfVxuXG4gIC5oZWFkZXIgLmJ1cmdlciBzcGFuIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDAuNzI1dnc7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIGxlZnQ6IDAlO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICB9XG5cbiAgLmhlYWRlciAuYnVyZ2VyIHNwYW46bnRoLWNoaWxkKDEpIHtcbiAgICB0b3A6IDA7XG4gIH1cblxuICAuaGVhZGVyIC5idXJnZXIgc3BhbjpudGgtY2hpbGQoMikge1xuICAgIHRvcDogMS4yMDh2dztcbiAgfVxuXG4gIC5oZWFkZXIgLmJ1cmdlciBzcGFuOm50aC1jaGlsZCgzKSB7XG4gICAgYm90dG9tOiAwO1xuICB9XG5cbiAgLmhlYWRlcl9fbG9nbyB7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIH1cblxuICAuaGVhZGVyX19sb2dvIGltZyB7XG4gICAgd2lkdGg6IDIyLjIyMnZ3O1xuICAgIGhlaWdodDogOS4xNzl2dztcbiAgfVxuXG4gIC5oZWFkZXJfX25hdiB7XG4gICAgcGFkZGluZzogMjQuMTU1dncgMCAxOS4zMjR2dyAwO1xuICB9XG5cbiAgLmhlYWRlcl9fbWVudSB7XG4gICAgdG9wOiAyLjQxNXZ3O1xuICB9XG5cbiAgLmhlYWRlciAubW9iLWNsb3NlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1LjMxNHZ3O1xuICAgIHJpZ2h0OiA1LjMxNHZ3O1xuICAgIHdpZHRoOiA0LjgzMXZ3O1xuICAgIGhlaWdodDogNC44MzF2dztcbiAgfVxuXG4gIC5oZWFkZXJfX2l0ZW0ge1xuICAgIG1hcmdpbi1ib3R0b206IDMuNjIzdnc7XG4gIH1cblxuICAuaGVhZGVyX19saW5rIHtcbiAgICBmb250LXNpemU6IDQuMzQ4dnc7XG4gIH1cblxuICAuZm9ybSB7XG4gICAgcGFkZGluZzogNTBweCAwIDYwcHggMDtcbiAgfVxuXG4gIC5mb3JtLXRvcCB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cblxuICAuZm9ybV9fdGl0bGUge1xuICAgIC13ZWJraXQtYm94LW9yZGluYWwtZ3JvdXA6IDM7XG4gICAgLW1zLWZsZXgtb3JkZXI6IDI7XG4gICAgb3JkZXI6IDI7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xuICB9XG5cbiAgLmZvcm1fX3RpdGxlIGJyIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLmZvcm1fX3RpbWVyIHtcbiAgICAtd2Via2l0LWJveC1vcmRpbmFsLWdyb3VwOiAyO1xuICAgIC1tcy1mbGV4LW9yZGVyOiAxO1xuICAgIG9yZGVyOiAxO1xuICB9XG5cbiAgLmZvcm1fX3JpZ2h0IHtcbiAgICBtYXJnaW4tdG9wOiAyNXB4O1xuICB9XG5cbiAgLmZvcm1fX2xlZnQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgfVxuXG4gIC5mb3JtX19idG4ge1xuICAgIHBhZGRpbmc6IDIwcHggMjVweDtcbiAgICBmb250LXNpemU6IDMwcHg7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICB9XG5cbiAgLmZvcm1fX2xhYmVsIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgcGFkZGluZy1sZWZ0OiA0N3B4O1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gIH1cblxuICAuZm9ybV9fbGFiZWwgc3BhbiB7XG4gICAgd2lkdGg6IDI5cHg7XG4gICAgaGVpZ2h0OiAyOXB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjREFEQURBO1xuICB9XG5cbiAgLmZvcm1fX2xhYmVsIGlucHV0IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLmZvcm1fX2xhYmVsIGlucHV0OmNoZWNrZWQgfiBzcGFuOjpiZWZvcmUge1xuICAgIHdpZHRoOiAxOXB4O1xuICAgIGhlaWdodDogMTlweDtcbiAgfVxuXG4gIC5mb3JtX19pdGVtIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB9XG5cbiAgLmZvcm1fX2l0ZW0gcCB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDZweDtcbiAgfVxuXG4gIC5mb3JtX19pdGVtIGlucHV0IHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjRUZFRkVGO1xuICAgIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gICAgcGFkZGluZzogMTlweCAzMHB4O1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgfVxuXG4gIC5mb3JtX190ZXh0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC5mb3JtX19pbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgfVxuXG4gIC5mb3JtLXdyYXBwZXIge1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBtYXJnaW4tdG9wOiA4MHB4O1xuICB9XG5cbiAgLmd1YXJhbnRlZSB7XG4gICAgbWFyZ2luLXRvcDogMTRweDtcbiAgfVxuXG4gIC5ndWFyYW50ZWUgaW1nIHtcbiAgICB3aWR0aDogMzRweDtcbiAgICBoZWlnaHQ6IDQ0cHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xuICB9XG5cbiAgLmd1YXJhbnRlZSBwIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gIH1cblxuICAuZm9ybS10aW1lciB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgfVxuXG4gIC5mb3JtLXRpbWVyIGgzIHtcbiAgICBmb250LXNpemU6IDE3cHg7XG4gICAgbGluZS1oZWlnaHQ6IDIxcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjNweDtcbiAgfVxuXG4gIC5mb3JtLWxpc3Qge1xuICAgIG1hcmdpbi10b3A6IDI1cHg7XG4gIH1cblxuICAuZm9ybS1saXN0IGgzIHtcbiAgICBmb250LXNpemU6IDMycHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgfVxuXG4gIC5mb3JtLWxpc3QgbGkge1xuICAgIHBhZGRpbmctbGVmdDogMzRweDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgfVxuXG4gIC5mb3JtLWxpc3QgbGk6OmJlZm9yZSB7XG4gICAgd2lkdGg6IDI0cHg7XG4gICAgaGVpZ2h0OiAyNHB4O1xuICB9XG5cbiAgLnJpbmcge1xuICAgIHdpZHRoOiA0M3B4O1xuICAgIGhlaWdodDogNDNweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDdweDtcbiAgfVxuXG4gIC5yaW5nIC50cmFjayB7XG4gICAgc3Ryb2tlLXdpZHRoOiAxcHg7XG4gIH1cblxuICAucmluZyAucHJvZ3Jlc3Mge1xuICAgIHN0cm9rZS13aWR0aDogMnB4O1xuICB9XG5cbiAgLnZhbHVlIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gIH1cblxuICAubGFiZWwge1xuICAgIHRvcDogLTIwcHg7XG4gICAgZm9udC1zaXplOiA4cHg7XG4gIH1cblxuICAuc2hvdy1tb2JpbGUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgLmhpZGUtbW9iaWxlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLmZvb3RlciB7XG4gICAgcGFkZGluZy10b3A6IDcuMjQ2dnc7XG4gIH1cblxuICAuZm9vdGVyX19sb2dvIHtcbiAgICB3aWR0aDogMzEuMTU5dnc7XG4gICAgaGVpZ2h0OiAxMi44MDJ2dztcbiAgfVxuXG4gIC5mb290ZXJfX21lbnUge1xuICAgIG1hcmdpbi10b3A6IDguNjk2dnc7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG5cbiAgLmZvb3Rlcl9fbWVudSB1bCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMi40MTV2dztcbiAgfVxuXG4gIC5mb290ZXJfX21lbnUgbGkge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAyLjQxNXZ3O1xuICB9XG5cbiAgLmZvb3Rlcl9fbWVudSBsaSBhIHtcbiAgICBmb250LXNpemU6IDQuMzQ4dnc7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgfVxuXG4gIC5mb290ZXItcHJpdmFjeSB7XG4gICAgbWFyZ2luLXRvcDogMTEuMTExdnc7XG4gICAgcGFkZGluZzogMi42NTd2dyAwO1xuICAgIGZvbnQtc2l6ZTogMy44NjV2dztcbiAgfVxuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKSB7XG5cbn1cbn0vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbVJoZEdFNk8yTm9ZWEp6WlhROWRYUm1MVGdzSlRCRUpUQkJLaVV5TUNVM1FpVXdSQ1V3UVNVeU1DVXlNQ1V5TUNVeU1HMWhjbWRwYmpvbE1qQXdPeVV3UkNVd1FTVXlNQ1V5TUNVeU1DVXlNSEJoWkdScGJtYzZKVEl3TURzbE1FUWxNRUVsTWpBbE1qQWxNakFsTWpCaWIzZ3RjMmw2YVc1bk9pVXlNR0p2Y21SbGNpMWliM2dsTUVRbE1FRWxOMFFsTUVRbE1FRWtaM0poZVRvbE1qTTBNVFF4TkRFN0pUQkVKVEJCSkhkb2FYUmxPaVV5TTJabVpqc2xNRVFsTUVFa1lteDFaVG9sTWpNMk9FTkJRamM3SlRCRUpUQkJhSFJ0YkNVM1FpVXdSQ1V3UVNVeU1DVXlNSE5qY205c2JDMWlaV2hoZG1sdmNqb2xNakJ6Ylc5dmRHZzdKVEJFSlRCQkpUZEVKVEJFSlRCQmJXRnBiaVUzUWlVd1JDVXdRU1V5TUNVeU1DVXlNQ1V5TUc5MlpYSm1iRzkzT2lVeU1HaHBaR1JsYmpzbE1FUWxNRUVsTjBRbE1FUWxNRUZBWm05dWRDMW1ZV05sSlRJd0pUZENKVEJFSlRCQkpUSXdKVEl3SlRJd0pUSXdabTl1ZEMxbVlXMXBiSGs2SlRJd0pUSXlRbVZpWVhNbE1qQkNiMjlySlRJeU95VXdSQ1V3UVNVeU1DVXlNQ1V5TUNVeU1ITnlZem9sTWpCMWNtd29KVEl5TGk0dlptOXVkQzlDWldKaGMwNWxkV1ZDYjI5ckxuZHZabVl5SlRJeUtUc2xNRVFsTUVFbE1qQWxNakFsTWpBbE1qQm1iMjUwTFhkbGFXZG9kRG9sTWpBME1EQTdKVEJFSlRCQkpUSXdKVEl3SlRJd0pUSXdabTl1ZEMxa2FYTndiR0Y1T2lVeU1ITjNZWEE3SlRCRUpUQkJKVGRFSlRCRUpUQkJKVEJFSlRCQlFHWnZiblF0Wm1GalpTVXlNQ1UzUWlVd1JDVXdRU1V5TUNVeU1DVXlNQ1V5TUdadmJuUXRabUZ0YVd4NU9pVXlNQ1V5TWtsdWRHVnlKVEl5T3lVd1JDVXdRU1V5TUNVeU1DVXlNQ1V5TUhOeVl6b2xNakIxY213b0pUSXlMaTR2Wm05dWRDOUpiblJsY2kxU1pXZDFiR0Z5TG5kdlptWXlKVEl5S1RzbE1FUWxNRUVsTWpBbE1qQWxNakFsTWpCbWIyNTBMWGRsYVdkb2REb2xNakEwTURBN0pUQkVKVEJCSlRJd0pUSXdKVEl3SlRJd1ptOXVkQzFrYVhOd2JHRjVPaVV5TUhOM1lYQTdKVEJFSlRCQkpUZEVKVEJFSlRCQlFHWnZiblF0Wm1GalpTVXlNQ1UzUWlVd1JDVXdRU1V5TUNVeU1DVXlNQ1V5TUdadmJuUXRabUZ0YVd4NU9pVXlNQ1V5TWtsdWRHVnlKVEl5T3lVd1JDVXdRU1V5TUNVeU1DVXlNQ1V5TUhOeVl6b2xNakIxY213b0pUSXlMaTR2Wm05dWRDOUpiblJsY2kxQ2IyeGtMbmR2Wm1ZeUpUSXlLVHNsTUVRbE1FRWxNakFsTWpBbE1qQWxNakJtYjI1MExYZGxhV2RvZERvbE1qQTNNREE3SlRCRUpUQkJKVEl3SlRJd0pUSXdKVEl3Wm05dWRDMWthWE53YkdGNU9pVXlNSE4zWVhBN0pUQkVKVEJCSlRkRUpUQkVKVEJCUUdadmJuUXRabUZqWlNVeU1DVTNRaVV3UkNVd1FTVXlNQ1V5TUdadmJuUXRabUZ0YVd4NU9pVXlNQ1V5TWtsdWRHVnlKVEl5T3lVd1JDVXdRU1V5TUNVeU1ITnlZem9sTWpCMWNtd29KVEl5TGk0dlptOXVkQzlKYm5SbGNpMU5aV1JwZFcwdWQyOW1aaklsTWpJcE95VXdSQ1V3UVNVeU1DVXlNR1p2Ym5RdGQyVnBaMmgwT2lVeU1EVXdNRHNsTUVRbE1FRWxNakFsTWpCbWIyNTBMV1JwYzNCc1lYazZKVEl3YzNkaGNEc2xNRVFsTUVFbE4wUWxNRVFsTUVGQVptOXVkQzFtWVdObEpUSXdKVGRDSlRCRUpUQkJKVEl3SlRJd1ptOXVkQzFtWVcxcGJIazZKVEl3SlRJeVNXNTBaWElsTWpJN0pUQkVKVEJCSlRJd0pUSXdjM0pqT2lVeU1IVnliQ2dsTWpJdUxpOW1iMjUwTDBsdWRHVnlMVXhwWjJoMFFrVlVRUzUzYjJabU1pVXlNaWs3SlRCRUpUQkJKVEl3SlRJd1ptOXVkQzEzWldsbmFIUTZKVEl3TXpBd095VXdSQ1V3UVNVeU1DVXlNR1p2Ym5RdFpHbHpjR3hoZVRvbE1qQnpkMkZ3T3lVd1JDVXdRU1UzUkNVd1JDVXdRVUJtYjI1MExXWmhZMlVsTWpBbE4wSWxNRVFsTUVFbE1qQWxNakJtYjI1MExXWmhiV2xzZVRvbE1qQWxNakpOYjI1MGMyVnljbUYwSlRJeU95VXdSQ1V3UVNVeU1DVXlNSE55WXpvbE1qQjFjbXdvSlRJeUxpNHZabTl1ZEM5TmIyNTBjMlZ5Y21GMExWSmxaM1ZzWVhJdWQyOW1aaklsTWpJcE95VXdSQ1V3UVNVeU1DVXlNR1p2Ym5RdGQyVnBaMmgwT2lVeU1EUXdNRHNsTUVRbE1FRWxNakFsTWpCbWIyNTBMV1JwYzNCc1lYazZKVEl3YzNkaGNEc2xNRVFsTUVFbE4wUWxNRVFsTUVGQVptOXVkQzFtWVdObEpUSXdKVGRDSlRCRUpUQkJKVEl3SlRJd1ptOXVkQzFtWVcxcGJIazZKVEl3SlRJeVRXOXVkSE5sY25KaGRDVXlNanNsTUVRbE1FRWxNakFsTWpCemNtTTZKVEl3ZFhKc0tDVXlNaTR1TDJadmJuUXZUVzl1ZEhObGNuSmhkQzFDYjJ4a0xuZHZabVl5SlRJeUtUc2xNRVFsTUVFbE1qQWxNakJtYjI1MExYZGxhV2RvZERvbE1qQTNNREE3SlRCRUpUQkJKVEl3SlRJd1ptOXVkQzFrYVhOd2JHRjVPaVV5TUhOM1lYQTdKVEJFSlRCQkpUZEVKVEJFSlRCQlFHWnZiblF0Wm1GalpTVXlNQ1UzUWlVd1JDVXdRU1V5TUNVeU1HWnZiblF0Wm1GdGFXeDVPaVV5TUNVeU1rMXZiblJ6WlhKeVlYUWxNakk3SlRCRUpUQkJKVEl3SlRJd2MzSmpPaVV5TUhWeWJDZ2xNakl1TGk5bWIyNTBMMDF2Ym5SelpYSnlZWFF0VFdWa2FYVnRMbmR2Wm1ZeUpUSXlLVHNsTUVRbE1FRWxNakFsTWpCbWIyNTBMWGRsYVdkb2REb2xNakExTURBN0pUQkVKVEJCSlRJd0pUSXdabTl1ZEMxa2FYTndiR0Y1T2lVeU1ITjNZWEE3SlRCRUpUQkJKVGRFSlRCRUpUQkJRR1p2Ym5RdFptRmpaU1V5TUNVM1FpVXdSQ1V3UVNVeU1DVXlNR1p2Ym5RdFptRnRhV3g1T2lVeU1DVXlNazF2Ym5SelpYSnlZWFFsTWpJN0pUQkVKVEJCSlRJd0pUSXdjM0pqT2lVeU1IVnliQ2dsTWpJdUxpOW1iMjUwTDAxdmJuUnpaWEp5WVhRdFRHbG5hSFF1ZDI5bVpqSWxNaklwT3lVd1JDVXdRU1V5TUNVeU1HWnZiblF0ZDJWcFoyaDBPaVV5TURNd01Ec2xNRVFsTUVFbE1qQWxNakJtYjI1MExXUnBjM0JzWVhrNkpUSXdjM2RoY0RzbE1FUWxNRUVsTjBRbE1FUWxNRUZBWm05dWRDMW1ZV05sSlRJd0pUZENKVEJFSlRCQkpUSXdKVEl3Wm05dWRDMW1ZVzFwYkhrNkpUSXdKVEl5VFc5dWRITmxjbkpoZENVeU1qc2xNRVFsTUVFbE1qQWxNakJ6Y21NNkpUSXdkWEpzS0NVeU1pNHVMMlp2Ym5RdlRXOXVkSE5sY25KaGRDMVRaVzFwUW05c1pDNTNiMlptTWlVeU1pazdKVEJFSlRCQkpUSXdKVEl3Wm05dWRDMTNaV2xuYUhRNkpUSXdOakF3T3lVd1JDVXdRU1V5TUNVeU1HWnZiblF0WkdsemNHeGhlVG9sTWpCemQyRndPeVV3UkNVd1FTVTNSQ1V3UkNVd1FTVXdSQ1V3UVdKdlpIa2xNakFsTjBJbE1FUWxNRUVsTWpBbE1qQm1iMjUwTFdaaGJXbHNlVG9sTWpBbE1qSkpiblJsY2lVeU1qc2xNRVFsTUVFbE1qQWxNakJtYjI1MExYZGxhV2RvZERvbE1qQTBNREE3SlRCRUpUQkJKVEl3SlRJd1ptOXVkQzF6YVhwbE9pVXlNREUyY0hnN0pUQkVKVEJCSlRJd0pUSXdiR2x1WlMxb1pXbG5hSFE2SlRJd01UUXdKVEkxT3lVd1JDVXdRU1V5TUNVeU1HTnZiRzl5T2lVeU1DVXlNelF4TkRFME1Uc2xNRVFsTUVFbE4wUWxNRVFsTUVFbE1FUWxNRUV1WTI5dWRHRnBibVZ5SlRkQ0pUQkVKVEJCSlRJd0pUSXdiV0Y0TFhkcFpIUm9PaVV5TURFME5EQndlRHNsTUVRbE1FRWxNakFsTWpCd1lXUmthVzVuT2lVeU1EQWxNakF5TUhCNE95VXdSQ1V3UVNVeU1DVXlNRzFoY21kcGJqb2xNakF3SlRJd1lYVjBienNsTUVRbE1FRWxNakFsTWpCQWJXVmthV0VsTWpCelkzSmxaVzRsTWpCaGJtUWxNakFvYldGNExYZHBaSFJvT2lVeU1ERTVNVGx3ZUNrbE1qQWxOMElsTUVRbE1FRWxNakFsTWpBbE1qQWxNakJ0WVhndGQybGtkR2c2SlRJd056VjJkenNsTUVRbE1FRWxNakFsTWpBbE1qQWxNakJ3WVdSa2FXNW5PaVV5TURBbE1qQXhMakEwTW5aM095VXdSQ1V3UVNVeU1DVXlNQ1UzUkNVeU1DVXdSQ1V3UVNVeU1DVXlNRUJ0WldScFlTVXlNSE5qY21WbGJpVXlNR0Z1WkNVeU1DaHRZWGd0ZDJsa2RHZzZKVEl3TVRBeU5IQjRLU1V5TUNVM1FpVXdSQ1V3UVNVeU1DVXlNQ1V5TUNVeU1HMWhlQzEzYVdSMGFEb2xNakF4TURBbE1qVTdKVEJFSlRCQkpUSXdKVEl3SlRJd0pUSXdjR0ZrWkdsdVp6b2xNakF3SlRJd01pNDJNRFIyZHpzbE1FUWxNRUVsTWpBbE1qQWxOMFFsTWpBbE1FUWxNRUVsTWpBbE1qQkFiV1ZrYVdFbE1qQnpZM0psWlc0bE1qQmhibVFsTWpBb2JXRjRMWGRwWkhSb09pVXlNRFkxTUhCNEtTVXlNQ1UzUWlVd1JDVXdRU1V5TUNVeU1DVXlNQ1V5TUhCaFpHUnBibWM2SlRJd01DVXlNRE11TmpJemRuYzdKVEJFSlRCQkpUSXdKVEl3SlRkRUpUSXdKVEJFSlRCQkpUZEVKVEJFSlRCQkxuUnBkR3hsSlRkQ0pUQkVKVEJCSlRJd0pUSXdabTl1ZEMxbVlXMXBiSGs2SlRJd0pUSXlRbVZpWVhNbE1qQk9aWFZsSlRJeUxDVXlNSE5oYm5NdGMyVnlhV1k3SlRCRUpUQkJKVEl3SlRJd2JHbHVaUzFvWldsbmFIUTZKVEl3TVRBd0pUSTFPeVV3UkNVd1FTVXlNQ1V5TUdadmJuUXRkMlZwWjJoME9pVXlNRFF3TURzbE1FUWxNRUVsTWpBbE1qQm1iMjUwTFhOcGVtVTZKVEl3Tnpad2VEc2xNRVFsTUVFbE1qQWxNakFtSlRJd2MzQmhiaVUzUWlVd1JDVXdRU1V5TUNVeU1DVXlNQ1V5TUdOdmJHOXlPaVV5TUNSaWJIVmxPeVV3UkNVd1FTVXlNQ1V5TUNVM1JDVXdSQ1V3UVNVeU1DVXlNRUJ0WldScFlTVXlNSE5qY21WbGJpVXlNR0Z1WkNVeU1DaHRZWGd0ZDJsa2RHZzZKVEl3TVRreE9YQjRLU1V5TUNVM1FpVXdSQ1V3UVNVeU1DVXlNQ1V5TUNVeU1HWnZiblF0YzJsNlpUb2xNakF6TGprMU9IWjNPeVV3UkNVd1FTVXlNQ1V5TUNVM1JDVXdSQ1V3UVNVeU1DVXlNRUJ0WldScFlTVXlNSE5qY21WbGJpVXlNR0Z1WkNVeU1DaHRZWGd0ZDJsa2RHZzZKVEl3TVRBeU5IQjRLU1V5TUNVM1FpVXdSQ1V3UVNVeU1DVXlNQ1V5TUNVeU1HWnZiblF0YzJsNlpUb2xNakEzTGpVMU1uWjNPeVV3UkNVd1FTVXlNQ1V5TUNVM1JDVXdSQ1V3UVNVeU1DVXlNRUJ0WldScFlTVXlNSE5qY21WbGJpVXlNR0Z1WkNVeU1DaHRZWGd0ZDJsa2RHZzZKVEl3TmpVd2NIZ3BKVEl3SlRkQ0pUQkVKVEJCSlRJd0pUSXdKVEl3SlRJd1ptOXVkQzF6YVhwbE9pVXlNRGt1TmpZeWRuYzdKVEJFSlRCQkpUSXdKVEl3SlRkRUpUQkVKVEJCSlRkRUpUQkVKVEJCTG5Ob2IzY3RkR0ZpYkdWMEpUZENKVEJFSlRCQkpUSXdKVEl3SlRJd0pUSXdaR2x6Y0d4aGVUb2xNakJ1YjI1bE95VXdSQ1V3UVNVM1JDVXdSQ1V3UVVCdFpXUnBZU1V5TUhOamNtVmxiaVV5TUdGdVpDVXlNQ2h0WVhndGQybGtkR2c2SlRJd01UQXlOSEI0S1NVeU1DVTNRaVV3UkNVd1FTVXlNQ1V5TUNVeU1DVXlNQzV6YUc5M0xYUmhZbXhsZENVM1FpVXdSQ1V3UVNVeU1DVXlNQ1V5TUNVeU1DVXlNQ1V5TUNVeU1DVXlNR1JwYzNCc1lYazZKVEl3WW14dlkyczdKVEJFSlRCQkpUSXdKVEl3SlRJd0pUSXdKVGRFSlRCRUpUQkJKVEl3SlRJd0pUSXdKVEl3TG1ocFpHVXRkR0ZpYkdWMEpUZENKVEJFSlRCQkpUSXdKVEl3SlRJd0pUSXdKVEl3SlRJd0pUSXdKVEl3WkdsemNHeGhlVG9sTWpCdWIyNWxPeVV3UkNVd1FTVXlNQ1V5TUNVeU1DVXlNQ1UzUkNVd1JDVXdRU1UzUkNVd1JDVXdRU1V3UkNVd1FVQnBiWEJ2Y25RbE1qQWxNakppYkc5amF5OWZhR1ZoWkdWeUxuTmpjM01sTWpJN0pUQkVKVEJCUUdsdGNHOXlkQ1V5TUNVeU1tSnNiMk5yTDE5bWIzSnRMbk5qYzNNbE1qSTdKVEJFSlRCQkpUQkVKVEJCUUdsdGNHOXlkQ1V5TUNVeU1tSnNiMk5yTDE5bWIyOTBaWEl1YzJOemN5VXlNanNpTENKdmNtUmxjaTVqYzNNaUxDSm1hV3hsT2k5Qk9pOGxSREFsT1VZbFJERWxPREFsUkRBbFFrVWxSREFsUWpVbFJEQWxRa0VsUkRFbE9ESWxSREVsT0VJdmMyVnlZWFpsYkd4bFlTOXpjbU12YzJGemN5OWliRzlqYXk5ZmFHVmhaR1Z5TG5OamMzTWlMQ0ptYVd4bE9pOUJPaThsUkRBbE9VWWxSREVsT0RBbFJEQWxRa1VsUkRBbFFqVWxSREFsUWtFbFJERWxPRElsUkRFbE9FSXZjMlZ5WVhabGJHeGxZUzl6Y21NdmMyRnpjeTlpYkc5amF5OWZabTl5YlM1elkzTnpJaXdpWm1sc1pUb3ZRVG92SlVRd0pUbEdKVVF4SlRnd0pVUXdKVUpGSlVRd0pVSTFKVVF3SlVKQkpVUXhKVGd5SlVReEpUaENMM05sY21GMlpXeHNaV0V2YzNKakwzTmhjM012WW14dlkyc3ZYMlp2YjNSbGNpNXpZM056SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCUVVOQk8wVkJRMGtzVTBGQlFUdEZRVU5CTEZWQlFVRTdSVUZEUVN3NFFrRkJRVHRWUVVGQkxITkNRVUZCTzBGRFFVbzdPMEZFUzBFN1JVRkRSU3gxUWtGQlFUdEJRMFpHT3p0QlJFbEJPMFZCUTBrc1owSkJRVUU3UVVORVNqczdRVVJIUVR0RlFVTkpMSGxDUVVGQk8wVkJRMEVzZFVOQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHdENRVUZCTzBGRFFVbzdRVVJIUVR0RlFVTkpMRzlDUVVGQk8wVkJRMEVzZFVOQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHdENRVUZCTzBGRFJFbzdRVVJIUVR0RlFVTkpMRzlDUVVGQk8wVkJRMEVzYjBOQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHdENRVUZCTzBGRFJFbzdRVVJIUVR0RlFVTkZMRzlDUVVGQk8wVkJRMEVzYzBOQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHdENRVUZCTzBGRFJFWTdRVVJIUVR0RlFVTkZMRzlDUVVGQk8wVkJRMEVzZVVOQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHdENRVUZCTzBGRFJFWTdRVVJIUVR0RlFVTkZMSGxDUVVGQk8wVkJRMEVzTkVOQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHdENRVUZCTzBGRFJFWTdRVVJIUVR0RlFVTkZMSGxDUVVGQk8wVkJRMEVzZVVOQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHdENRVUZCTzBGRFJFWTdRVVJIUVR0RlFVTkZMSGxDUVVGQk8wVkJRMEVzTWtOQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHdENRVUZCTzBGRFJFWTdRVVJIUVR0RlFVTkZMSGxDUVVGQk8wVkJRMEVzTUVOQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHdENRVUZCTzBGRFJFWTdRVVJIUVR0RlFVTkZMSGxDUVVGQk8wVkJRMEVzTmtOQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHdENRVUZCTzBGRFJFWTdRVVJKUVR0RlFVTkZMRzlDUVVGQk8wVkJRMEVzWjBKQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc2FVSkJRVUU3UlVGRFFTeGpRVUZCTzBGRFJrWTdPMEZFUzBFN1JVRkRSU3hwUWtGQlFUdEZRVU5CTEdWQlFVRTdSVUZEUVN4alFVRkJPMEZEUmtZN1FVUkhSVHRGUVVwR08wbEJTMGtzWlVGQlFUdEpRVU5CTEd0Q1FVRkJPMFZEUVVZN1FVRkRSanRCUkVORk8wVkJVa1k3U1VGVFNTeGxRVUZCTzBsQlEwRXNhMEpCUVVFN1JVTkZSanRCUVVOR08wRkVSRVU3UlVGYVJqdEpRV0ZKTEd0Q1FVRkJPMFZEU1VZN1FVRkRSanM3UVVSR1FUdEZRVU5GTEhGRFFVRkJPMFZCUTBFc2FVSkJRVUU3UlVGRFFTeG5Ra0ZCUVR0RlFVTkJMR1ZCUVVFN1FVTkxSanRCUkVwRk8wVkJRMFVzWTBGdVIwVTdRVU41UjA0N1FVUktSVHRGUVZKR08wbEJVMGtzYTBKQlFVRTdSVU5QUmp0QlFVTkdPMEZFVGtVN1JVRllSanRKUVZsSkxHdENRVUZCTzBWRFUwWTdRVUZEUmp0QlJGSkZPMFZCWkVZN1NVRmxTU3hyUWtGQlFUdEZRMWRHTzBGQlEwWTdPMEZFVkVFN1JVRkRTU3hoUVVGQk8wRkRXVW83TzBGRVZrRTdSVUZEU1R0SlFVTkpMR05CUVVFN1JVTmhUanRGUkZoRk8wbEJRMGtzWVVGQlFUdEZRMkZPTzBGQlEwWTdRVU0zU1VFN1JVRkRTU3h0UWtGQlFUdEJSQ3RKU2p0QlF6VkpTVHRGUVVOSkxHOUNRVUZCTzBWQlFVRXNiMEpCUVVFN1JVRkJRU3hoUVVGQk8wVkJRMEVzZVVKQlFVRTdUVUZCUVN4elFrRkJRVHRWUVVGQkxEaENRVUZCTzBWQlEwRXNlVUpCUVVFN1RVRkJRU3h6UWtGQlFUdFZRVUZCTEcxQ1FVRkJPMFZCUTBFc2MwSkJRVUU3UVVRNFNWSTdRVU40U1ZFN1JVRkRTU3haUVVGQk8wVkJRMEVzV1VGQlFUdEJSREJKV2p0QlF5OUlTVHRGUVVOSkxHZENRVUZCTzBGRWFVbFNPMEZETlVoSk8wVkJSVWtzYjBKQlFVRTdSVUZCUVN4dlFrRkJRVHRGUVVGQkxHRkJRVUU3UlVGRFFTeDVRa0ZCUVR0TlFVRkJMSE5DUVVGQk8xVkJRVUVzYlVKQlFVRTdRVVEyU0ZJN1FVTjRTRWs3UlVGRFNTeHJRa0ZCUVR0RlFVTkJMR2RDUVVGQk8wRkVNRWhTTzBGRGVFaFJPMFZCUTBrc1pVRkJRVHRCUkRCSVdqdEJRM0JJU1R0RlFVTkpMR1ZCUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzY1VKQlFVRTdRVVJ6U0ZJN08wRkRiRWhCTzBWQlEwa3NZVUZCUVR0QlJIRklTanM3UVVOdVNFRTdSVUZGU1R0SlFVTkZMRFJDUVVGQk8wVkVjVWhLTzBWRGFFaEpPMGxCUTBVc1kwRkJRVHRKUVVOQkxHVkJRVUU3UlVSclNFNDdSVU0zUjBVN1NVRkRSU3h0UWtGQlFUdEZSQ3RIU2p0RlEzaEhSVHRKUVVORkxIRkNRVUZCTzBWRU1FZEtPMFZEZEVkRk8wbEJRMFVzYTBKQlFVRTdSVVIzUjBvN1FVRkRSanRCUTNKSFFUdEZRVVZKTzBsQlEwVXNhMEpCUVVFN1NVRkRRU3gxUWtGQlFUdFJRVUZCTEc5Q1FVRkJPMWxCUVVFc2MwSkJRVUU3U1VGRFFTeHJRa0ZCUVR0RlJITkhTanRGUTNCSFJUdEpRVU5GTEdOQlFVRTdTVUZEUVN4aFFVRkJPMGxCUTBFc1kwRkJRVHRKUVVOQkxHdENRVUZCTzBsQlEwRXNhVUpCUVVFN1NVRkRRU3h0UWtGQlFUdEpRVU5CTEcxQ1FVRkJPMFZFYzBkS08wVkRja2RKTzBsQlEwVXNZMEZCUVR0SlFVTkJMR05CUVVFN1NVRkRRU3hyUWtGQlFUdEpRVU5CTEhOQ1FVRkJPMGxCUTBFc2JVSkJRVUU3U1VGRFFTeFRRVUZCTzBsQlEwRXNiVU5CUVVFN1VVRkJRU3dyUWtGQlFUdFpRVUZCTERKQ1FVRkJPMFZFZFVkT08wVkRkRWROTzBsQlEwVXNXVUZCUVR0RlJIZEhVanRGUTNSSFRUdEpRVU5GTEZsQlFVRTdSVVIzUjFJN1JVTjBSMDA3U1VGRFJTeGxRVUZCTzBWRWQwZFNPMFZEY0VkRk8wbEJRMFVzYVVKQlFVRTdSVVJ6UjBvN1JVTnlSMGs3U1VGRFJTeGxRVUZCTzBsQlEwRXNaVUZCUVR0RlJIVkhUanRGUTNCSFJUdEpRVU5GTEdsQ1FVRkJPMFZFYzBkS08wVkRjRWRGTzBsQlEwVXNZVUZCUVR0SlFVTkJMR3RDUVVGQk8wbEJRMEVzVjBGQlFUdEpRVU5CTEZkQlFVRTdTVUZEUVN4TlFVRkJPMGxCUTBFc1QwRkJRVHRKUVVOQkxGZEJRVUU3U1VGRFFTeHRRa0ZCUVR0RlJITkhTanRGUTNKSFNUdEpRVU5GTEdOQlFVRTdSVVIxUjA0N1JVTndSMFU3U1VGRFJTeHJRa0ZCUVR0SlFVTkJMRmxCUVVFN1NVRkRRU3hqUVVGQk8wbEJRMEVzWlVGQlFUdEpRVU5CTEdOQlFVRTdTVUZEUVN4bFFVRkJPMFZFYzBkS08wVkRja2RKTzBsQlEwVXNWMEZCUVR0SlFVTkJMRmxCUVVFN1JVUjFSMDQ3UlVOd1IwVTdTVUZEUlN3MFFrRkJRVHRKUVVGQkxEWkNRVUZCTzFGQlFVRXNNRUpCUVVFN1dVRkJRU3h6UWtGQlFUdEZSSE5IU2p0RlEzQkhSVHRKUVVORkxHVkJRVUU3U1VGRFFTeHJRa0ZCUVR0SlFVTkJMSEZDUVVGQk8wVkVjMGRLTzBWRGNrZEpPMGxCUTBVc1owSkJRVUU3UlVSMVIwNDdSVU53UjBVN1NVRkRSU3hqUVVGQk8wbEJRMEVzYTBKQlFVRTdSVVJ6UjBvN1FVRkRSanRCUTI1SFFUdEZRVVZKTzBsQlEwVXNhMEpCUVVFN1JVUnZSMG83UlVOc1IwVTdTVUZEUlN4alFVRkJPMGxCUTBFc1kwRkJRVHRKUVVOQkxIVkNRVUZCTzBWRWIwZEtPMFZEYmtkSk8wbEJRMFVzVjBGQlFUdEpRVU5CTEdWQlFVRTdTVUZEUVN4blFrRkJRVHRKUVVOQkxHZENRVUZCTzBsQlEwRXNVVUZCUVR0SlFVTkJMR2REUVVGQk8xRkJRVUVzTkVKQlFVRTdXVUZCUVN4M1FrRkJRVHRGUkhGSFRqdEZRM0JIVFR0SlFVTkZMRTFCUVVFN1JVUnpSMUk3UlVOd1IwMDdTVUZEUlN4WlFVRkJPMFZFYzBkU08wVkRjRWROTzBsQlEwVXNVMEZCUVR0RlJITkhVanRGUTJ4SFJUdEpRVU5GTEdsQ1FVRkJPMFZFYjBkS08wVkRia2RKTzBsQlEwVXNaVUZCUVR0SlFVTkJMR1ZCUVVFN1JVUnhSMDQ3UlVOc1IwVTdTVUZEUlN3NFFrRkJRVHRGUkc5SFNqdEZRMnhIUlR0SlFVTkZMRmxCUVVFN1JVUnZSMG83UlVOc1IwVTdTVUZEUlN4clFrRkJRVHRKUVVOQkxGbEJRVUU3U1VGRFFTeGpRVUZCTzBsQlEwRXNZMEZCUVR0SlFVTkJMR1ZCUVVFN1JVUnZSMG83UlVOc1IwVTdTVUZEUlN4elFrRkJRVHRGUkc5SFNqdEZRMnhIUlR0SlFVTkZMR3RDUVVGQk8wVkViMGRLTzBGQlEwWTdRVVUzVlVFN1JVRkZTU3gzUWtGQlFUdEJSamhWU2p0QlJYSlZTVHRGUVVOSkxHdENRVUZCTzBGR2RWVlNPMEZGYkZWSk8wVkJRMGtzV1VGQlFUdEZRVU5CTEd0Q1FVRkJPMEZHYjFWU08wRkZiRlZKTzBWQlEwa3NhMEpCUVVFN1JVRkRRU3gxUmtGQlFUdEZRVUZCTERaRVFVRkJPMFZCUTBFc1pVRkJRVHRGUVVOQkxIbENRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3hwUWtGQlFUdEZRVU5CTEZkQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHVkJRVUU3UlVGRFFTeGhRVUZCTzBWQlEwRXNiVUpCUVVFN1FVWnZWVkk3UVVWcVZVazdSVUZEU1N4bFFVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4dlFrRkJRVHRGUVVGQkxHOUNRVUZCTzBWQlFVRXNZVUZCUVR0RlFVTkJMSGxDUVVGQk8wRkdiVlZTTzBGRmJGVlJPMFZCUTBrc2EwSkJRVUU3UlVGRFFTeFBRVUZCTzBWQlEwRXNVVUZCUVR0RlFVTkJMRzFEUVVGQk8wMUJRVUVzSzBKQlFVRTdWVUZCUVN3eVFrRkJRVHRGUVVOQkxGZEJRVUU3UlVGRFFTeFpRVUZCTzBWQlEwRXNiVUpCUVVFN1JVRkRRU3hyUWtGQlFUdEZRVU5CTEhsQ1FVRkJPMEZHYjFWYU8wRkZiRlZSTzBWQlEwa3NZVUZCUVR0QlJtOVZXanRCUlc1VldUdEZRVU5KTEZkQlFVRTdSVUZEUVN4WFFVRkJPMFZCUTBFc1dVRkJRVHRGUVVOQkxHdENRVUZCTzBWQlEwRXNVVUZCUVR0RlFVTkJMRk5CUVVFN1JVRkRRU3gzUTBGQlFUdE5RVUZCTEc5RFFVRkJPMVZCUVVFc1owTkJRVUU3UlVGRFFTdzBRMEZCUVR0RlFVTkJMSEZDUVVGQk8wVkJRMEVzTkVKQlFVRTdSVUZEUVN3eVFrRkJRVHRCUm5GVmFFSTdRVVZvVlVrN1JVRkRTU3h0UWtGQlFUdEJSbXRWVWp0QlJXcFZVVHRGUVVOSkxHZENRVUZCTzBGR2JWVmFPMEZGYWxWUk8wVkJRMGtzWlVGQlFUdEZRVU5CTEd0Q1FVRkJPMFZCUTBFc2VVSkJRVUU3UVVadFZWbzdRVVZzVlZrN1JVRkRTU3hqUVVGQk8wRkdiMVZvUWp0QlJXcFZVVHRGUVVOSkxIbENRVUZCTzBWQlEwRXNiVUpCUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4bFFVRkJPMEZHYlZWYU8wRkZiRlZaTzBWQlEwa3NZMEZCUVR0QlJtOVZhRUk3UVVWeVZWazdSVUZEU1N4alFVRkJPMEZHYjFWb1FqdEJSWEpWV1R0RlFVTkpMR05CUVVFN1FVWnZWV2hDTzBGRmNsVlpPMFZCUTBrc1kwRkJRVHRCUm05VmFFSTdRVVZ5VlZrN1JVRkRTU3hqUVVGQk8wRkdiMVZvUWp0QlJUZFVTVHRGUVVOSkxHOUNRVUZCTzBWQlFVRXNiMEpCUVVFN1JVRkJRU3hoUVVGQk8wVkJRMEVzZVVKQlFVRTdUVUZCUVN4elFrRkJRVHRWUVVGQkxHMUNRVUZCTzBGR0sxUlNPMEZGTVZSSk8wVkJRMGtzV1VGQlFUdEZRVU5CTEd0Q1FVRkJPMEZHTkZSU08wRkZkbFJKTzBWQlEwa3NXVUZCUVR0RlFVTkJMR0ZCUVVFN1FVWjVWRkk3UVVWNFZGRTdSVUZEU1N4WFFVRkJPMFZCUTBFc1dVRkJRVHRCUmpCVVdqczdRVVZ5VkVFN1JVRkRTU3h2UWtGQlFUdEZRVUZCTEc5Q1FVRkJPMFZCUVVFc1lVRkJRVHRGUVVOQkxHZENRVUZCTzBGR2QxUktPenRCUlhKVVFUdEZRVU5KTEc5Q1FVRkJPMFZCUVVFc2IwSkJRVUU3UlVGQlFTeGhRVUZCTzBWQlEwRXNlVUpCUVVFN1RVRkJRU3h6UWtGQlFUdFZRVUZCTEcxQ1FVRkJPMFZCUTBFc1owSkJRVUU3UVVaM1ZFbzdRVVYyVkVrN1JVRkRTU3hYUVVGQk8wVkJRMEVzV1VGQlFUdEZRVU5CTEd0Q1FVRkJPMEZHZVZSU08wRkZkbFJKTzBWQlEwa3NaVUZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzZVVKQlFVRTdRVVo1VkZJN08wRkZjbFJKTzBWQlEwa3NaVUZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzYVVKQlFVRTdSVUZEUVN4NVFrRkJRVHRGUVVOQkxHMUNRVUZCTzBWQlEwRXNhMEpCUVVFN1FVWjNWRkk3TzBGRmNGUkJPMFZCUTBrc1owSkJRVUU3UVVaMVZFbzdRVVYwVkVrN1JVRkRTU3hsUVVGQk8wVkJRMEVzWjBKQlFVRTdSVUZEUVN4NVFrRkJRVHRGUVVOQkxHbENRVUZCTzBWQlEwRXNiVUpCUVVFN1FVWjNWRkk3UVVWMFZFazdSVUZEU1N4clFrRkJRVHRGUVVOQkxHdENRVUZCTzBWQlEwRXNaVUZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzZVVKQlFVRTdSVUZEUVN4dFFrRkJRVHRCUm5kVVVqdEJSWFpVVVR0RlFVTkpMR2RDUVVGQk8wRkdlVlJhTzBGRmRsUlJPMFZCUTBrc1YwRkJRVHRGUVVOQkxGZEJRVUU3UlVGRFFTeFpRVUZCTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3hQUVVGQk8wVkJRMEVzWjBSQlFVRTdSVUZEUVN4eFFrRkJRVHRGUVVOQkxEUkNRVUZCTzBWQlEwRXNNa0pCUVVFN1FVWjVWRm83TzBGRmFGUkJPMFZCUTBrc2IwSkJRVUU3UlVGQlFTeHZRa0ZCUVR0RlFVRkJMR0ZCUVVFN1JVRkRRU3gzUWtGQlFUdE5RVUZCTEhGQ1FVRkJPMVZCUVVFc2RVSkJRVUU3UlVGRFFTeDVRa0ZCUVR0TlFVRkJMSE5DUVVGQk8xVkJRVUVzYlVKQlFVRTdRVVp0VkVvN08wRkZhRlJCTzBWQlEwa3NWMEZCUVR0RlFVTkJMRmxCUVVFN1JVRkRRU3hyUWtGQlFUdEZRVU5CTEdGQlFVRTdSVUZEUVN4clFrRkJRVHRGUVVOQkxHMUNRVUZCTzBGR2JWUktPenRCUldoVVFUdEZRVU5KTEZkQlFVRTdSVUZEUVN4WlFVRkJPMFZCUTBFc2FVTkJRVUU3VFVGQlFTdzJRa0ZCUVR0VlFVRkJMSGxDUVVGQk8wVkJRMEVzYVVKQlFVRTdRVVp0VkVvN08wRkZhRlJCTzBWQlEwa3NaVUZCUVR0RlFVTkJMRlZCUVVFN1JVRkRRU3hwUWtGQlFUdEJSbTFVU2pzN1FVVm9WRUU3UlVGRFNTeGxRVUZCTzBWQlEwRXNWVUZCUVR0RlFVTkJMR2xDUVVGQk8wVkJRMEVzY1VKQlFVRTdSVUZEUVN4clJFRkJRVHRGUVVGQkxEQkRRVUZCTzBGR2JWUktPenRCUldoVVFUdEZRVU5KTEd0Q1FVRkJPMFZCUTBFc2IwSkJRVUU3UlVGQlFTeHZRa0ZCUVR0RlFVRkJMR0ZCUVVFN1JVRkRRU3g1UWtGQlFUdE5RVUZCTEhOQ1FVRkJPMVZCUVVFc2JVSkJRVUU3UlVGRFFTeDNRa0ZCUVR0TlFVRkJMSEZDUVVGQk8xVkJRVUVzZFVKQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHVkJRVUU3UlVGRFFTeDVRa0ZCUVR0RlFVTkJMR2RDUVVGQk8wRkdiVlJLT3p0QlJTOVRRVHRGUVVOSkxHdENRVUZCTzBWQlEwRXNWVUZCUVR0RlFVTkJMRk5CUVVFN1JVRkRRU3h0UTBGQlFUdE5RVUZCTEN0Q1FVRkJPMVZCUVVFc01rSkJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3haUVVGQk8wRkdhMVJLT3p0QlJUZFRRVHRGUVVOSk8wbEJRMGtzTWtKQlFVRTdSVVpuVkU0N1JVVTVVMDA3U1VGRFNTeGxRVUZCTzBsQlEwRXNjVUpCUVVFN1JVWm5WRlk3UlVVM1UwMDdTVUZEU1N4M1FrRkJRVHRKUVVOQkxHdENRVUZCTzBsQlEwRXNiVUpCUVVFN1NVRkRRU3h6UWtGQlFUdEZSaXRUVmp0RlJUVlRUVHRKUVVOSkxHdENRVUZCTzBsQlEwRXNjVUpCUVVFN1NVRkRRU3h0UWtGQlFUdEZSamhUVmp0RlJUVlRWVHRKUVVOSkxHRkJRVUU3U1VGRFFTeGpRVUZCTzBsQlEwRXNjMEpCUVVFN1NVRkRRU3cyUWtGQlFUdEZSamhUWkR0RlJUTlRWVHRKUVVOSkxHRkJRVUU3UlVZMlUyUTdSVVV6VTJNN1NVRkRTU3hoUVVGQk8wbEJRMEVzWTBGQlFUdEZSalpUYkVJN1JVVjRVMDA3U1VGRFNTeHpRa0ZCUVR0RlJqQlRWanRGUlhoVFZUdEpRVU5KTEd0Q1FVRkJPMGxCUTBFc2MwSkJRVUU3UlVZd1UyUTdSVVYyVTFVN1NVRkRTU3cyUWtGQlFUdEpRVU5CTEhOQ1FVRkJPMGxCUTBFc2RVSkJRVUU3U1VGRFFTeHJRa0ZCUVR0RlJubFRaRHRGUlhKVFRUdEpRVU5KTEdWQlFVRTdTVUZEUVN4eFFrRkJRVHRGUm5WVFZqdEZSWEJUVFR0SlFVTkpMR1ZCUVVFN1NVRkRRU3huUWtGQlFUdEZSbk5UVmp0RlJXeFRSVHRKUVVOSkxHMUNRVUZCTzBWR2IxTk9PMFZGYWxORk8wbEJRMGtzYlVKQlFVRTdSVVp0VTA0N1JVVnFVMDA3U1VGRFNTeGpRVUZCTzBsQlEwRXNaVUZCUVR0SlFVTkJMSEZDUVVGQk8wVkdiVk5XTzBWRmFGTk5PMGxCUTBrc2EwSkJRVUU3UlVaclUxWTdSVVUzVWswN1NVRkRTU3hyUWtGQlFUdEpRVU5CTEc5Q1FVRkJPMGxCUTBFc2MwSkJRVUU3UlVZclVsWTdSVVV6VWtVN1NVRkRTU3h0UWtGQlFUdEZSalpTVGp0RlJUTlNUVHRKUVVOSkxHdENRVUZCTzBsQlEwRXNjMEpCUVVFN1JVWTJVbFk3UlVVeFVrMDdTVUZEU1N4eFFrRkJRVHRKUVVOQkxHdENRVUZCTzBsQlEwRXNjMEpCUVVFN1JVWTBVbFk3UlVVeFVsVTdTVUZEU1N4aFFVRkJPMGxCUTBFc1kwRkJRVHRGUmpSU1pEdEZSWFpTUlR0SlFVTkpMR05CUVVFN1NVRkRRU3hsUVVGQk8wbEJRMEVzY1VKQlFVRTdSVVo1VWs0N1JVVjBVa1U3U1VGRFNTeHhRa0ZCUVR0RlJuZFNUanRGUlhKU1JUdEpRVU5KTEhGQ1FVRkJPMFZHZFZKT08wVkZjRkpGTzBsQlEwa3NhVUpCUVVFN1JVWnpVazQ3UlVWdVVrVTdTVUZEU1N4aFFVRkJPMGxCUTBFc2EwSkJRVUU3UlVaeFVrNDdRVUZEUmp0QlJXNVNRVHRGUVVOSk8wbEJRMGtzZFVKQlFVRTdSVVp4VWs0N1JVVndVazA3U1VGRFNTeG5Ra0ZCUVR0RlJuTlNWanRGUlhCU1RUdEpRVU5KTEZkQlFVRTdTVUZEUVN4bFFVRkJPMFZHYzFKV08wVkZibEpOTzBsQlEwa3NZVUZCUVR0SlFVTkJMRmRCUVVFN1NVRkRRU3hsUVVGQk8wbEJRMEVzWjBKQlFVRTdTVUZEUVN4dFFrRkJRVHRGUm5GU1ZqdEZSV3hTVFR0SlFVTkpMR1ZCUVVFN1NVRkRRU3hyUWtGQlFUdEpRVU5CTEdkQ1FVRkJPMFZHYjFKV08wVkZiRkpWTzBsQlEwa3NWMEZCUVR0SlFVTkJMRmxCUVVFN1NVRkRRU3hyUWtGQlFUdEpRVU5CTEhsQ1FVRkJPMFZHYjFKa08wVkZhbEpWTzBsQlEwa3NZVUZCUVR0RlJtMVNaRHRGUldwU1l6dEpRVU5KTEZkQlFVRTdTVUZEUVN4WlFVRkJPMFZHYlZKc1FqdEZSVGxSVFR0SlFVTkpMRzFDUVVGQk8wVkdaMUpXTzBWRk9WRlZPMGxCUTBrc1pVRkJRVHRKUVVOQkxHdENRVUZCTzBWR1oxSmtPMFZGTjFGVk8wbEJRMGtzZVVKQlFVRTdTVUZEUVN4dFFrRkJRVHRKUVVOQkxHdENRVUZCTzBsQlEwRXNaVUZCUVR0RlJpdFJaRHRGUlROUlRUdEpRVU5KTEZsQlFVRTdTVUZEUVN4clFrRkJRVHRGUmpaUlZqdEZSVEZSVFR0SlFVTkpMRmxCUVVFN1NVRkRRU3hoUVVGQk8wVkdORkZXTzBWRmVGRkZPMGxCUTBrc05FSkJRVUU3U1VGQlFTdzJRa0ZCUVR0UlFVRkJMREJDUVVGQk8xbEJRVUVzYzBKQlFVRTdTVUZEUVN4blFrRkJRVHRGUmpCUlRqdEZSWFpSUlR0SlFVTkpMR2RDUVVGQk8wVkdlVkZPTzBWRmRsRk5PMGxCUTBrc1YwRkJRVHRKUVVOQkxGbEJRVUU3U1VGRFFTeHJRa0ZCUVR0RlJubFJWanRGUlhSUlRUdEpRVU5KTEdWQlFVRTdSVVozVVZZN1JVVndVVVU3U1VGRFNTeG5Ra0ZCUVR0RlJuTlJUanRGUlhKUlRUdEpRVU5KTEdWQlFVRTdTVUZEUVN4cFFrRkJRVHRKUVVOQkxHMUNRVUZCTzBWR2RWRldPMFZGYmxGRk8wbEJRMGtzWjBKQlFVRTdSVVp4VVU0N1JVVnVVVTA3U1VGRFNTeGxRVUZCTzBsQlEwRXNiVUpCUVVFN1JVWnhVVlk3UlVWc1VVMDdTVUZEU1N4clFrRkJRVHRKUVVOQkxHVkJRVUU3U1VGRFFTeHRRa0ZCUVR0RlJtOVJWanRGUld4UlZUdEpRVU5KTEZkQlFVRTdTVUZEUVN4WlFVRkJPMFZHYjFGa08wVkZMMUJGTzBsQlEwa3NWMEZCUVR0SlFVTkJMRmxCUVVFN1NVRkRRU3hyUWtGQlFUdEZSbWxSVGp0RlJUbFFSVHRKUVVOSkxHbENRVUZCTzBWR1oxRk9PMFZGTjFCRk8wbEJRMGtzYVVKQlFVRTdSVVlyVUU0N1JVVTFVRVU3U1VGRFNTeGxRVUZCTzBWR09GQk9PMFZGTTFCRk8wbEJRMGtzVlVGQlFUdEpRVU5CTEdWQlFVRTdSVVkyVUU0N1FVRkRSanRCUlROUVFUdEZRVU5KTEdGQlFVRTdRVVkyVUVvN08wRkZNMUJCTzBWQlEwazdTVUZEU1N4elFrRkJRVHRGUmpoUVRqdEZSVGRRVFR0SlFVTkpMRzlDUVVGQk8wbEJRVUVzYjBKQlFVRTdTVUZCUVN4aFFVRkJPMGxCUTBFc05FSkJRVUU3U1VGQlFTdzJRa0ZCUVR0UlFVRkJMREJDUVVGQk8xbEJRVUVzYzBKQlFVRTdSVVlyVUZZN1JVVTNVRTA3U1VGRFNTdzBRa0ZCUVR0UlFVRkJMR2xDUVVGQk8xbEJRVUVzVVVGQlFUdEpRVU5CTEdkQ1FVRkJPMGxCUTBFc1owSkJRVUU3UlVZclVGWTdSVVU1VUZVN1NVRkRTU3hoUVVGQk8wVkdaMUZrTzBWRk4xQk5PMGxCUTBrc05FSkJRVUU3VVVGQlFTeHBRa0ZCUVR0WlFVRkJMRkZCUVVFN1JVWXJVRlk3UlVVM1VFMDdTVUZEU1N4blFrRkJRVHRGUml0UVZqdEZSVGRRVFR0SlFVTkpMRmRCUVVFN1NVRkRRU3hsUVVGQk8wVkdLMUJXTzBWRk5WQk5PMGxCUTBrc2EwSkJRVUU3U1VGRFFTeGxRVUZCTzBsQlEwRXNaMEpCUVVFN1NVRkRRU3h0UWtGQlFUdEZSamhRVmp0RlJUTlFUVHRKUVVOSkxHVkJRVUU3U1VGRFFTeHJRa0ZCUVR0SlFVTkJMR2RDUVVGQk8wVkdObEJXTzBWRk0xQlZPMGxCUTBrc1YwRkJRVHRKUVVOQkxGbEJRVUU3U1VGRFFTeHJRa0ZCUVR0SlFVTkJMSGxDUVVGQk8wVkdObEJrTzBWRk1WQlZPMGxCUTBrc1lVRkJRVHRGUmpSUVpEdEZSVEZRWXp0SlFVTkpMRmRCUVVFN1NVRkRRU3haUVVGQk8wVkdORkJzUWp0RlJYWlFUVHRKUVVOSkxHMUNRVUZCTzBWR2VWQldPMFZGZGxCVk8wbEJRMGtzWlVGQlFUdEpRVU5CTEd0Q1FVRkJPMFZHZVZCa08wVkZkRkJWTzBsQlEwa3NlVUpCUVVFN1NVRkRRU3h0UWtGQlFUdEpRVU5CTEd0Q1FVRkJPMGxCUTBFc1pVRkJRVHRGUm5kUVpEdEZSWEJRVFR0SlFVTkpMRmRCUVVFN1NVRkRRU3hsUVVGQk8wbEJRMEVzWVVGQlFUdEZSbk5RVmp0RlJXNVFUVHRKUVVOSkxGZEJRVUU3U1VGRFFTeFpRVUZCTzBWR2NWQldPMFZGYWxCRk8wbEJRMGtzTkVKQlFVRTdTVUZCUVN3MlFrRkJRVHRSUVVGQkxEQkNRVUZCTzFsQlFVRXNjMEpCUVVFN1NVRkRRU3huUWtGQlFUdEZSbTFRVGp0RlJXaFFSVHRKUVVOSkxHZENRVUZCTzBWR2ExQk9PMFZGYUZCTk8wbEJRMGtzVjBGQlFUdEpRVU5CTEZsQlFVRTdTVUZEUVN4clFrRkJRVHRGUm10UVZqdEZSUzlQVFR0SlFVTkpMR1ZCUVVFN1JVWnBVRlk3UlVVM1QwVTdTVUZEU1N4aFFVRkJPMFZHSzA5T08wVkZPVTlOTzBsQlEwa3NaVUZCUVR0SlFVTkJMR2xDUVVGQk8wbEJRMEVzYlVKQlFVRTdSVVpuVUZZN1JVVTFUMFU3U1VGRFNTeG5Ra0ZCUVR0RlJqaFBUanRGUlRWUFRUdEpRVU5KTEdWQlFVRTdTVUZEUVN4dFFrRkJRVHRGUmpoUFZqdEZSVE5QVFR0SlFVTkpMR3RDUVVGQk8wbEJRMEVzWlVGQlFUdEpRVU5CTEcxQ1FVRkJPMFZHTms5V08wVkZNMDlWTzBsQlEwa3NWMEZCUVR0SlFVTkJMRmxCUVVFN1JVWTJUMlE3UlVWNFQwVTdTVUZEU1N4WFFVRkJPMGxCUTBFc1dVRkJRVHRKUVVOQkxHbENRVUZCTzBWR01FOU9PMFZGZGs5Rk8wbEJRMGtzYVVKQlFVRTdSVVo1VDA0N1JVVjBUMFU3U1VGRFNTeHBRa0ZCUVR0RlJuZFBUanRGUlhKUFJUdEpRVU5KTEdWQlFVRTdSVVoxVDA0N1JVVndUMFU3U1VGRFNTeFZRVUZCTzBsQlEwRXNZMEZCUVR0RlJuTlBUanRGUlhCUFJUdEpRVU5KTEdOQlFVRTdSVVp6VDA0N1JVVndUMFU3U1VGRFNTeGhRVUZCTzBWR2MwOU9PMEZCUTBZN1FVZHVOVUpCTzBWQlEwa3NiVUpCUVVFN1JVRkRRU3hwUWtGQlFUdEJTSEUxUWtvN1FVZHNOVUpKTzBWQlEwa3NXVUZCUVR0RlFVTkJMRmxCUVVFN1JVRkRRU3hyUWtGQlFUdEJTRzgxUWxJN1FVZHVOVUpSTzBWQlEwa3NWMEZCUVR0RlFVTkJMRmxCUVVFN1FVaHhOVUphTzBGSEx6UkNTVHRGUVVOSkxHOUNRVUZCTzBWQlFVRXNiMEpCUVVFN1JVRkJRU3hoUVVGQk8wVkJRMEVzZVVKQlFVRTdUVUZCUVN4elFrRkJRVHRWUVVGQkxHMUNRVUZCTzBGSWFUVkNVanRCUjJnMVFsRTdSVUZEU1N4aFFVRkJPMEZJYXpWQ1dqdEJSMmcxUWxFN1JVRkRTU3huUWtGQlFUdEZRVU5CTEd0Q1FVRkJPMEZJYXpWQ1dqdEJSMm8xUWxrN1JVRkRTU3hsUVVGQk8wRkliVFZDYUVJN1FVZHFOVUpaTzBWQlEwa3NWMEZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3g1UWtGQlFUdEZRVU5CTEhGQ1FVRkJPMEZJYlRWQ2FFSTdPMEZITlRSQ1FUdEZRVU5KTEc5Q1FVRkJPMFZCUVVFc2IwSkJRVUU3UlVGQlFTeGhRVUZCTzBWQlEwRXNlVUpCUVVFN1RVRkJRU3h6UWtGQlFUdFZRVUZCTEcxQ1FVRkJPMEZJS3pSQ1NqczdRVWMxTkVKQk8wVkJRMGtzYlVKQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxHVkJRVUU3UlVGRFFTeGpRVUZCTzBWQlEwRXNaVUZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3hyUWtGQlFUdEZRVU5CTEhsQ1FVRkJPMEZJS3pSQ1NqczdRVWMzTkVKQk8wVkJRMGs3U1VGRFNTeHZRa0ZCUVR0RlNHYzFRazQ3UlVjNU5FSk5PMGxCUTBrc1kwRkJRVHRKUVVOQkxHTkJRVUU3U1VGRFFTeHhRa0ZCUVR0RlNHYzFRbFk3UlVjMU5FSlZPMGxCUTBrc2NVSkJRVUU3UlVnNE5FSmtPMFZITlRSQ1l6dEpRVU5KTEd0Q1FVRkJPMFZJT0RSQ2JFSTdSVWQ0TkVKRk8wbEJRMGtzYlVKQlFVRTdTVUZEUVN4clFrRkJRVHRKUVVOQkxHdENRVUZCTzBWSU1EUkNUanRCUVVOR08wRkhlRFJDUVR0RlFVTkpPMGxCUTBrc2IwSkJRVUU3UlVnd05FSk9PMFZIZURSQ1RUdEpRVU5KTEdWQlFVRTdTVUZEUVN4blFrRkJRVHRKUVVOQkxHVkJRVUU3U1VGRFFTeHBRa0ZCUVR0SlFVTkJMR3RDUVVGQk8wVklNRFJDVmp0RlIzWTBRazA3U1VGRFNTeHJRa0ZCUVR0RlNIazBRbFk3UlVkMk5FSlZPMGxCUTBrc2IwSkJRVUU3U1VGQlFTeHZRa0ZCUVR0SlFVRkJMR0ZCUVVFN1NVRkRRU3h0UWtGQlFUdFJRVUZCTEdWQlFVRTdTVUZEUVN4WFFVRkJPMGxCUTBFc2VVSkJRVUU3VVVGQlFTeHpRa0ZCUVR0WlFVRkJMRGhDUVVGQk8wVkllVFJDWkR0RlIzQTBRbFU3U1VGRFNTeGxRVUZCTzBsQlEwRXNjMEpCUVVFN1JVaHpORUprTzBWSGNEUkNZenRKUVVOSkxHZENRVUZCTzBWSWN6UkNiRUk3UlVkdU5FSmpPMGxCUTBrc2EwSkJRVUU3U1VGRFFTeG5Ra0ZCUVR0RlNIRTBRbXhDTzBWSEx6TkNSVHRKUVVOSkxHMUNRVUZCTzBsQlEwRXNhMEpCUVVFN1NVRkRRU3hyUWtGQlFUdEZTR2swUWs0N1FVRkRSanRCUnk4elFrRTdSVUZEU1R0SlFVTkpMRzlDUVVGQk8wVklhVFJDVGp0RlJ5OHpRazA3U1VGRFNTeGxRVUZCTzBsQlEwRXNaMEpCUVVFN1JVaHBORUpXTzBWSE9UTkNUVHRKUVVOSkxHMUNRVUZCTzBsQlEwRXNORUpCUVVFN1NVRkJRU3cyUWtGQlFUdFJRVUZCTERCQ1FVRkJPMWxCUVVFc2MwSkJRVUU3U1VGRFFTeDVRa0ZCUVR0UlFVRkJMSE5DUVVGQk8xbEJRVUVzYlVKQlFVRTdSVWhuTkVKV08wVkhPVE5DVlR0SlFVTkpMSE5DUVVGQk8wVklaelJDWkR0RlJ6Y3pRbFU3U1VGRFNTeHJRa0ZCUVR0SlFVTkJMSE5DUVVGQk8wVklLek5DWkR0RlJ6Y3pRbU03U1VGRFNTeHJRa0ZCUVR0SlFVTkJMR2RDUVVGQk8wVklLek5DYkVJN1JVZDZNMEpGTzBsQlEwa3NiMEpCUVVFN1NVRkRRU3hyUWtGQlFUdEpRVU5CTEd0Q1FVRkJPMFZJTWpOQ1RqdEJRVU5HTzBGQlEwRTdRVUZEUVN3d1EwRkJNRU1zTWtOQlFUSkRPMEZCUTNKR0xITkNRVUZ6UWl3clEwRkJLME03UVVGRGNrVTdPME5CUlVNN08wRkJSVVE3TzBGQlJVRTdPMEZCUlVFN08wTkJSVU03TzBGQlJVUTdPMEZCUlVFN08wRkJSVUU3TzBOQlJVTTdPMEZCUlVRN08wRkJSVUU3TzBGQlJVRWlMQ0ptYVd4bElqb2liM0prWlhJdVkzTnpJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpWEhKY2Jpb2dlMXh5WEc0Z0lDQWdiV0Z5WjJsdU9pQXdPMXh5WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNRHRjY2x4dUlDQWdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNoY2NseHVmVnh5WEc0a1ozSmhlVG9qTkRFME1UUXhPMXh5WEc0a2QyaHBkR1U2STJabVpqdGNjbHh1SkdKc2RXVTZJelk0UTBGQ056dGNjbHh1YUhSdGJIdGNjbHh1SUNCelkzSnZiR3d0WW1Wb1lYWnBiM0k2SUhOdGIyOTBhRHRjY2x4dWZWeHlYRzV0WVdsdWUxeHlYRzRnSUNBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmp0Y2NseHVmVnh5WEc1QVptOXVkQzFtWVdObElIdGNjbHh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUJjSWtKbFltRnpJRUp2YjJ0Y0lqdGNjbHh1SUNBZ0lITnlZem9nZFhKc0tGd2lMaTR2Wm05dWRDOUNaV0poYzA1bGRXVkNiMjlyTG5kdlptWXlYQ0lwTzF4eVhHNGdJQ0FnWm05dWRDMTNaV2xuYUhRNklEUXdNRHRjY2x4dUlDQWdJR1p2Ym5RdFpHbHpjR3hoZVRvZ2MzZGhjRHRjY2x4dWZWeHlYRzVjY2x4dVFHWnZiblF0Wm1GalpTQjdYSEpjYmlBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nWENKSmJuUmxjbHdpTzF4eVhHNGdJQ0FnYzNKak9pQjFjbXdvWENJdUxpOW1iMjUwTDBsdWRHVnlMVkpsWjNWc1lYSXVkMjltWmpKY0lpazdYSEpjYmlBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHlYRzRnSUNBZ1ptOXVkQzFrYVhOd2JHRjVPaUJ6ZDJGd08xeHlYRzU5WEhKY2JrQm1iMjUwTFdaaFkyVWdlMXh5WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVNXNTBaWEpjSWp0Y2NseHVJQ0FnSUhOeVl6b2dkWEpzS0Z3aUxpNHZabTl1ZEM5SmJuUmxjaTFDYjJ4a0xuZHZabVl5WENJcE8xeHlYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRGN3TUR0Y2NseHVJQ0FnSUdadmJuUXRaR2x6Y0d4aGVUb2djM2RoY0R0Y2NseHVmVnh5WEc1QVptOXVkQzFtWVdObElIdGNjbHh1SUNCbWIyNTBMV1poYldsc2VUb2dYQ0pKYm5SbGNsd2lPMXh5WEc0Z0lITnlZem9nZFhKc0tGd2lMaTR2Wm05dWRDOUpiblJsY2kxTlpXUnBkVzB1ZDI5bVpqSmNJaWs3WEhKY2JpQWdabTl1ZEMxM1pXbG5hSFE2SURVd01EdGNjbHh1SUNCbWIyNTBMV1JwYzNCc1lYazZJSE4zWVhBN1hISmNibjFjY2x4dVFHWnZiblF0Wm1GalpTQjdYSEpjYmlBZ1ptOXVkQzFtWVcxcGJIazZJRndpU1c1MFpYSmNJanRjY2x4dUlDQnpjbU02SUhWeWJDaGNJaTR1TDJadmJuUXZTVzUwWlhJdFRHbG5hSFJDUlZSQkxuZHZabVl5WENJcE8xeHlYRzRnSUdadmJuUXRkMlZwWjJoME9pQXpNREE3WEhKY2JpQWdabTl1ZEMxa2FYTndiR0Y1T2lCemQyRndPMXh5WEc1OVhISmNia0JtYjI1MExXWmhZMlVnZTF4eVhHNGdJR1p2Ym5RdFptRnRhV3g1T2lCY0lrMXZiblJ6WlhKeVlYUmNJanRjY2x4dUlDQnpjbU02SUhWeWJDaGNJaTR1TDJadmJuUXZUVzl1ZEhObGNuSmhkQzFTWldkMWJHRnlMbmR2Wm1ZeVhDSXBPMXh5WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUEwTURBN1hISmNiaUFnWm05dWRDMWthWE53YkdGNU9pQnpkMkZ3TzF4eVhHNTlYSEpjYmtCbWIyNTBMV1poWTJVZ2UxeHlYRzRnSUdadmJuUXRabUZ0YVd4NU9pQmNJazF2Ym5SelpYSnlZWFJjSWp0Y2NseHVJQ0J6Y21NNklIVnliQ2hjSWk0dUwyWnZiblF2VFc5dWRITmxjbkpoZEMxQ2IyeGtMbmR2Wm1ZeVhDSXBPMXh5WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUEzTURBN1hISmNiaUFnWm05dWRDMWthWE53YkdGNU9pQnpkMkZ3TzF4eVhHNTlYSEpjYmtCbWIyNTBMV1poWTJVZ2UxeHlYRzRnSUdadmJuUXRabUZ0YVd4NU9pQmNJazF2Ym5SelpYSnlZWFJjSWp0Y2NseHVJQ0J6Y21NNklIVnliQ2hjSWk0dUwyWnZiblF2VFc5dWRITmxjbkpoZEMxTlpXUnBkVzB1ZDI5bVpqSmNJaWs3WEhKY2JpQWdabTl1ZEMxM1pXbG5hSFE2SURVd01EdGNjbHh1SUNCbWIyNTBMV1JwYzNCc1lYazZJSE4zWVhBN1hISmNibjFjY2x4dVFHWnZiblF0Wm1GalpTQjdYSEpjYmlBZ1ptOXVkQzFtWVcxcGJIazZJRndpVFc5dWRITmxjbkpoZEZ3aU8xeHlYRzRnSUhOeVl6b2dkWEpzS0Z3aUxpNHZabTl1ZEM5TmIyNTBjMlZ5Y21GMExVeHBaMmgwTG5kdlptWXlYQ0lwTzF4eVhHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBek1EQTdYSEpjYmlBZ1ptOXVkQzFrYVhOd2JHRjVPaUJ6ZDJGd08xeHlYRzU5WEhKY2JrQm1iMjUwTFdaaFkyVWdlMXh5WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUJjSWsxdmJuUnpaWEp5WVhSY0lqdGNjbHh1SUNCemNtTTZJSFZ5YkNoY0lpNHVMMlp2Ym5RdlRXOXVkSE5sY25KaGRDMVRaVzFwUW05c1pDNTNiMlptTWx3aUtUdGNjbHh1SUNCbWIyNTBMWGRsYVdkb2REb2dOakF3TzF4eVhHNGdJR1p2Ym5RdFpHbHpjR3hoZVRvZ2MzZGhjRHRjY2x4dWZWeHlYRzVjY2x4dVltOWtlU0I3WEhKY2JpQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVNXNTBaWEpjSWp0Y2NseHVJQ0JtYjI1MExYZGxhV2RvZERvZ05EQXdPMXh5WEc0Z0lHWnZiblF0YzJsNlpUb2dNVFp3ZUR0Y2NseHVJQ0JzYVc1bExXaGxhV2RvZERvZ01UUXdKVHRjY2x4dUlDQmpiMnh2Y2pvZ0l6UXhOREUwTVR0Y2NseHVmVnh5WEc1Y2NseHVMbU52Ym5SaGFXNWxjbnRjY2x4dUlDQnRZWGd0ZDJsa2RHZzZJREUwTkRCd2VEdGNjbHh1SUNCd1lXUmthVzVuT2lBd0lESXdjSGc3WEhKY2JpQWdiV0Z5WjJsdU9pQXdJR0YxZEc4N1hISmNiaUFnUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxaGVDMTNhV1IwYURvZ01Ua3hPWEI0S1NCN1hISmNiaUFnSUNCdFlYZ3RkMmxrZEdnNklEYzFkbmM3WEhKY2JpQWdJQ0J3WVdSa2FXNW5PaUF3SURFdU1EUXlkbmM3WEhKY2JpQWdmU0JjY2x4dUlDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUF4TURJMGNIZ3BJSHRjY2x4dUlDQWdJRzFoZUMxM2FXUjBhRG9nTVRBd0pUdGNjbHh1SUNBZ0lIQmhaR1JwYm1jNklEQWdNaTQyTURSMmR6dGNjbHh1SUNCOUlGeHlYRzRnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodFlYZ3RkMmxrZEdnNklEWTFNSEI0S1NCN1hISmNiaUFnSUNCd1lXUmthVzVuT2lBd0lETXVOakl6ZG5jN1hISmNiaUFnZlNCY2NseHVmVnh5WEc0dWRHbDBiR1Y3WEhKY2JpQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVFtVmlZWE1nVG1WMVpWd2lMQ0J6WVc1ekxYTmxjbWxtTzF4eVhHNGdJR3hwYm1VdGFHVnBaMmgwT2lBeE1EQWxPMXh5WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUEwTURBN1hISmNiaUFnWm05dWRDMXphWHBsT2lBM05uQjRPMXh5WEc0Z0lDWWdjM0JoYm50Y2NseHVJQ0FnSUdOdmJHOXlPaUFrWW14MVpUdGNjbHh1SUNCOVhISmNiaUFnUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxaGVDMTNhV1IwYURvZ01Ua3hPWEI0S1NCN1hISmNiaUFnSUNCbWIyNTBMWE5wZW1VNklETXVPVFU0ZG5jN1hISmNiaUFnZlZ4eVhHNGdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0WVhndGQybGtkR2c2SURFd01qUndlQ2tnZTF4eVhHNGdJQ0FnWm05dWRDMXphWHBsT2lBM0xqVTFNblozTzF4eVhHNGdJSDFjY2x4dUlDQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUEyTlRCd2VDa2dlMXh5WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUE1TGpZMk1uWjNPMXh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNHVjMmh2ZHkxMFlXSnNaWFI3WEhKY2JpQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHlYRzU5WEhKY2JrQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRZWGd0ZDJsa2RHZzZJREV3TWpSd2VDa2dlMXh5WEc0Z0lDQWdMbk5vYjNjdGRHRmliR1YwZTF4eVhHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTG1ocFpHVXRkR0ZpYkdWMGUxeHlYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hISmNiaUFnSUNCOVhISmNibjFjY2x4dVhISmNia0JwYlhCdmNuUWdYQ0ppYkc5amF5OWZhR1ZoWkdWeUxuTmpjM05jSWp0Y2NseHVRR2x0Y0c5eWRDQmNJbUpzYjJOckwxOW1iM0p0TG5OamMzTmNJanRjY2x4dVhISmNia0JwYlhCdmNuUWdYQ0ppYkc5amF5OWZabTl2ZEdWeUxuTmpjM05jSWpzaUxDSXFJSHRjYmlBZ2JXRnlaMmx1T2lBd08xeHVJQ0J3WVdSa2FXNW5PaUF3TzF4dUlDQmliM2d0YzJsNmFXNW5PaUJpYjNKa1pYSXRZbTk0TzF4dWZWeHVYRzVvZEcxc0lIdGNiaUFnYzJOeWIyeHNMV0psYUdGMmFXOXlPaUJ6Ylc5dmRHZzdYRzU5WEc1Y2JtMWhhVzRnZTF4dUlDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHVmVnh1WEc1QVptOXVkQzFtWVdObElIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklGd2lRbVZpWVhNZ1FtOXZhMXdpTzF4dUlDQnpjbU02SUhWeWJDaGNJaTR1TDJadmJuUXZRbVZpWVhOT1pYVmxRbTl2YXk1M2IyWm1NbHdpS1R0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURRd01EdGNiaUFnWm05dWRDMWthWE53YkdGNU9pQnpkMkZ3TzF4dWZWeHVRR1p2Ym5RdFptRmpaU0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUJjSWtsdWRHVnlYQ0k3WEc0Z0lITnlZem9nZFhKc0tGd2lMaTR2Wm05dWRDOUpiblJsY2kxU1pXZDFiR0Z5TG5kdlptWXlYQ0lwTzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHVJQ0JtYjI1MExXUnBjM0JzWVhrNklITjNZWEE3WEc1OVhHNUFabTl1ZEMxbVlXTmxJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJRndpU1c1MFpYSmNJanRjYmlBZ2MzSmpPaUIxY213b1hDSXVMaTltYjI1MEwwbHVkR1Z5TFVKdmJHUXVkMjltWmpKY0lpazdYRzRnSUdadmJuUXRkMlZwWjJoME9pQTNNREE3WEc0Z0lHWnZiblF0WkdsemNHeGhlVG9nYzNkaGNEdGNibjFjYmtCbWIyNTBMV1poWTJVZ2UxeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ1hDSkpiblJsY2x3aU8xeHVJQ0J6Y21NNklIVnliQ2hjSWk0dUwyWnZiblF2U1c1MFpYSXRUV1ZrYVhWdExuZHZabVl5WENJcE8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ05UQXdPMXh1SUNCbWIyNTBMV1JwYzNCc1lYazZJSE4zWVhBN1hHNTlYRzVBWm05dWRDMW1ZV05sSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVNXNTBaWEpjSWp0Y2JpQWdjM0pqT2lCMWNtd29YQ0l1TGk5bWIyNTBMMGx1ZEdWeUxVeHBaMmgwUWtWVVFTNTNiMlptTWx3aUtUdGNiaUFnWm05dWRDMTNaV2xuYUhRNklETXdNRHRjYmlBZ1ptOXVkQzFrYVhOd2JHRjVPaUJ6ZDJGd08xeHVmVnh1UUdadmJuUXRabUZqWlNCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCY0lrMXZiblJ6WlhKeVlYUmNJanRjYmlBZ2MzSmpPaUIxY213b1hDSXVMaTltYjI1MEwwMXZiblJ6WlhKeVlYUXRVbVZuZFd4aGNpNTNiMlptTWx3aUtUdGNiaUFnWm05dWRDMTNaV2xuYUhRNklEUXdNRHRjYmlBZ1ptOXVkQzFrYVhOd2JHRjVPaUJ6ZDJGd08xeHVmVnh1UUdadmJuUXRabUZqWlNCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCY0lrMXZiblJ6WlhKeVlYUmNJanRjYmlBZ2MzSmpPaUIxY213b1hDSXVMaTltYjI1MEwwMXZiblJ6WlhKeVlYUXRRbTlzWkM1M2IyWm1NbHdpS1R0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURjd01EdGNiaUFnWm05dWRDMWthWE53YkdGNU9pQnpkMkZ3TzF4dWZWeHVRR1p2Ym5RdFptRmpaU0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUJjSWsxdmJuUnpaWEp5WVhSY0lqdGNiaUFnYzNKak9pQjFjbXdvWENJdUxpOW1iMjUwTDAxdmJuUnpaWEp5WVhRdFRXVmthWFZ0TG5kdlptWXlYQ0lwTzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTlRBd08xeHVJQ0JtYjI1MExXUnBjM0JzWVhrNklITjNZWEE3WEc1OVhHNUFabTl1ZEMxbVlXTmxJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJRndpVFc5dWRITmxjbkpoZEZ3aU8xeHVJQ0J6Y21NNklIVnliQ2hjSWk0dUwyWnZiblF2VFc5dWRITmxjbkpoZEMxTWFXZG9kQzUzYjJabU1sd2lLVHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRE13TUR0Y2JpQWdabTl1ZEMxa2FYTndiR0Y1T2lCemQyRndPMXh1ZlZ4dVFHWnZiblF0Wm1GalpTQjdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQmNJazF2Ym5SelpYSnlZWFJjSWp0Y2JpQWdjM0pqT2lCMWNtd29YQ0l1TGk5bWIyNTBMMDF2Ym5SelpYSnlZWFF0VTJWdGFVSnZiR1F1ZDI5bVpqSmNJaWs3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUEyTURBN1hHNGdJR1p2Ym5RdFpHbHpjR3hoZVRvZ2MzZGhjRHRjYm4xY2JtSnZaSGtnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nWENKSmJuUmxjbHdpTzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHVJQ0JtYjI1MExYTnBlbVU2SURFMmNIZzdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXhOREFsTzF4dUlDQmpiMnh2Y2pvZ0l6UXhOREUwTVR0Y2JuMWNibHh1TG1OdmJuUmhhVzVsY2lCN1hHNGdJRzFoZUMxM2FXUjBhRG9nTVRRME1IQjRPMXh1SUNCd1lXUmthVzVuT2lBd0lESXdjSGc3WEc0Z0lHMWhjbWRwYmpvZ01DQmhkWFJ2TzF4dWZWeHVRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFoZUMxM2FXUjBhRG9nTVRreE9YQjRLU0I3WEc0Z0lDNWpiMjUwWVdsdVpYSWdlMXh1SUNBZ0lHMWhlQzEzYVdSMGFEb2dOelYyZHp0Y2JpQWdJQ0J3WVdSa2FXNW5PaUF3SURFdU1EUXlkbmM3WEc0Z0lIMWNibjFjYmtCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodFlYZ3RkMmxrZEdnNklERXdNalJ3ZUNrZ2UxeHVJQ0F1WTI5dWRHRnBibVZ5SUh0Y2JpQWdJQ0J0WVhndGQybGtkR2c2SURFd01DVTdYRzRnSUNBZ2NHRmtaR2x1WnpvZ01DQXlMall3TkhaM08xeHVJQ0I5WEc1OVhHNUFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUEyTlRCd2VDa2dlMXh1SUNBdVkyOXVkR0ZwYm1WeUlIdGNiaUFnSUNCd1lXUmthVzVuT2lBd0lETXVOakl6ZG5jN1hHNGdJSDFjYm4xY2JseHVMblJwZEd4bElIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklGd2lRbVZpWVhNZ1RtVjFaVndpTENCellXNXpMWE5sY21sbU8xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ01UQXdKVHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRFF3TUR0Y2JpQWdabTl1ZEMxemFYcGxPaUEzTm5CNE8xeHVmVnh1TG5ScGRHeGxJSE53WVc0Z2UxeHVJQ0JqYjJ4dmNqb2dJelk0UTBGQ056dGNibjFjYmtCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodFlYZ3RkMmxrZEdnNklERTVNVGx3ZUNrZ2UxeHVJQ0F1ZEdsMGJHVWdlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNeTQ1TlRoMmR6dGNiaUFnZlZ4dWZWeHVRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFoZUMxM2FXUjBhRG9nTVRBeU5IQjRLU0I3WEc0Z0lDNTBhWFJzWlNCN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBM0xqVTFNblozTzF4dUlDQjlYRzU5WEc1QWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQTJOVEJ3ZUNrZ2UxeHVJQ0F1ZEdsMGJHVWdlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dPUzQyTmpKMmR6dGNiaUFnZlZ4dWZWeHVYRzR1YzJodmR5MTBZV0pzWlhRZ2UxeHVJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHVmVnh1WEc1QWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQXhNREkwY0hncElIdGNiaUFnTG5Ob2IzY3RkR0ZpYkdWMElIdGNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ2ZWeHVJQ0F1YUdsa1pTMTBZV0pzWlhRZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUgxY2JuMWNiaTVvWldGa1pYSWdlMXh1SUNCaVlXTnJaM0p2ZFc1a09pQWpNRVEzTVRZeE8xeHVmVnh1TG1obFlXUmxjbDlmYVc1dVpYSWdlMXh1SUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOd1lXTmxMV0psZEhkbFpXNDdYRzRnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJSEJoWkdScGJtYzZJREUxY0hnZ01DQXlNM0I0SURBN1hHNTlYRzR1YUdWaFpHVnlYMTlzYjJkdklHbHRaeUI3WEc0Z0lIZHBaSFJvT2lBeE1ETndlRHRjYmlBZ2FHVnBaMmgwT2lBME1uQjRPMXh1ZlZ4dUxtaGxZV1JsY2w5ZmJtRjJJSHRjYmlBZ2JXRnlaMmx1TFhSdmNEb2dNakJ3ZUR0Y2JuMWNiaTVvWldGa1pYSmZYMnhwYzNRZ2UxeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dWZWeHVMbWhsWVdSbGNsOWZhWFJsYlNCN1hHNGdJRzFoY21kcGJpMXlhV2RvZERvZ016QndlRHRjYmlBZ2JHbHpkQzF6ZEhsc1pUb2dibTl1WlR0Y2JuMWNiaTVvWldGa1pYSmZYMmwwWlcwNmJHRnpkQzFqYUdsc1pDQjdYRzRnSUcxaGNtZHBiaTF5YVdkb2REb2dNRHRjYm4xY2JpNW9aV0ZrWlhKZlgyeHBibXNnZTF4dUlDQm1iMjUwTFhOcGVtVTZJREU0Y0hnN1hHNGdJR052Ykc5eU9pQWpabVptTzF4dUlDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc1OVhHNWNiaTVpZFhKblpYSWdlMXh1SUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1ZlZ4dVhHNUFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUF4T1RFNWNIZ3BJSHRjYmlBZ0xtaGxZV1JsY2w5ZmFXNXVaWElnZTF4dUlDQWdJSEJoWkdScGJtYzZJREF1TnpneGRuY2dNQ0F4TGpFNU9IWjNJREE3WEc0Z0lIMWNiaUFnTG1obFlXUmxjbDlmYkc5bmJ5QnBiV2NnZTF4dUlDQWdJSGRwWkhSb09pQTFMak0yTlhaM08xeHVJQ0FnSUdobGFXZG9kRG9nTWk0eE9EaDJkenRjYmlBZ2ZWeHVJQ0F1YUdWaFpHVnlYMTl1WVhZZ2UxeHVJQ0FnSUcxaGNtZHBiaTEwYjNBNklERXVNRFF5ZG5jN1hHNGdJSDFjYmlBZ0xtaGxZV1JsY2w5ZmFYUmxiU0I3WEc0Z0lDQWdiV0Z5WjJsdUxYSnBaMmgwT2lBeExqVTJNM1ozTzF4dUlDQjlYRzRnSUM1b1pXRmtaWEpmWDJ4cGJtc2dlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNQzQ1TXpoMmR6dGNiaUFnZlZ4dWZWeHVRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFoZUMxM2FXUjBhRG9nTVRBeU5IQjRLU0I3WEc0Z0lDNW9aV0ZrWlhKZlgybHVibVZ5SUh0Y2JpQWdJQ0J3WVdSa2FXNW5PaUF4TGpZNU0zWjNJREE3WEc0Z0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQnpkR0Z5ZER0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc0Z0lIMWNiaUFnTG1obFlXUmxjaUF1WW5WeVoyVnlJSHRjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdJQ0IzYVdSMGFEb2dOaTQxTVhaM08xeHVJQ0FnSUdobGFXZG9kRG9nTmk0MU1YWjNPMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnSUNCdFlYSm5hVzR0YkdWbWREb2dZWFYwYnp0Y2JpQWdJQ0JpWVdOclozSnZkVzVrT2lBalJrWkdSa1pHTzF4dUlDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklERXdNQ1U3WEc0Z0lIMWNiaUFnTG1obFlXUmxjaUF1WW5WeVoyVnlJSE53WVc0Z2UxeHVJQ0FnSUhkcFpIUm9PaUF5TGpZd05IWjNPMXh1SUNBZ0lHaGxhV2RvZERvZ01DNHlOblozTzF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBd0xqVXlNWFozTzF4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUNNd1JEY3hOakU3WEc0Z0lDQWdiR1ZtZERvZ05UQWxPMXh1SUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d0TlRBbEtUdGNiaUFnZlZ4dUlDQXVhR1ZoWkdWeUlDNWlkWEpuWlhJZ2MzQmhianB1ZEdndFkyaHBiR1FvTVNrZ2UxeHVJQ0FnSUhSdmNEb2dNaTQwTnpSMmR6dGNiaUFnZlZ4dUlDQXVhR1ZoWkdWeUlDNWlkWEpuWlhJZ2MzQmhianB1ZEdndFkyaHBiR1FvTWlrZ2UxeHVJQ0FnSUhSdmNEb2dNeTR4TWpWMmR6dGNiaUFnZlZ4dUlDQXVhR1ZoWkdWeUlDNWlkWEpuWlhJZ2MzQmhianB1ZEdndFkyaHBiR1FvTXlrZ2UxeHVJQ0FnSUdKdmRIUnZiVG9nTWk0ME56UjJkenRjYmlBZ2ZWeHVJQ0F1YUdWaFpHVnlYMTlzYjJkdklIdGNiaUFnSUNCdFlYSm5hVzR0YkdWbWREb2dZWFYwYnp0Y2JpQWdmVnh1SUNBdWFHVmhaR1Z5WDE5c2IyZHZJR2x0WnlCN1hHNGdJQ0FnZDJsa2RHZzZJREV6TGprek1uWjNPMXh1SUNBZ0lHaGxhV2RvZERvZ05TNDNNamwyZHp0Y2JpQWdmVnh1SUNBdWFHVmhaR1Z5WDE5dVlYWWdlMXh1SUNBZ0lIQmhaR1JwYm1jNklERXpMakF5TVhaM08xeHVJQ0I5WEc0Z0lDNW9aV0ZrWlhKZlgyMWxiblVnZTF4dUlDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJR2hsYVdkb2REb2diV0Y0TzF4dUlDQWdJSFJ2Y0RvZ01EdGNiaUFnSUNCc1pXWjBPaUF3TzF4dUlDQWdJSG90YVc1a1pYZzZJREV3TzF4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUNOR1JrWkdSa1k3WEc0Z0lIMWNiaUFnTG1obFlXUmxjbDlmYldWdWRTNWhZM1JwZG1VZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNCOVhHNGdJQzVvWldGa1pYSWdMbTF2WWkxamJHOXpaU0I3WEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lIUnZjRG9nTlM0eU1EaDJkenRjYmlBZ0lDQnlhV2RvZERvZ01pNDJNRFIyZHp0Y2JpQWdJQ0JqZFhKemIzSTZJSEJ2YVc1MFpYSTdYRzRnSUNBZ2QybGtkR2c2SURJdU16UTBkbmM3WEc0Z0lDQWdhR1ZwWjJoME9pQXlMak0wTkhaM08xeHVJQ0I5WEc0Z0lDNW9aV0ZrWlhJZ0xtMXZZaTFqYkc5elpTQnBiV2NnZTF4dUlDQWdJSGRwWkhSb09pQXhNREFsTzF4dUlDQWdJR2hsYVdkb2REb2dNVEF3SlR0Y2JpQWdmVnh1SUNBdWFHVmhaR1Z5WDE5c2FYTjBJSHRjYmlBZ0lDQm1iR1Y0TFdScGNtVmpkR2x2YmpvZ1kyOXNkVzF1TzF4dUlDQjlYRzRnSUM1b1pXRmtaWEpmWDJsMFpXMGdlMXh1SUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nTUR0Y2JpQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ05pNDFNWFozTzF4dUlDQjlYRzRnSUM1b1pXRmtaWEpmWDJsMFpXMDZiR0Z6ZEMxamFHbHNaQ0I3WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01EdGNiaUFnZlZ4dUlDQXVhR1ZoWkdWeVgxOXNhVzVySUh0Y2JpQWdJQ0JqYjJ4dmNqb2dJelF4TkRFME1UdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklESXVOakEwZG5jN1hHNGdJSDFjYm4xY2JrQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRZWGd0ZDJsa2RHZzZJRFkxTUhCNEtTQjdYRzRnSUM1b1pXRmtaWEpmWDJsdWJtVnlJSHRjYmlBZ0lDQndZV1JrYVc1bk9pQTFMakEzTW5aM0lEQTdYRzRnSUgxY2JpQWdMbWhsWVdSbGNpQXVZblZ5WjJWeUlIdGNiaUFnSUNCM2FXUjBhRG9nTnk0eU5EWjJkenRjYmlBZ0lDQm9aV2xuYUhRNklETXVNVFIyZHp0Y2JpQWdJQ0JpWVdOclozSnZkVzVrT2lCMGNtRnVjM0JoY21WdWREdGNiaUFnZlZ4dUlDQXVhR1ZoWkdWeUlDNWlkWEpuWlhJZ2MzQmhiaUI3WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lDQWdhR1ZwWjJoME9pQXdMamN5TlhaM08xeHVJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJREE3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nSTJabVpqdGNiaUFnSUNCc1pXWjBPaUF3SlR0Y2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb01DazdYRzRnSUgxY2JpQWdMbWhsWVdSbGNpQXVZblZ5WjJWeUlITndZVzQ2Ym5Sb0xXTm9hV3hrS0RFcElIdGNiaUFnSUNCMGIzQTZJREE3WEc0Z0lIMWNiaUFnTG1obFlXUmxjaUF1WW5WeVoyVnlJSE53WVc0NmJuUm9MV05vYVd4a0tESXBJSHRjYmlBZ0lDQjBiM0E2SURFdU1qQTRkbmM3WEc0Z0lIMWNiaUFnTG1obFlXUmxjaUF1WW5WeVoyVnlJSE53WVc0NmJuUm9MV05vYVd4a0tETXBJSHRjYmlBZ0lDQmliM1IwYjIwNklEQTdYRzRnSUgxY2JpQWdMbWhsWVdSbGNsOWZiRzluYnlCN1hHNGdJQ0FnYldGeVoybHVMV3hsWm5RNklHRjFkRzg3WEc0Z0lIMWNiaUFnTG1obFlXUmxjbDlmYkc5bmJ5QnBiV2NnZTF4dUlDQWdJSGRwWkhSb09pQXlNaTR5TWpKMmR6dGNiaUFnSUNCb1pXbG5hSFE2SURrdU1UYzVkbmM3WEc0Z0lIMWNiaUFnTG1obFlXUmxjbDlmYm1GMklIdGNiaUFnSUNCd1lXUmthVzVuT2lBeU5DNHhOVFYyZHlBd0lERTVMak15TkhaM0lEQTdYRzRnSUgxY2JpQWdMbWhsWVdSbGNsOWZiV1Z1ZFNCN1hHNGdJQ0FnZEc5d09pQXlMalF4TlhaM08xeHVJQ0I5WEc0Z0lDNW9aV0ZrWlhJZ0xtMXZZaTFqYkc5elpTQjdYRzRnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUhSdmNEb2dOUzR6TVRSMmR6dGNiaUFnSUNCeWFXZG9kRG9nTlM0ek1UUjJkenRjYmlBZ0lDQjNhV1IwYURvZ05DNDRNekYyZHp0Y2JpQWdJQ0JvWldsbmFIUTZJRFF1T0RNeGRuYzdYRzRnSUgxY2JpQWdMbWhsWVdSbGNsOWZhWFJsYlNCN1hHNGdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNeTQyTWpOMmR6dGNiaUFnZlZ4dUlDQXVhR1ZoWkdWeVgxOXNhVzVySUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURRdU16UTRkbmM3WEc0Z0lIMWNibjFjYmk1bWIzSnRJSHRjYmlBZ2NHRmtaR2x1WnpvZ01USXdjSGdnTUNBeE1EQndlQ0F3TzF4dWZWeHVMbVp2Y20xZlgzUnBkR3hsSUh0Y2JpQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1ZlZ4dUxtWnZjbTFmWDJ4bFpuUWdlMXh1SUNCM2FXUjBhRG9nTkRVemNIZzdYRzRnSUcxaGNtZHBiaTF5YVdkb2REb2dOVFJ3ZUR0Y2JuMWNiaTVtYjNKdFgxOWlkRzRnZTF4dUlDQndZV1JrYVc1bk9pQXhObkI0SURRd2NIZzdYRzRnSUdKaFkydG5jbTkxYm1RNklHeHBibVZoY2kxbmNtRmthV1Z1ZENneE9EQmtaV2NzSUNOR1JrVXdNaklnTUNVc0lDTkdSa00yTWpJZ01UQXdKU2s3WEc0Z0lHWnZiblF0YzJsNlpUb2dNekp3ZUR0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVFtVmlZWE1nVG1WMVpWd2lPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOREF3TzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nTVRBd0pUdGNiaUFnWTI5c2IzSTZJQ05tWm1ZN1hHNGdJRzFoY21kcGJpMTBiM0E2SURJMWNIZzdYRzRnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjYmlBZ1ltOXlaR1Z5T2lCMWJuTmxkRHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTVRKd2VEdGNibjFjYmk1bWIzSnRYMTlzWVdKbGJDQjdYRzRnSUdadmJuUXRjMmw2WlRvZ01UWndlRHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRFV3TUR0Y2JpQWdjR0ZrWkdsdVp5MXNaV1owT2lBME4zQjRPMXh1SUNCdFlYSm5hVzR0ZEc5d09pQXhOSEI0TzF4dUlDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQmNJazF2Ym5SelpYSnlZWFJjSWp0Y2JuMWNiaTVtYjNKdFgxOXNZV0psYkNCemNHRnVJSHRjYmlBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0JzWldaME9pQXdPMXh1SUNCMGIzQTZJRFV3SlR0Y2JpQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZaS0MwMU1DVXBPMXh1SUNCM2FXUjBhRG9nTWpsd2VEdGNiaUFnYUdWcFoyaDBPaUF5T1hCNE8xeHVJQ0JpWVdOclozSnZkVzVrT2lBak5qaERRVUkzTzF4dUlDQmliM0prWlhJdGNtRmthWFZ6T2lBMGNIZzdYRzRnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNORVFVUkJSRUU3WEc1OVhHNHVabTl5YlY5ZmJHRmlaV3dnYVc1d2RYUWdlMXh1SUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1ZlZ4dUxtWnZjbTFmWDJ4aFltVnNJR2x1Y0hWME9tTm9aV05yWldRZ2ZpQnpjR0Z1T2pwaVpXWnZjbVVnZTF4dUlDQmpiMjUwWlc1ME9pQmNJbHdpTzF4dUlDQjNhV1IwYURvZ01UbHdlRHRjYmlBZ2FHVnBaMmgwT2lBeE9YQjRPMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJSFJ2Y0RvZ05UQWxPMXh1SUNCc1pXWjBPaUExTUNVN1hHNGdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsS0MwMU1DVXNJQzAxTUNVcE8xeHVJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b0xpNHZhVzFuTDJOb1pXTnJMV2xqYjI0dWMzWm5LVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXphWHBsT2lBeE1EQWxPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2JtOHRjbVZ3WldGME8xeHVJQ0JpWVdOclozSnZkVzVrTFhCdmMybDBhVzl1T2lCalpXNTBaWEk3WEc1OVhHNHVabTl5YlY5ZmFYUmxiU0I3WEc0Z0lHMWhjbWRwYmkxaWIzUjBiMjA2SURJMWNIZzdYRzU5WEc0dVptOXliVjlmYVhSbGJUcHNZWE4wTFdOb2FXeGtJSHRjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTUR0Y2JuMWNiaTVtYjNKdFgxOXBkR1Z0SUhBZ2UxeHVJQ0JtYjI1MExYTnBlbVU2SURFNGNIZzdYRzRnSUcxaGNtZHBiaTFpYjNSMGIyMDZJRFp3ZUR0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVRXOXVkSE5sY25KaGRGd2lPMXh1ZlZ4dUxtWnZjbTFmWDJsMFpXMGdjQ0J6Y0dGdUlIdGNiaUFnWTI5c2IzSTZJQ05GT1RFek1UTTdYRzU5WEc0dVptOXliVjlmYVhSbGJTQnBibkIxZENCN1hHNGdJR0p2Y21SbGNqb2dNWEI0SUhOdmJHbGtJQ05GUmtWR1JVWTdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJREV5Y0hnN1hHNGdJSGRwWkhSb09pQXhNREFsTzF4dUlDQndZV1JrYVc1bk9pQXhPWEI0SURNd2NIZzdYRzRnSUdadmJuUXRjMmw2WlRvZ01UaHdlRHRjYm4xY2JpNW1iM0p0WDE5cGRHVnRJR2x1Y0hWME9qcHdiR0ZqWldodmJHUmxjaUI3WEc0Z0lHTnZiRzl5T2lBalFqTkNNMEl6TzF4dWZWeHVMbVp2Y20xZlgzSnBaMmgwSUh0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYm4xY2JpNW1iM0p0WDE5MFpYaDBJSHRjYmlBZ2QybGtkR2c2SURRME1IQjRPMXh1SUNCdFlYSm5hVzR0Y21sbmFIUTZJRFUwY0hnN1hHNTlYRzR1Wm05eWJWOWZhVzFuSUh0Y2JpQWdkMmxrZEdnNklETTVPWEI0TzF4dUlDQm9aV2xuYUhRNklEY3hNWEI0TzF4dWZWeHVMbVp2Y20xZlgybHRaeUJwYldjZ2UxeHVJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdhR1ZwWjJoME9pQXhNREFsTzF4dWZWeHVYRzR1Wm05eWJTMTNjbUZ3Y0dWeUlIdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnYldGeVoybHVMWFJ2Y0RvZ05EQndlRHRjYm4xY2JseHVMbWQxWVhKaGJuUmxaU0I3WEc0Z0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzRnSUcxaGNtZHBiaTEwYjNBNklESXdjSGc3WEc1OVhHNHVaM1ZoY21GdWRHVmxJR2x0WnlCN1hHNGdJSGRwWkhSb09pQXpOSEI0TzF4dUlDQm9aV2xuYUhRNklEUTBjSGc3WEc0Z0lHMWhjbWRwYmkxeWFXZG9kRG9nTVRad2VEdGNibjFjYmk1bmRXRnlZVzUwWldVZ2NDQjdYRzRnSUdadmJuUXRjMmw2WlRvZ01UaHdlRHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRFV3TUR0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVRXOXVkSE5sY25KaGRGd2lPMXh1ZlZ4dVhHNHVabTl5YlMxMGFXMWxjaUJvTXlCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTWpKd2VEdGNiaUFnWm05dWRDMTNaV2xuYUhRNklEY3dNRHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREkzY0hnN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCY0lrMXZiblJ6WlhKeVlYUmNJanRjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTXpCd2VEdGNiaUFnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4dWZWeHVYRzR1Wm05eWJTMXNhWE4wSUh0Y2JpQWdiV0Z5WjJsdUxYUnZjRG9nTkRCd2VEdGNibjFjYmk1bWIzSnRMV3hwYzNRZ2FETWdlMXh1SUNCbWIyNTBMWE5wZW1VNklEUXljSGc3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUEwTURBN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCY0lrSmxZbUZ6SUU1bGRXVmNJanRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREV3TUNVN1hHNGdJRzFoY21kcGJpMWliM1IwYjIwNklESXdjSGc3WEc1OVhHNHVabTl5YlMxc2FYTjBJR3hwSUh0Y2JpQWdjR0ZrWkdsdVp5MXNaV1owT2lBek5IQjRPMXh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVRod2VEdGNiaUFnYkdsemRDMXpkSGxzWlRvZ2JtOXVaVHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJRndpVFc5dWRITmxjbkpoZEZ3aU8xeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXlNSEI0TzF4dWZWeHVMbVp2Y20wdGJHbHpkQ0JzYVRwc1lYTjBMV05vYVd4a0lIdGNiaUFnYldGeVoybHVMV0p2ZEhSdmJUb2dNRHRjYm4xY2JpNW1iM0p0TFd4cGMzUWdiR2s2T21KbFptOXlaU0I3WEc0Z0lHTnZiblJsYm5RNklGd2lYQ0k3WEc0Z0lIZHBaSFJvT2lBeU5IQjRPMXh1SUNCb1pXbG5hSFE2SURJMGNIZzdYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2JpQWdiR1ZtZERvZ01EdGNiaUFnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tDNHVMMmx0Wnk5b1pYSnZMV3hwYzNRdGFXTnZiaTV6ZG1jcE8xeHVJQ0JpWVdOclozSnZkVzVrTFhOcGVtVTZJREV3TUNVN1hHNGdJR0poWTJ0bmNtOTFibVF0Y21Wd1pXRjBPaUJ1YnkxeVpYQmxZWFE3WEc0Z0lHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJR05sYm5SbGNqdGNibjFjYmx4dUxtTnZkVzUwWkc5M2JpQjdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWTJWdWRHVnlPMXh1SUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVmVnh1WEc0dWNtbHVaeUI3WEc0Z0lIZHBaSFJvT2lBMU5YQjRPMXh1SUNCb1pXbG5hSFE2SURVMWNIZzdYRzRnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdaR2x6Y0d4aGVUb2daM0pwWkR0Y2JpQWdiV0Z5WjJsdUxYSnBaMmgwT2lBeE1IQjRPMXh1SUNCd2JHRmpaUzFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVmVnh1WEc0dWNtbHVaeUJ6ZG1jZ2UxeHVJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdhR1ZwWjJoME9pQXhNREFsTzF4dUlDQjBjbUZ1YzJadmNtMDZJSEp2ZEdGMFpTZ3RPVEJrWldjcE8xeHVJQ0J2ZG1WeVpteHZkem9nZG1semFXSnNaVHRjYm4xY2JseHVMbkpwYm1jZ0xuUnlZV05ySUh0Y2JpQWdjM1J5YjJ0bE9pQWpRME5EUTBORE8xeHVJQ0JtYVd4c09pQnViMjVsTzF4dUlDQnpkSEp2YTJVdGQybGtkR2c2SURGd2VEdGNibjFjYmx4dUxuSnBibWNnTG5CeWIyZHlaWE56SUh0Y2JpQWdjM1J5YjJ0bE9pQWpOamhEUVVJM08xeHVJQ0JtYVd4c09pQnViMjVsTzF4dUlDQnpkSEp2YTJVdGQybGtkR2c2SURKd2VEdGNiaUFnYzNSeWIydGxMV3hwYm1WallYQTZJSEp2ZFc1a08xeHVJQ0IwY21GdWMybDBhVzl1T2lCemRISnZhMlV0WkdGemFHOW1abk5sZENBd0xqSTFjeUJzYVc1bFlYSTdYRzU5WEc1Y2JpNTJZV3gxWlNCN1hHNGdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNiaUFnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJqWlc1MFpYSTdYRzRnSUdadmJuUXRkMlZwWjJoME9pQTNNREE3WEc0Z0lHWnZiblF0YzJsNlpUb2dNalJ3ZUR0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVRXOXVkSE5sY25KaGRGd2lPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dNekF3TzF4dWZWeHVYRzR1YkdGaVpXd2dlMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJSFJ2Y0RvZ0xUSXdjSGc3WEc0Z0lHeGxablE2SURVd0pUdGNiaUFnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtDMDFNQ1VwTzF4dUlDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzRnSUdadmJuUXRjMmw2WlRvZ01UQndlRHRjYmlBZ2IzQmhZMmwwZVRvZ01DNDRPMXh1ZlZ4dVhHNUFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUF4T1RFNWNIZ3BJSHRjYmlBZ0xtWnZjbTBnZTF4dUlDQWdJSEJoWkdScGJtYzZJRFl1TWpWMmR5QXdJRFV1TWpBNGRuY2dNRHRjYmlBZ2ZWeHVJQ0F1Wm05eWJWOWZiR1ZtZENCN1hHNGdJQ0FnZDJsa2RHZzZJREl6TGpVNU5IWjNPMXh1SUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nTWk0NE1UTjJkenRjYmlBZ2ZWeHVJQ0F1Wm05eWJWOWZZblJ1SUh0Y2JpQWdJQ0J3WVdSa2FXNW5PaUF3TGpnek0zWjNJREl1TURnemRuYzdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXhMalkyTjNaM08xeHVJQ0FnSUcxaGNtZHBiaTEwYjNBNklERXVNekF5ZG5jN1hHNGdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dNQzQyTWpWMmR6dGNiaUFnZlZ4dUlDQXVabTl5YlY5ZmJHRmlaV3dnZTF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTUM0NE16TjJkenRjYmlBZ0lDQndZV1JrYVc1bkxXeGxablE2SURJdU5EUTRkbmM3WEc0Z0lDQWdiV0Z5WjJsdUxYUnZjRG9nTUM0M01qbDJkenRjYmlBZ2ZWeHVJQ0F1Wm05eWJWOWZiR0ZpWld3Z2MzQmhiaUI3WEc0Z0lDQWdkMmxrZEdnNklERXVOVEYyZHp0Y2JpQWdJQ0JvWldsbmFIUTZJREV1TlRGMmR6dGNiaUFnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF3TGpJd09IWjNPMXh1SUNBZ0lHSnZjbVJsY2pvZ01DNHdOVEoyZHlCemIyeHBaQ0FqUkVGRVFVUkJPMXh1SUNCOVhHNGdJQzVtYjNKdFgxOXNZV0psYkNCcGJuQjFkQ0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2JpQWdmVnh1SUNBdVptOXliVjlmYkdGaVpXd2dhVzV3ZFhRNlkyaGxZMnRsWkNCK0lITndZVzQ2T21KbFptOXlaU0I3WEc0Z0lDQWdkMmxrZEdnNklEQXVPVGwyZHp0Y2JpQWdJQ0JvWldsbmFIUTZJREF1T1RsMmR6dGNiaUFnZlZ4dUlDQXVabTl5YlY5ZmFYUmxiU0I3WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01TNHpNREoyZHp0Y2JpQWdmVnh1SUNBdVptOXliVjlmYVhSbGJTQndJSHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREF1T1RNNGRuYzdYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTUM0ek1UTjJkenRjYmlBZ2ZWeHVJQ0F1Wm05eWJWOWZhWFJsYlNCcGJuQjFkQ0I3WEc0Z0lDQWdZbTl5WkdWeU9pQXdMakExTW5aM0lITnZiR2xrSUNORlJrVkdSVVk3WEc0Z0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ01DNDJNalYyZHp0Y2JpQWdJQ0J3WVdSa2FXNW5PaUF3TGprNWRuY2dNUzQxTmpOMmR6dGNiaUFnSUNCbWIyNTBMWE5wZW1VNklEQXVPVE00ZG5jN1hHNGdJSDFjYmlBZ0xtWnZjbTFmWDNSbGVIUWdlMXh1SUNBZ0lIZHBaSFJvT2lBeU1pNDVNVGQyZHp0Y2JpQWdJQ0J0WVhKbmFXNHRjbWxuYUhRNklESXVPREV6ZG5jN1hHNGdJSDFjYmlBZ0xtWnZjbTFmWDJsdFp5QjdYRzRnSUNBZ2QybGtkR2c2SURJd0xqYzRNWFozTzF4dUlDQWdJR2hsYVdkb2REb2dNemN1TURNeGRuYzdYRzRnSUgxY2JpQWdMbVp2Y20wdGQzSmhjSEJsY2lCN1hHNGdJQ0FnYldGeVoybHVMWFJ2Y0RvZ01pNHdPRE4yZHp0Y2JpQWdmVnh1SUNBdVozVmhjbUZ1ZEdWbElIdGNiaUFnSUNCdFlYSm5hVzR0ZEc5d09pQXhMakEwTW5aM08xeHVJQ0I5WEc0Z0lDNW5kV0Z5WVc1MFpXVWdhVzFuSUh0Y2JpQWdJQ0IzYVdSMGFEb2dNUzQzTnpGMmR6dGNiaUFnSUNCb1pXbG5hSFE2SURJdU1qa3lkbmM3WEc0Z0lDQWdiV0Z5WjJsdUxYSnBaMmgwT2lBd0xqZ3pNM1ozTzF4dUlDQjlYRzRnSUM1bmRXRnlZVzUwWldVZ2NDQjdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXdMamt6T0haM08xeHVJQ0I5WEc0Z0lDNW1iM0p0TFhScGJXVnlJR2d6SUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFdU1UUTJkbmM3WEc0Z0lDQWdiR2x1WlMxb1pXbG5hSFE2SURFdU5EQTJkbmM3WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01TNDFOak4yZHp0Y2JpQWdmVnh1SUNBdVptOXliUzFzYVhOMElIdGNiaUFnSUNCdFlYSm5hVzR0ZEc5d09pQXlMakE0TTNaM08xeHVJQ0I5WEc0Z0lDNW1iM0p0TFd4cGMzUWdhRE1nZTF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTWk0eE9EaDJkenRjYmlBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBeExqQTBNblozTzF4dUlDQjlYRzRnSUM1bWIzSnRMV3hwYzNRZ2JHa2dlMXh1SUNBZ0lIQmhaR1JwYm1jdGJHVm1kRG9nTVM0M056RjJkenRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREF1T1RNNGRuYzdYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTVM0d05ESjJkenRjYmlBZ2ZWeHVJQ0F1Wm05eWJTMXNhWE4wSUd4cE9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUhkcFpIUm9PaUF4TGpJMWRuYzdYRzRnSUNBZ2FHVnBaMmgwT2lBeExqSTFkbmM3WEc0Z0lIMWNiaUFnTG5KcGJtY2dlMXh1SUNBZ0lIZHBaSFJvT2lBeUxqZzJOWFozTzF4dUlDQWdJR2hsYVdkb2REb2dNaTQ0TmpWMmR6dGNiaUFnSUNCdFlYSm5hVzR0Y21sbmFIUTZJREF1TlRJeGRuYzdYRzRnSUgxY2JpQWdMbkpwYm1jZ0xuUnlZV05ySUh0Y2JpQWdJQ0J6ZEhKdmEyVXRkMmxrZEdnNklEQXVNRFV5ZG5jN1hHNGdJSDFjYmlBZ0xuSnBibWNnTG5CeWIyZHlaWE56SUh0Y2JpQWdJQ0J6ZEhKdmEyVXRkMmxrZEdnNklEQXVNVEEwZG5jN1hHNGdJSDFjYmlBZ0xuWmhiSFZsSUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFdU1qVjJkenRjYmlBZ2ZWeHVJQ0F1YkdGaVpXd2dlMXh1SUNBZ0lIUnZjRG9nTFRFdU1EUXlkbmM3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF3TGpVeU1YWjNPMXh1SUNCOVhHNTlYRzVBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2lBeE1ESTBjSGdwSUh0Y2JpQWdMbVp2Y20wZ2UxeHVJQ0FnSUhCaFpHUnBibWM2SURFd01IQjRJREFnT0RCd2VDQXdPMXh1SUNCOVhHNGdJQzVtYjNKdFgxOXlhV2RvZENCN1hHNGdJQ0FnYldGeVoybHVMWFJ2Y0RvZ01qVndlRHRjYmlBZ2ZWeHVJQ0F1Wm05eWJWOWZiR1ZtZENCN1hHNGdJQ0FnZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnYldGeVoybHVMWEpwWjJoME9pQXdPMXh1SUNCOVhHNGdJQzVtYjNKdFgxOWlkRzRnZTF4dUlDQWdJSEJoWkdScGJtYzZJREl3Y0hnN1hHNGdJQ0FnZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBME1IQjRPMXh1SUNBZ0lHMWhjbWRwYmkxMGIzQTZJREkxY0hnN1hHNGdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dNVEp3ZUR0Y2JpQWdmVnh1SUNBdVptOXliVjlmYkdGaVpXd2dlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNVGh3ZUR0Y2JpQWdJQ0J3WVdSa2FXNW5MV3hsWm5RNklEUTNjSGc3WEc0Z0lDQWdiV0Z5WjJsdUxYUnZjRG9nTWpCd2VEdGNiaUFnZlZ4dUlDQXVabTl5YlY5ZmJHRmlaV3dnYzNCaGJpQjdYRzRnSUNBZ2QybGtkR2c2SURJNWNIZzdYRzRnSUNBZ2FHVnBaMmgwT2lBeU9YQjRPMXh1SUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURSd2VEdGNiaUFnSUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBalJFRkVRVVJCTzF4dUlDQjlYRzRnSUM1bWIzSnRYMTlzWVdKbGJDQnBibkIxZENCN1hHNGdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNiaUFnZlZ4dUlDQXVabTl5YlY5ZmJHRmlaV3dnYVc1d2RYUTZZMmhsWTJ0bFpDQitJSE53WVc0Nk9tSmxabTl5WlNCN1hHNGdJQ0FnZDJsa2RHZzZJREU1Y0hnN1hHNGdJQ0FnYUdWcFoyaDBPaUF4T1hCNE8xeHVJQ0I5WEc0Z0lDNW1iM0p0WDE5cGRHVnRJSHRjYmlBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBeU5YQjRPMXh1SUNCOVhHNGdJQzVtYjNKdFgxOXBkR1Z0SUhBZ2UxeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01UaHdlRHRjYmlBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBMmNIZzdYRzRnSUgxY2JpQWdMbVp2Y20xZlgybDBaVzBnYVc1d2RYUWdlMXh1SUNBZ0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lDTkZSa1ZHUlVZN1hHNGdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dNVEp3ZUR0Y2JpQWdJQ0J3WVdSa2FXNW5PaUF4T1hCNElETXdjSGc3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF4T0hCNE8xeHVJQ0I5WEc0Z0lDNW1iM0p0WDE5MFpYaDBJSHRjYmlBZ0lDQjNhV1IwYURvZ05EUXdjSGc3WEc0Z0lDQWdiV0Z5WjJsdUxYSnBaMmgwT2lBek1YQjRPMXh1SUNCOVhHNGdJQzVtYjNKdFgxOXBiV2NnZTF4dUlDQWdJSGRwWkhSb09pQXlOVGR3ZUR0Y2JpQWdJQ0JvWldsbmFIUTZJRFV6Tm5CNE8xeHVJQ0I5WEc0Z0lDNW1iM0p0TFhkeVlYQndaWElnZTF4dUlDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0N1hHNGdJQ0FnYldGeVoybHVMWFJ2Y0RvZ05EQndlRHRjYmlBZ2ZWeHVJQ0F1WjNWaGNtRnVkR1ZsSUh0Y2JpQWdJQ0J0WVhKbmFXNHRkRzl3T2lBeU1IQjRPMXh1SUNCOVhHNGdJQzVuZFdGeVlXNTBaV1VnYVcxbklIdGNiaUFnSUNCM2FXUjBhRG9nTXpSd2VEdGNiaUFnSUNCb1pXbG5hSFE2SURRMGNIZzdYRzRnSUNBZ2JXRnlaMmx1TFhKcFoyaDBPaUF4Tm5CNE8xeHVJQ0I5WEc0Z0lDNW5kV0Z5WVc1MFpXVWdjQ0I3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF4T0hCNE8xeHVJQ0I5WEc0Z0lDNW1iM0p0TFhScGJXVnlJSHRjYmlBZ0lDQnRZWEpuYVc0dGRHOXdPaUF6TUhCNE8xeHVJQ0I5WEc0Z0lDNW1iM0p0TFhScGJXVnlJR2d6SUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURJeWNIZzdYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREkzY0hnN1hHNGdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNekJ3ZUR0Y2JpQWdmVnh1SUNBdVptOXliUzFzYVhOMElIdGNiaUFnSUNCdFlYSm5hVzR0ZEc5d09pQXhObkI0TzF4dUlDQjlYRzRnSUM1bWIzSnRMV3hwYzNRZ2FETWdlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dOREp3ZUR0Y2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhObkI0TzF4dUlDQjlYRzRnSUM1bWIzSnRMV3hwYzNRZ2JHa2dlMXh1SUNBZ0lIQmhaR1JwYm1jdGJHVm1kRG9nTXpSd2VEdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklERTRjSGc3WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01qQndlRHRjYmlBZ2ZWeHVJQ0F1Wm05eWJTMXNhWE4wSUd4cE9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUhkcFpIUm9PaUF5TkhCNE8xeHVJQ0FnSUdobGFXZG9kRG9nTWpSd2VEdGNiaUFnZlZ4dUlDQXVjbWx1WnlCN1hHNGdJQ0FnZDJsa2RHZzZJRFUxY0hnN1hHNGdJQ0FnYUdWcFoyaDBPaUExTlhCNE8xeHVJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dNVEJ3ZUR0Y2JpQWdmVnh1SUNBdWNtbHVaeUF1ZEhKaFkyc2dlMXh1SUNBZ0lITjBjbTlyWlMxM2FXUjBhRG9nTVhCNE8xeHVJQ0I5WEc0Z0lDNXlhVzVuSUM1d2NtOW5jbVZ6Y3lCN1hHNGdJQ0FnYzNSeWIydGxMWGRwWkhSb09pQXljSGc3WEc0Z0lIMWNiaUFnTG5aaGJIVmxJSHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREkwY0hnN1hHNGdJSDFjYmlBZ0xteGhZbVZzSUh0Y2JpQWdJQ0IwYjNBNklDMHlNSEI0TzF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTVRCd2VEdGNiaUFnZlZ4dWZWeHVMbk5vYjNjdGJXOWlhV3hsSUh0Y2JpQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2JuMWNibHh1UUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxaGVDMTNhV1IwYURvZ05qVXdjSGdwSUh0Y2JpQWdMbVp2Y20wZ2UxeHVJQ0FnSUhCaFpHUnBibWM2SURVd2NIZ2dNQ0EyTUhCNElEQTdYRzRnSUgxY2JpQWdMbVp2Y20wdGRHOXdJSHRjYmlBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0N1hHNGdJSDFjYmlBZ0xtWnZjbTFmWDNScGRHeGxJSHRjYmlBZ0lDQnZjbVJsY2pvZ01qdGNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQnNaV1owTzF4dUlDQWdJRzFoY21kcGJpMTBiM0E2SURVd2NIZzdYRzRnSUgxY2JpQWdMbVp2Y20xZlgzUnBkR3hsSUdKeUlIdGNiaUFnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNCOVhHNGdJQzVtYjNKdFgxOTBhVzFsY2lCN1hHNGdJQ0FnYjNKa1pYSTZJREU3WEc0Z0lIMWNiaUFnTG1admNtMWZYM0pwWjJoMElIdGNiaUFnSUNCdFlYSm5hVzR0ZEc5d09pQXlOWEI0TzF4dUlDQjlYRzRnSUM1bWIzSnRYMTlzWldaMElIdGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNCdFlYSm5hVzR0Y21sbmFIUTZJREE3WEc0Z0lIMWNiaUFnTG1admNtMWZYMkowYmlCN1hHNGdJQ0FnY0dGa1pHbHVaem9nTWpCd2VDQXlOWEI0TzF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTXpCd2VEdGNiaUFnSUNCdFlYSm5hVzR0ZEc5d09pQXlNSEI0TzF4dUlDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklERXljSGc3WEc0Z0lIMWNiaUFnTG1admNtMWZYMnhoWW1Wc0lIdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklERTRjSGc3WEc0Z0lDQWdjR0ZrWkdsdVp5MXNaV1owT2lBME4zQjRPMXh1SUNBZ0lHMWhjbWRwYmkxMGIzQTZJREV3Y0hnN1hHNGdJSDFjYmlBZ0xtWnZjbTFmWDJ4aFltVnNJSE53WVc0Z2UxeHVJQ0FnSUhkcFpIUm9PaUF5T1hCNE8xeHVJQ0FnSUdobGFXZG9kRG9nTWpsd2VEdGNiaUFnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUEwY0hnN1hHNGdJQ0FnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSTBSQlJFRkVRVHRjYmlBZ2ZWeHVJQ0F1Wm05eWJWOWZiR0ZpWld3Z2FXNXdkWFFnZTF4dUlDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hHNGdJSDFjYmlBZ0xtWnZjbTFmWDJ4aFltVnNJR2x1Y0hWME9tTm9aV05yWldRZ2ZpQnpjR0Z1T2pwaVpXWnZjbVVnZTF4dUlDQWdJSGRwWkhSb09pQXhPWEI0TzF4dUlDQWdJR2hsYVdkb2REb2dNVGx3ZUR0Y2JpQWdmVnh1SUNBdVptOXliVjlmYVhSbGJTQjdYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTVRCd2VEdGNiaUFnZlZ4dUlDQXVabTl5YlY5ZmFYUmxiU0J3SUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFNGNIZzdYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTm5CNE8xeHVJQ0I5WEc0Z0lDNW1iM0p0WDE5cGRHVnRJR2x1Y0hWMElIdGNiaUFnSUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBalJVWkZSa1ZHTzF4dUlDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklERXljSGc3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNVGx3ZUNBek1IQjRPMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNVGh3ZUR0Y2JpQWdmVnh1SUNBdVptOXliVjlmZEdWNGRDQjdYRzRnSUNBZ2QybGtkR2c2SURFd01DVTdYRzRnSUNBZ2JXRnlaMmx1TFhKcFoyaDBPaUF3TzF4dUlDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hHNGdJSDFjYmlBZ0xtWnZjbTFmWDJsdFp5QjdYRzRnSUNBZ2QybGtkR2c2SURFd01DVTdYRzRnSUNBZ2FHVnBaMmgwT2lCaGRYUnZPMXh1SUNCOVhHNGdJQzVtYjNKdExYZHlZWEJ3WlhJZ2UxeHVJQ0FnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJqYjJ4MWJXNDdYRzRnSUNBZ2JXRnlaMmx1TFhSdmNEb2dPREJ3ZUR0Y2JpQWdmVnh1SUNBdVozVmhjbUZ1ZEdWbElIdGNiaUFnSUNCdFlYSm5hVzR0ZEc5d09pQXhOSEI0TzF4dUlDQjlYRzRnSUM1bmRXRnlZVzUwWldVZ2FXMW5JSHRjYmlBZ0lDQjNhV1IwYURvZ016UndlRHRjYmlBZ0lDQm9aV2xuYUhRNklEUTBjSGc3WEc0Z0lDQWdiV0Z5WjJsdUxYSnBaMmgwT2lBeE5uQjRPMXh1SUNCOVhHNGdJQzVuZFdGeVlXNTBaV1VnY0NCN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBeE9IQjRPMXh1SUNCOVhHNGdJQzVtYjNKdExYUnBiV1Z5SUh0Y2JpQWdJQ0J0WVhKbmFXNHRkRzl3T2lBd08xeHVJQ0I5WEc0Z0lDNW1iM0p0TFhScGJXVnlJR2d6SUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFM2NIZzdYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREl4Y0hnN1hHNGdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNak53ZUR0Y2JpQWdmVnh1SUNBdVptOXliUzFzYVhOMElIdGNiaUFnSUNCdFlYSm5hVzR0ZEc5d09pQXlOWEI0TzF4dUlDQjlYRzRnSUM1bWIzSnRMV3hwYzNRZ2FETWdlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNekp3ZUR0Y2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhNSEI0TzF4dUlDQjlYRzRnSUM1bWIzSnRMV3hwYzNRZ2JHa2dlMXh1SUNBZ0lIQmhaR1JwYm1jdGJHVm1kRG9nTXpSd2VEdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklERTJjSGc3WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01UQndlRHRjYmlBZ2ZWeHVJQ0F1Wm05eWJTMXNhWE4wSUd4cE9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUhkcFpIUm9PaUF5TkhCNE8xeHVJQ0FnSUdobGFXZG9kRG9nTWpSd2VEdGNiaUFnZlZ4dUlDQXVjbWx1WnlCN1hHNGdJQ0FnZDJsa2RHZzZJRFF6Y0hnN1hHNGdJQ0FnYUdWcFoyaDBPaUEwTTNCNE8xeHVJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dOM0I0TzF4dUlDQjlYRzRnSUM1eWFXNW5JQzUwY21GamF5QjdYRzRnSUNBZ2MzUnliMnRsTFhkcFpIUm9PaUF4Y0hnN1hHNGdJSDFjYmlBZ0xuSnBibWNnTG5CeWIyZHlaWE56SUh0Y2JpQWdJQ0J6ZEhKdmEyVXRkMmxrZEdnNklESndlRHRjYmlBZ2ZWeHVJQ0F1ZG1Gc2RXVWdlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNVGh3ZUR0Y2JpQWdmVnh1SUNBdWJHRmlaV3dnZTF4dUlDQWdJSFJ2Y0RvZ0xUSXdjSGc3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUE0Y0hnN1hHNGdJSDFjYmlBZ0xuTm9iM2N0Ylc5aWFXeGxJSHRjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdmVnh1SUNBdWFHbGtaUzF0YjJKcGJHVWdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEc0Z0lIMWNibjFjYmk1bWIyOTBaWElnZTF4dUlDQmlZV05yWjNKdmRXNWtPaUFqTXpFek1UTXhPMXh1SUNCd1lXUmthVzVuTFhSdmNEb2dOREJ3ZUR0Y2JuMWNiaTVtYjI5MFpYSmZYMnh2WjI4Z2UxeHVJQ0IzYVdSMGFEb2dNVEk1Y0hnN1hHNGdJR2hsYVdkb2REb2dORE53ZUR0Y2JpQWdiV0Z5WjJsdUxYSnBaMmgwT2lBME1YQjRPMXh1ZlZ4dUxtWnZiM1JsY2w5ZmJHOW5ieUJwYldjZ2UxeHVJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdhR1ZwWjJoME9pQXhNREFsTzF4dWZWeHVMbVp2YjNSbGNsOWZiV1Z1ZFNCN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc1OVhHNHVabTl2ZEdWeVgxOXRaVzUxTG5Ob2IzY3RkR0ZpYkdWMElIdGNiaUFnWkdsemNHeGhlVG9nYm05dVpUdGNibjFjYmk1bWIyOTBaWEpmWDIxbGJuVWdiR2tnZTF4dUlDQnNhWE4wTFhOMGVXeGxPaUJ1YjI1bE8xeHVJQ0J0WVhKbmFXNHRjbWxuYUhRNklETXdjSGc3WEc1OVhHNHVabTl2ZEdWeVgxOXRaVzUxSUd4cE9teGhjM1F0WTJocGJHUWdlMXh1SUNCdFlYSm5hVzR0Y21sbmFIUTZJREE3WEc1OVhHNHVabTl2ZEdWeVgxOXRaVzUxSUd4cElHRWdlMXh1SUNCamIyeHZjam9nSTJabVpqdGNiaUFnWm05dWRDMXphWHBsT2lBeE9IQjRPMXh1SUNCbWIyNTBMV1poYldsc2VUb2dYQ0pOYjI1MGMyVnljbUYwWENJN1hHNGdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2JuMWNibHh1TG1admIzUmxjaTEwYjNBZ2UxeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dWZWeHVYRzR1Wm05dmRHVnlMWEJ5YVhaaFkza2dlMXh1SUNCaVlXTnJaM0p2ZFc1a09pQWpNamt5T1RJNU8xeHVJQ0J0WVhKbmFXNHRkRzl3T2lBek1IQjRPMXh1SUNCd1lXUmthVzVuT2lBeE1YQjRJREE3WEc0Z0lHTnZiRzl5T2lBak9VVTVSVGxGTzF4dUlDQm1iMjUwTFhOcGVtVTZJREUyY0hnN1hHNGdJR04xY25OdmNqb2djRzlwYm5SbGNqdGNiaUFnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nWENKTmIyNTBjMlZ5Y21GMFhDSTdYRzU5WEc1Y2JrQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRZWGd0ZDJsa2RHZzZJREU1TVRsd2VDa2dlMXh1SUNBdVptOXZkR1Z5SUh0Y2JpQWdJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ01pNHdPRE4yZHp0Y2JpQWdmVnh1SUNBdVptOXZkR1Z5WDE5c2IyZHZJSHRjYmlBZ0lDQjNhV1IwYURvZ05pNDNNVGwyZHp0Y2JpQWdJQ0JvWldsbmFIUTZJREl1TWpSMmR6dGNiaUFnSUNCdFlYSm5hVzR0Y21sbmFIUTZJREl1TVRNMWRuYzdYRzRnSUgxY2JpQWdMbVp2YjNSbGNsOWZiV1Z1ZFNCc2FTQjdYRzRnSUNBZ2JXRnlaMmx1TFhKcFoyaDBPaUF4TGpVMk0zWjNPMXh1SUNCOVhHNGdJQzVtYjI5MFpYSmZYMjFsYm5VZ2JHa2dZU0I3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF3TGprek9IWjNPMXh1SUNCOVhHNGdJQzVtYjI5MFpYSXRjSEpwZG1GamVTQjdYRzRnSUNBZ2JXRnlaMmx1TFhSdmNEb2dNUzQxTmpOMmR6dGNiaUFnSUNCd1lXUmthVzVuT2lBd0xqVTNNM1ozSURBN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBd0xqZ3pNM1ozTzF4dUlDQjlYRzU5WEc1QWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQXhNREkwY0hncElIdGNiaUFnTG1admIzUmxjaUI3WEc0Z0lDQWdjR0ZrWkdsdVp5MTBiM0E2SURVdU1qQTRkbmM3WEc0Z0lIMWNiaUFnTG1admIzUmxjbDlmYkc5bmJ5QjdYRzRnSUNBZ2QybGtkR2c2SURJNExqSTFOWFozTzF4dUlDQWdJR2hsYVdkb2REb2dNVEV1TlRnNWRuYzdYRzRnSUNBZ2JXRnlaMmx1TFhKcFoyaDBPaUF3TzF4dUlDQWdJRzFoY21kcGJpMXNaV1owT2lCaGRYUnZPMXh1SUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nWVhWMGJ6dGNiaUFnZlZ4dUlDQXVabTl2ZEdWeVgxOXRaVzUxSUh0Y2JpQWdJQ0J0WVhKbmFXNHRkRzl3T2lBMkxqVXhkbmM3WEc0Z0lIMWNiaUFnTG1admIzUmxjbDlmYldWdWRTNXphRzkzTFhSaFlteGxkQ0I3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdJQ0JtYkdWNExYZHlZWEE2SUhkeVlYQTdYRzRnSUNBZ2QybGtkR2c2SURFd01DVTdYRzRnSUNBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCemNHRmpaUzFpWlhSM1pXVnVPMXh1SUNCOVhHNGdJQzVtYjI5MFpYSmZYMjFsYm5VZ2JHa2dlMXh1SUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nTUR0Y2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQTFMakl3T0haM08xeHVJQ0I5WEc0Z0lDNW1iMjkwWlhKZlgyMWxiblVnYkdrNmJHRnpkQzFqYUdsc1pDQjdYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTUR0Y2JpQWdmVnh1SUNBdVptOXZkR1Z5WDE5dFpXNTFJR3hwSUdFZ2UxeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01pNDJNRFIyZHp0Y2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ05qQXdPMXh1SUNCOVhHNGdJQzVtYjI5MFpYSXRjSEpwZG1GamVTQjdYRzRnSUNBZ2JXRnlaMmx1TFhSdmNEb2dOeTQ0TVROMmR6dGNiaUFnSUNCd1lXUmthVzVuT2lBeExqUXpNblozSURBN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBeUxqQTRNM1ozTzF4dUlDQjlYRzU5WEc1QWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQTJOVEJ3ZUNrZ2UxeHVJQ0F1Wm05dmRHVnlJSHRjYmlBZ0lDQndZV1JrYVc1bkxYUnZjRG9nTnk0eU5EWjJkenRjYmlBZ2ZWeHVJQ0F1Wm05dmRHVnlYMTlzYjJkdklIdGNiaUFnSUNCM2FXUjBhRG9nTXpFdU1UVTVkbmM3WEc0Z0lDQWdhR1ZwWjJoME9pQXhNaTQ0TURKMmR6dGNiaUFnZlZ4dUlDQXVabTl2ZEdWeVgxOXRaVzUxSUh0Y2JpQWdJQ0J0WVhKbmFXNHRkRzl3T2lBNExqWTVOblozTzF4dUlDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0N1hHNGdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JpQWdmVnh1SUNBdVptOXZkR1Z5WDE5dFpXNTFJSFZzSUh0Y2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXlMalF4TlhaM08xeHVJQ0I5WEc0Z0lDNW1iMjkwWlhKZlgyMWxiblVnYkdrZ2UxeHVJQ0FnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2p0Y2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXlMalF4TlhaM08xeHVJQ0I5WEc0Z0lDNW1iMjkwWlhKZlgyMWxiblVnYkdrZ1lTQjdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQTBMak0wT0haM08xeHVJQ0FnSUdadmJuUXRkMlZwWjJoME9pQTBNREE3WEc0Z0lIMWNiaUFnTG1admIzUmxjaTF3Y21sMllXTjVJSHRjYmlBZ0lDQnRZWEpuYVc0dGRHOXdPaUF4TVM0eE1URjJkenRjYmlBZ0lDQndZV1JrYVc1bk9pQXlMalkxTjNaM0lEQTdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXpMamcyTlhaM08xeHVJQ0I5WEc1OVhHNUFjM1Z3Y0c5eWRITWdLQzEzWldKcmFYUXRZWEJ3WldGeVlXNWpaVHB1YjI1bEtYdGNiaTVtYjNKdFgxOXNZV0psYkNCcGJuQjFkRHBqYUdWamEyVmtJSDRnYzNCaGJqbzZZbVZtYjNKbGUySmhZMnRuY205MWJtUXRhVzFoWjJVNmRYSnNLQzR1TDJsdFp5OWphR1ZqYXkxcFkyOXVMbk4yWnlsOVhHNHVabTl5YlMxc2FYTjBJR3hwT2pwaVpXWnZjbVY3WW1GamEyZHliM1Z1WkMxcGJXRm5aVHAxY213b0xpNHZhVzFuTDJobGNtOHRiR2x6ZEMxcFkyOXVMbk4yWnlsOVhHNTlYRzVjYmlCQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQXhPVEU1Y0hncGUxeHVYRzVBYzNWd2NHOXlkSE1nS0MxM1pXSnJhWFF0WVhCd1pXRnlZVzVqWlRwdWIyNWxLWHRjYmx4dWZWeHVYRzU5WEc1Y2JpQkFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV0Y0TFhkcFpIUm9PaUF4TURJMGNIZ3BlMXh1WEc1QWMzVndjRzl5ZEhNZ0tDMTNaV0pyYVhRdFlYQndaV0Z5WVc1alpUcHViMjVsS1h0Y2JseHVmVnh1WEc1OVhHNWNiaUJBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2lBMk5UQndlQ2w3WEc1Y2JrQnpkWEJ3YjNKMGN5QW9MWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPbTV2Ym1VcGUxeHVYRzU5WEc1Y2JuMWNiaUlzSWk1b1pXRmtaWElnZTF4eVhHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ0l6QkVOekUyTVR0Y2NseHVJQ0FnSUM4dklDNW9aV0ZrWlhKZlgybHVibVZ5WEhKY2JseHlYRzRnSUNBZ0psOWZhVzV1WlhJZ2UxeHlYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hISmNiaUFnSUNBZ0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQnpjR0ZqWlMxaVpYUjNaV1Z1TzF4eVhHNGdJQ0FnSUNBZ0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYSEpjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nTVRWd2VDQXdJREl6Y0hnZ01EdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0F2THlBdWFHVmhaR1Z5WDE5c2IyZHZYSEpjYmx4eVhHNGdJQ0FnSmw5ZmJHOW5ieUI3WEhKY2JpQWdJQ0FnSUNBZ0ppQnBiV2Q3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQXhNRE53ZUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUEwTW5CNE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBdkx5QXVhR1ZoWkdWeVgxOXRaVzUxWEhKY2JseHlYRzRnSUNBZ0psOWZiV1Z1ZFNCN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdMeThnTG1obFlXUmxjbDlmYm1GMlhISmNibHh5WEc0Z0lDQWdKbDlmYm1GMklIdGNjbHh1SUNBZ0lDQWdJQ0J0WVhKbmFXNHRkRzl3T2lBeU1IQjRPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUM4dklDNW9aV0ZrWlhKZlgyeHBjM1JjY2x4dVhISmNiaUFnSUNBbVgxOXNhWE4wSUh0Y2NseHVJQ0FnSUNBZ0lDQmNjbHh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHlYRzRnSUNBZ0lDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0x5OGdMbWhsWVdSbGNsOWZhWFJsYlZ4eVhHNWNjbHh1SUNBZ0lDWmZYMmwwWlcwZ2UxeHlYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMXlhV2RvZERvZ016QndlRHRjY2x4dUlDQWdJQ0FnSUNCc2FYTjBMWE4wZVd4bE9tNXZibVU3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ1k2YkdGemRDMWphR2xzWkh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVMWEpwWjJoME9pQXdPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQXZMeUF1YUdWaFpHVnlYMTlzYVc1clhISmNibHh5WEc0Z0lDQWdKbDlmYkdsdWF5QjdYSEpjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE9IQjRPMXh5WEc0Z0lDQWdJQ0FnSUdOdmJHOXlPaUFqWm1abU8xeHlYRzRnSUNBZ0lDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2NseHVJQ0FnSUNBZ0lDQmNjbHh1SUNBZ0lIMWNjbHh1ZlZ4eVhHNHVZblZ5WjJWeUlIdGNjbHh1SUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEhKY2JuMWNjbHh1UUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxaGVDMTNhV1IwYURveE9URTVjSGdwSUh0Y2NseHVJQ0F1YUdWaFpHVnlJSHRjY2x4dUlDQWdJQ1pmWDJsdWJtVnlJSHRjY2x4dUlDQWdJQ0FnY0dGa1pHbHVaem9nTUM0M09ERjJkeUF3SURFdU1UazRkbmNnTUR0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQXZMeUF1YUdWaFpHVnlYMTlzYjJkdlhISmNiaUFnSUNBbVgxOXNiMmR2SUh0Y2NseHVJQ0FnSUNBZ0ppQnBiV2NnZTF4eVhHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBMUxqTTJOWFozTzF4eVhHNGdJQ0FnSUNBZ0lHaGxhV2RvZERvZ01pNHhPRGgyZHp0Y2NseHVJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQzh2SUM1b1pXRmtaWEpmWDIxbGJuVmNjbHh1SUNBZ0lDWmZYMjVoZGlCN1hISmNiaUFnSUNBZ0lHMWhjbWRwYmkxMGIzQTZJREV1TURReWRuYzdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnTHk4Z0xtaGxZV1JsY2w5ZmJHbHpkRnh5WEc0Z0lDQWdKbDlmYkdsemRDQjdmVnh5WEc1Y2NseHVJQ0FnSUM4dklDNW9aV0ZrWlhKZlgybDBaVzFjY2x4dUlDQWdJQ1pmWDJsMFpXMGdlMXh5WEc0Z0lDQWdJQ0J0WVhKbmFXNHRjbWxuYUhRNklERXVOVFl6ZG5jN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdMeThnTG1obFlXUmxjbDlmYkdsdWExeHlYRzRnSUNBZ0psOWZiR2x1YXlCN1hISmNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dNQzQ1TXpoMmR6dGNjbHh1SUNBZ0lIMWNjbHh1SUNCOVhISmNibjFjY2x4dVFHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMWhlQzEzYVdSMGFEb3hNREkwY0hncElIdGNjbHh1SUNBdWFHVmhaR1Z5SUh0Y2NseHVJQ0FnSUNaZlgybHVibVZ5SUh0Y2NseHVJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01TNDJPVE4yZHlBd08xeHlYRzRnSUNBZ0lDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklITjBZWEowTzF4eVhHNGdJQ0FnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hISmNiaUFnSUNCOVhISmNiaUFnSUNBdVluVnlaMlZ5SUh0Y2NseHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEhKY2JpQWdJQ0FnSUhkcFpIUm9PaUEyTGpVeE1IWjNPMXh5WEc0Z0lDQWdJQ0JvWldsbmFIUTZJRFl1TlRFd2RuYzdYSEpjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjY2x4dUlDQWdJQ0FnYldGeVoybHVMV3hsWm5RNklHRjFkRzg3WEhKY2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklDTkdSa1pHUmtZN1hISmNiaUFnSUNBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURFd01DVTdYSEpjYmlBZ0lDQWdJQ1lnYzNCaGJpQjdYSEpjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJREl1TmpBMGRuYzdYSEpjYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF3TGpJMk1IWjNPMXh5WEc0Z0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2NseHVJQ0FnSUNBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBd0xqVXlNWFozTzF4eVhHNGdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZJQ013UkRjeE5qRTdYSEpjYmlBZ0lDQWdJQ0FnYkdWbWREb2dOVEFsTzF4eVhHNGdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d0TlRBbEtUdGNjbHh1SUNBZ0lDQWdJQ0FtT201MGFDMWphR2xzWkNneEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNCMGIzQTZJREl1TkRjMGRuYzdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDWTZiblJvTFdOb2FXeGtLRElwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJSFJ2Y0RvZ015NHhNalYyZHp0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSmpwdWRHZ3RZMmhwYkdRb015a2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ1ltOTBkRzl0T2lBeUxqUTNOSFozTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdKbDlmYkc5bmJ5QjdYSEpjYmlBZ0lDQWdJRzFoY21kcGJpMXNaV1owT2lCaGRYUnZPMXh5WEc0Z0lDQWdJQ0FtSUdsdFp5QjdYSEpjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJREV6TGprek1uWjNPMXh5WEc0Z0lDQWdJQ0FnSUdobGFXZG9kRG9nTlM0M01qbDJkenRjY2x4dUlDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnSmw5ZmJtRjJJSHRjY2x4dUlDQWdJQ0FnY0dGa1pHbHVaem9nTVRNdU1ESXhkbmM3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0FtWDE5dFpXNTFJSHRjY2x4dUlDQWdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNjbHh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh5WEc0Z0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2NseHVJQ0FnSUNBZ2FHVnBaMmgwT2lCdFlYZzdYSEpjYmlBZ0lDQWdJSFJ2Y0RvZ01EdGNjbHh1SUNBZ0lDQWdiR1ZtZERvZ01EdGNjbHh1SUNBZ0lDQWdlaTFwYm1SbGVEb2dNVEE3WEhKY2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklDTkdSa1pHUmtZN1hISmNiaUFnSUNBZ0lDWXVZV04wYVhabElIdGNjbHh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNjbHh1SUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdMbTF2WWkxamJHOXpaU0I3WEhKY2JpQWdJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2NseHVJQ0FnSUNBZ2RHOXdPaUExTGpJd09IWjNPMXh5WEc0Z0lDQWdJQ0J5YVdkb2REb2dNaTQyTURSMmR6dGNjbHh1SUNBZ0lDQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHlYRzRnSUNBZ0lDQjNhV1IwYURvZ01pNHpORFIyZHp0Y2NseHVJQ0FnSUNBZ2FHVnBaMmgwT2lBeUxqTTBOSFozTzF4eVhHNGdJQ0FnSUNBbUlHbHRaeUI3WEhKY2JpQWdJQ0FnSUNBZ2QybGtkR2c2SURFd01DVTdYSEpjYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF4TURBbE8xeHlYRzRnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQW1YMTlzYVhOMElIdGNjbHh1SUNBZ0lDQWdabXhsZUMxa2FYSmxZM1JwYjI0NklHTnZiSFZ0Ymp0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUNaZlgybDBaVzBnZTF4eVhHNGdJQ0FnSUNCdFlYSm5hVzR0Y21sbmFIUTZJREE3WEhKY2JpQWdJQ0FnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2p0Y2NseHVJQ0FnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTmk0MU1UQjJkenRjY2x4dUlDQWdJQ0FnSmpwc1lYTjBMV05vYVd4a0lIdGNjbHh1SUNBZ0lDQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXdPMXh5WEc0Z0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0FtWDE5c2FXNXJJSHRjY2x4dUlDQWdJQ0FnWTI5c2IzSTZJQ00wTVRReE5ERTdYSEpjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTWk0Mk1EUjJkenRjY2x4dUlDQWdJSDFjY2x4dUlDQjlYSEpjYm4xY2NseHVRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFoZUMxM2FXUjBhRG8yTlRCd2VDa2dlMXh5WEc0Z0lDNW9aV0ZrWlhJZ2UxeHlYRzRnSUNBZ0psOWZhVzV1WlhJZ2UxeHlYRzRnSUNBZ0lDQndZV1JrYVc1bk9pQTFMakEzTW5aM0lEQTdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQXVZblZ5WjJWeUlIdGNjbHh1SUNBZ0lDQWdkMmxrZEdnNklEY3VNalEyZG5jN1hISmNiaUFnSUNBZ0lHaGxhV2RvZERvZ015NHhOREIyZHp0Y2NseHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dkSEpoYm5Od1lYSmxiblE3WEhKY2JpQWdJQ0FnSUNZZ2MzQmhiaUI3WEhKY2JpQWdJQ0FnSUNBZ2QybGtkR2c2SURFd01DVTdYSEpjYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF3TGpjeU5YWjNPMXh5WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJREE3WEhKY2JpQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dJMlptWmp0Y2NseHVJQ0FnSUNBZ0lDQnNaV1owT2lBd0pUdGNjbHh1SUNBZ0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb01DazdYSEpjYmlBZ0lDQWdJQ0FnSmpwdWRHZ3RZMmhwYkdRb01Ta2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ2RHOXdPaUF3TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FtT201MGFDMWphR2xzWkNneUtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNCMGIzQTZJREV1TWpBNGRuYzdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDWTZiblJvTFdOb2FXeGtLRE1wSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJR0p2ZEhSdmJUb2dNRHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lDWmZYMnh2WjI4Z2UxeHlYRzRnSUNBZ0lDQnRZWEpuYVc0dGJHVm1kRG9nWVhWMGJ6dGNjbHh1SUNBZ0lDQWdKaUJwYldjZ2UxeHlYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQXlNaTR5TWpKMmR6dGNjbHh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJRGt1TVRjNWRuYzdYSEpjYmlBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQWdJQ1pmWDI1aGRpQjdYSEpjYmlBZ0lDQWdJSEJoWkdScGJtYzZJREkwTGpFMU5YWjNJREFnTVRrdU16STBkbmNnTUR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUNaZlgyMWxiblVnZTF4eVhHNGdJQ0FnSUNCMGIzQTZJREl1TkRFMWRuYzdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQXViVzlpTFdOc2IzTmxJSHRjY2x4dUlDQWdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4eVhHNGdJQ0FnSUNCMGIzQTZJRFV1TXpFMGRuYzdYSEpjYmlBZ0lDQWdJSEpwWjJoME9pQTFMak14TkhaM08xeHlYRzRnSUNBZ0lDQjNhV1IwYURvZ05DNDRNekYyZHp0Y2NseHVJQ0FnSUNBZ2FHVnBaMmgwT2lBMExqZ3pNWFozTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnSmw5ZmFYUmxiU0I3WEhKY2JpQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJRE11TmpJemRuYzdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQW1YMTlzYVc1cklIdGNjbHh1SUNBZ0lDQWdabTl1ZEMxemFYcGxPaUEwTGpNME9IWjNPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNWNjbHh1SWl3aUxtWnZjbTBnZTF4eVhHNGdJQ0FnWEhKY2JpQWdJQ0J3WVdSa2FXNW5PaUF4TWpCd2VDQXdJREV3TUhCNElEQTdYSEpjYmlBZ0lDQXZMeUF1Wm05eWJWOWZhVzV1WlhKY2NseHVYSEpjYmlBZ0lDQW1YMTlwYm01bGNpQjdYSEpjYmlBZ0lDQWdJQ0FnTHk4Z1pHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBdkx5QXVabTl5YlY5ZmRHbDBiR1ZjY2x4dVhISmNiaUFnSUNBbVgxOTBhWFJzWlNCN1hISmNiaUFnSUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUM4dklDNW1iM0p0WDE5c1pXWjBYSEpjYmx4eVhHNGdJQ0FnSmw5ZmJHVm1kQ0I3WEhKY2JpQWdJQ0FnSUNBZ2QybGtkR2c2SURRMU0zQjRPMXh5WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dOVFJ3ZUR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUNaZlgySjBibnRjY2x4dUlDQWdJQ0FnSUNCd1lXUmthVzVuT2lBeE5uQjRJRFF3Y0hnN1hISmNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nYkdsdVpXRnlMV2R5WVdScFpXNTBLREU0TUdSbFp5d2dJMFpHUlRBeU1pQXdKU3dnSTBaR1F6WXlNaUF4TURBbEtUdGNjbHh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURNeWNIZzdYSEpjYmlBZ0lDQWdJQ0FnWm05dWRDMW1ZVzFwYkhrNklGd2lRbVZpWVhNZ1RtVjFaVndpTzF4eVhHNGdJQ0FnSUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUEwTURBN1hISmNiaUFnSUNBZ0lDQWdiR2x1WlMxb1pXbG5hSFE2SURFd01DVTdYSEpjYmlBZ0lDQWdJQ0FnWTI5c2IzSTZJQ05tWm1ZN1hISmNiaUFnSUNBZ0lDQWdiV0Z5WjJsdUxYUnZjRG9nTWpWd2VEdGNjbHh1SUNBZ0lDQWdJQ0JqZFhKemIzSTZJSEJ2YVc1MFpYSTdYSEpjYmlBZ0lDQWdJQ0FnWW05eVpHVnlPaUIxYm5ObGREdGNjbHh1SUNBZ0lDQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXhNbkI0TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTHk4Z0xtWnZjbTFmWDJsMFpXMWNjbHh1SUNBZ0lDWmZYMnhoWW1Wc2UxeHlYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVRad2VEdGNjbHh1SUNBZ0lDQWdJQ0JtYjI1MExYZGxhV2RvZERvZ05UQXdPMXh5WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWN0YkdWbWREb2dORGR3ZUR0Y2NseHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUF4TkhCNE8xeHlYRzRnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjY2x4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh5WEc0Z0lDQWdJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQmNJazF2Ym5SelpYSnlZWFJjSWp0Y2NseHVJQ0FnSUNBZ0lDQW1JSE53WVc1N1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYkdWbWREb2dNRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkRzl3T2lBMU1DVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXU2d0TlRBbEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SURJNWNIZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ01qbHdlRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nSXpZNFEwRkNOenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ05IQjRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmliM0prWlhJNklERndlQ0J6YjJ4cFpDQWpSRUZFUVVSQk8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBbUlHbHVjSFYwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBbU9tTm9aV05yWldRZ2ZpQnpjR0Z1T2pwaVpXWnZjbVY3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNTBaVzUwT2lCY0lsd2lPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJREU1Y0hnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklERTVjSGc3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBiM0E2SURVd0pUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsWm5RNklEVXdKVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbEtDMDFNQ1VzSUMwMU1DVXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tDNHVMMmx0Wnk5amFHVmpheTFwWTI5dUxuTjJaeWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xYTnBlbVU2SURFd01DVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFhKbGNHVmhkRG9nYm04dGNtVndaV0YwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dZMlZ1ZEdWeU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUZ4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnSmw5ZmFYUmxiU0I3WEhKY2JpQWdJQ0FnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTWpWd2VEdGNjbHh1SUNBZ0lDQWdJQ0FtT214aGMzUXRZMmhwYkdSN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREE3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ1lnY0h0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE9IQjRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBMmNIZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUJjSWsxdmJuUnpaWEp5WVhSY0lqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0ppQnpjR0Z1ZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUNORk9URXpNVE03WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdKaUJwYm5CMWRIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0kwVkdSVVpGUmp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dNVEp3ZUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJREV3TUNVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhCaFpHUnBibWM2SURFNWNIZ2dNekJ3ZUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE9IQjRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQW1PanB3YkdGalpXaHZiR1JsY250Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lBalFqTkNNMEl6TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQzh2SUM1bWIzSnRYMTl5YVdkb2RGeHlYRzVjY2x4dUlDQWdJQ1pmWDNKcFoyaDBJSHRjY2x4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh5WEc0Z0lDQWdJQ0FnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdMeThnTG1admNtMWZYM1JsZUhSY2NseHVYSEpjYmlBZ0lDQW1YMTkwWlhoMElIdGNjbHh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dORFF3Y0hnN1hISmNiaUFnSUNBZ0lDQWdiV0Z5WjJsdUxYSnBaMmgwT2lBMU5IQjRPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUM4dklDNW1iM0p0WDE5cGJXZGNjbHh1WEhKY2JpQWdJQ0FtWDE5cGJXY2dlMXh5WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUF6T1Rsd2VEdGNjbHh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJRGN4TVhCNE8xeHlYRzRnSUNBZ0lDQWdJQ1lnYVcxbmUxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nTVRBd0pUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBeE1EQWxPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVMbVp2Y20wdGQzSmhjSEJsY2lCN1hISmNiaUFnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh5WEc0Z0lDQWdiV0Z5WjJsdUxYUnZjRG9nTkRCd2VEdGNjbHh1WEhKY2JuMWNjbHh1TG1kMVlYSmhiblJsWlNCN1hISmNiaUFnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh5WEc0Z0lDQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjY2x4dUlDQWdJRzFoY21kcGJpMTBiM0E2SURJd2NIZzdYSEpjYmlBZ0lDQW1JR2x0WjN0Y2NseHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ016UndlRHRjY2x4dUlDQWdJQ0FnSUNCb1pXbG5hSFE2SURRMGNIZzdYSEpjYmlBZ0lDQWdJQ0FnYldGeVoybHVMWEpwWjJoME9pQXhObkI0TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnSmlCd2UxeHlYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVRod2VEdGNjbHh1SUNBZ0lDQWdJQ0JtYjI1MExYZGxhV2RvZERvZ05UQXdPMXh5WEc0Z0lDQWdJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQmNJazF2Ym5SelpYSnlZWFJjSWp0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc0dVptOXliUzEwYVcxbGNpQjdYSEpjYmlBZ0lDQW1JR2d6ZTF4eVhHNGdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNakp3ZUR0Y2NseHVJQ0FnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTnpBd08xeHlYRzRnSUNBZ0lDQWdJR3hwYm1VdGFHVnBaMmgwT2lBeU4zQjRPMXh5WEc0Z0lDQWdJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQmNJazF2Ym5SelpYSnlZWFJjSWp0Y2NseHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBek1IQjRPMXh5WEc0Z0lDQWdJQ0FnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2p0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVMbVp2Y20wdGJHbHpkQ0I3WEhKY2JpQWdJQ0J0WVhKbmFXNHRkRzl3T2lBME1IQjRPMXh5WEc0Z0lDQWdKaUJvTTN0Y2NseHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJRFF5Y0hnN1hISmNiaUFnSUNBZ0lDQWdabTl1ZEMxM1pXbG5hSFE2SURRd01EdGNjbHh1SUNBZ0lDQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ1hDSkNaV0poY3lCT1pYVmxYQ0k3WEhKY2JpQWdJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREV3TUNVN1hISmNiaUFnSUNBZ0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01qQndlRHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJQ1lnYkdsN1hISmNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp5MXNaV1owT2lBek5IQjRPMXh5WEc0Z0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2NseHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREU0Y0hnN1hISmNiaUFnSUNBZ0lDQWdiR2x6ZEMxemRIbHNaVG9nYm05dVpUdGNjbHh1SUNBZ0lDQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ1hDSk5iMjUwYzJWeWNtRjBYQ0k3WEhKY2JpQWdJQ0FnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTWpCd2VEdGNjbHh1SUNBZ0lDQWdJQ0FtT214aGMzUXRZMmhwYkdSN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREE3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ1k2T21KbFptOXlaWHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEdWdWREb2dYQ0pjSWp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJREkwY0hnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nTWpSd2VEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pXWjBPaUF3TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b0xpNHZhVzFuTDJobGNtOHRiR2x6ZEMxcFkyOXVMbk4yWnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RdGMybDZaVG9nTVRBd0pUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMXlaWEJsWVhRNklHNXZMWEpsY0dWaGREdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dZMlZ1ZEdWeU8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVjY2x4dVhISmNibHh5WEc1Y2NseHVYSEpjYmk1amIzVnVkR1J2ZDI0Z2UxeHlYRzRnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dUlDQWdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2dZMlZ1ZEdWeU8xeHlYRzRnSUNBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNjbHh1ZlZ4eVhHNWNjbHh1TG5KcGJtY2dlMXh5WEc0Z0lDQWdkMmxrZEdnNklEVTFjSGc3WEhKY2JpQWdJQ0JvWldsbmFIUTZJRFUxY0hnN1hISmNiaUFnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hISmNiaUFnSUNCa2FYTndiR0Y1T2lCbmNtbGtPMXh5WEc0Z0lDQWdiV0Z5WjJsdUxYSnBaMmgwT2lBeE1IQjRPMXh5WEc0Z0lDQWdjR3hoWTJVdGFYUmxiWE02SUdObGJuUmxjanRjY2x4dWZWeHlYRzVjY2x4dUxuSnBibWNnYzNabklIdGNjbHh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh5WEc0Z0lDQWdhR1ZwWjJoME9pQXhNREFsTzF4eVhHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTFRrd1pHVm5LVHRjY2x4dUlDQWdJRzkyWlhKbWJHOTNPaUIyYVhOcFlteGxPMXh5WEc1OVhISmNibHh5WEc0dWNtbHVaeUF1ZEhKaFkyc2dlMXh5WEc0Z0lDQWdjM1J5YjJ0bE9pQWpRME5EUTBORE8xeHlYRzRnSUNBZ1ptbHNiRG9nYm05dVpUdGNjbHh1SUNBZ0lITjBjbTlyWlMxM2FXUjBhRG9nTVhCNFhISmNibjFjY2x4dVhISmNiaTV5YVc1bklDNXdjbTluY21WemN5QjdYSEpjYmlBZ0lDQnpkSEp2YTJVNklDTTJPRU5CUWpjN1hISmNiaUFnSUNCbWFXeHNPaUJ1YjI1bE8xeHlYRzRnSUNBZ2MzUnliMnRsTFhkcFpIUm9PaUF5Y0hnN1hISmNiaUFnSUNCemRISnZhMlV0YkdsdVpXTmhjRG9nY205MWJtUTdYSEpjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUJ6ZEhKdmEyVXRaR0Z6YUc5bVpuTmxkQ0F1TWpWeklHeHBibVZoY2x4eVhHNTlYSEpjYmx4eVhHNHVkbUZzZFdVZ2UxeHlYRzRnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHlYRzRnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dUlDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEhKY2JpQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNjbHh1SUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUEzTURBN1hISmNiaUFnSUNCbWIyNTBMWE5wZW1VNklESTBjSGc3WEhKY2JpQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ1hDSk5iMjUwYzJWeWNtRjBYQ0k3WEhKY2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ016QXdPMXh5WEc1Y2NseHVmVnh5WEc1Y2NseHVMbXhoWW1Wc0lIdGNjbHh1SUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNjbHh1SUNBZ0lIUnZjRG9nTFRJd2NIZzdYSEpjYmlBZ0lDQnNaV1owT2lBMU1DVTdYSEpjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmdvTFRVd0pTazdYSEpjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYSEpjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREV3Y0hnN1hISmNiaUFnSUNCdmNHRmphWFI1T2lBdU9EdGNjbHh1ZlZ4eVhHNWNjbHh1WEhKY2JseHlYRzVBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2lBeE9URTVjSGdwSUh0Y2NseHVJQ0FnSUM1bWIzSnRJSHRjY2x4dUlDQWdJQ0FnSUNCd1lXUmthVzVuT2lBMkxqSTFNSFozSURBZ05TNHlNRGgyZHlBd08xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBbVgxOXNaV1owSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJREl6TGpVNU5IWjNPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dGNtbG5hSFE2SURJdU9ERXpkbmM3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNBbVgxOWlkRzRnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUF3TGpnek0zWjNJREl1TURnemRuYzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNUzQyTmpkMmR6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JXRnlaMmx1TFhSdmNEb2dNUzR6TURKMmR6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTUM0Mk1qVjJkenRjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUNaZlgyeGhZbVZzSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBd0xqZ3pNM1ozTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5MV3hsWm5RNklESXVORFE0ZG5jN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTEwYjNBNklEQXVOekk1ZG5jN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQW1JSE53WVc0Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklERXVOVEV3ZG5jN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklERXVOVEV3ZG5jN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBd0xqSXdPSFozTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5T2lBd0xqQTFNblozSUhOdmJHbGtJQ05FUVVSQlJFRTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ1lnYVc1d2RYUWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBbU9tTm9aV05yWldSK2MzQmhiam82WW1WbWIzSmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ01DNDVPVEIyZHp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJREF1T1Rrd2RuYzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUNaZlgybDBaVzBnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXhMak13TW5aM08xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdKaUJ3SUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNQzQ1TXpoMmR6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFoY21kcGJpMWliM1IwYjIwNklEQXVNekV6ZG5jN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDWWdhVzV3ZFhRZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbTl5WkdWeU9pQXdMakExTW5aM0lITnZiR2xrSUNORlJrVkdSVVk3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF3TGpZeU5YWjNPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nTUM0NU9UQjJkeUF4TGpVMk0zWjNPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBd0xqa3pPSFozTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNBbVgxOTBaWGgwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJREl5TGpreE4zWjNPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dGNtbG5hSFE2SURJdU9ERXpkbmM3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNBbVgxOXBiV2NnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNakF1TnpneGRuYzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ016Y3VNRE14ZG5jN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUM1bWIzSnRMWGR5WVhCd1pYSWdlMXh5WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTEwYjNBNklESXVNRGd6ZG5jN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdMbWQxWVhKaGJuUmxaU0I3WEhKY2JpQWdJQ0FnSUNBZ2JXRnlaMmx1TFhSdmNEb2dNUzR3TkRKMmR6dGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0ppQnBiV2NnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNUzQzTnpGMmR6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBeUxqSTVNblozTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhKbmFXNHRjbWxuYUhRNklEQXVPRE16ZG5jN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQW1JSEFnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURBdU9UTTRkbmM3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQzVtYjNKdExYUnBiV1Z5SUh0Y2NseHVJQ0FnSUNBZ0lDQW1JR2d6SUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeExqRTBOblozTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01TNDBNRFoyZHp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNUzQxTmpOMmR6dGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0xtWnZjbTB0YkdsemRDQjdYSEpjYmlBZ0lDQWdJQ0FnYldGeVoybHVMWFJ2Y0RvZ01pNHdPRE4yZHp0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSmlCb015QjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNaTR4T0RoMmR6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTVM0d05ESjJkenRjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUNZZ2JHa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQndZV1JrYVc1bkxXeGxablE2SURFdU56Y3hkbmM3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTUM0NU16aDJkenRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01TNHdOREoyZHp0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDWTZPbUpsWm05eVpTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNUzR5TlRCMmR6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2dNUzR5TlRCMmR6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBdWNtbHVaeUI3WEhKY2JpQWdJQ0FnSUNBZ2QybGtkR2c2SURJdU9EWTFkbmM3WEhKY2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBeUxqZzJOWFozTzF4eVhHNGdJQ0FnSUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nTUM0MU1qRjJkenRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBdWNtbHVaeUF1ZEhKaFkyc2dlMXh5WEc0Z0lDQWdJQ0FnSUhOMGNtOXJaUzEzYVdSMGFEb2dNQzR3TlRKMmR6dGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0F1Y21sdVp5QXVjSEp2WjNKbGMzTWdlMXh5WEc0Z0lDQWdJQ0FnSUhOMGNtOXJaUzEzYVdSMGFEb2dNQzR4TURSMmR6dGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0F1ZG1Gc2RXVWdlMXh5WEc0Z0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01TNHlOVEIyZHp0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQXViR0ZpWld3Z2UxeHlYRzRnSUNBZ0lDQWdJSFJ2Y0RvZ0xURXVNRFF5ZG5jN1hISmNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF3TGpVeU1YWjNPMXh5WEc0Z0lDQWdmVnh5WEc1OVhISmNia0J0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0WVhndGQybGtkR2c2SURFd01qUndlQ2tnZTF4eVhHNGdJQ0FnTG1admNtMGdlMXh5WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURFd01IQjRJREFnT0RCd2VDQXdPMXh5WEc0Z0lDQWdJQ0FnSUNaZlgzSnBaMmgwZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhKbmFXNHRkRzl3T2lBeU5YQjRPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQW1YMTlzWldaMElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SURFd01DVTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nTUR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDWmZYMkowYmlCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhCaFpHUnBibWM2SURJd2NIZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJRFF3Y0hnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTEwYjNBNklESTFjSGc3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklERXljSGc3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNBbVgxOXNZV0psYkNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01UaHdlRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjR0ZrWkdsdVp5MXNaV1owT2lBME4zQjRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUF5TUhCNE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdKaUJ6Y0dGdUlIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQXlPWEI0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBeU9YQjRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dOSEI0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0kwUkJSRUZFUVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0ppQnBibkIxZENCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQnViMjVsTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1k2WTJobFkydGxaSDV6Y0dGdU9qcGlaV1p2Y21VZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4T1hCNE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nTVRsd2VEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnSmw5ZmFYUmxiU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzFoY21kcGJpMWliM1IwYjIwNklESTFjSGc3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBbUlIQWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE9IQjRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dObkI0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBbUlHbHVjSFYwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lDTkZSa1ZHUlVZN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBeE1uQjRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nTVRsd2VDQXpNSEI0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXhPSEI0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNBbVgxOTBaWGgwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJRFEwTUhCNE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCdFlYSm5hVzR0Y21sbmFIUTZJRE14Y0hnN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQW1YMTlwYldjZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nTWpVM2NIZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ05UTTJjSGc3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQzVtYjNKdExYZHlZWEJ3WlhJZ2UxeHlYRzRnSUNBZ0lDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0N1hISmNiaUFnSUNBZ0lDQWdiV0Z5WjJsdUxYUnZjRG9nTkRCd2VEdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0F1WjNWaGNtRnVkR1ZsSUh0Y2NseHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUF5TUhCNE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBbUlHbHRaeUI3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQXpOSEI0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJRFEwY0hnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dNVFp3ZUR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDWWdjQ0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVRod2VEdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0xtWnZjbTB0ZEdsdFpYSWdlMXh5WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTEwYjNBNklETXdjSGc3WEhKY2JpQWdJQ0FnSUNBZ0ppQm9NeUI3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTWpKd2VEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREkzY0hnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJRE13Y0hnN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUM1bWIzSnRMV3hwYzNRZ2UxeHlYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMTBiM0E2SURFMmNIZzdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDWWdhRE1nZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURReWNIZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURFMmNIZzdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FtSUd4cElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NHRmtaR2x1Wnkxc1pXWjBPaUF6TkhCNE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklERTRjSGc3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzFoY21kcGJpMWliM1IwYjIwNklESXdjSGc3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBbU9qcGlaV1p2Y21VZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklESTBjSGc3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SURJMGNIZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0xuSnBibWNnZTF4eVhHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBMU5YQjRPMXh5WEc0Z0lDQWdJQ0FnSUdobGFXZG9kRG9nTlRWd2VEdGNjbHh1SUNBZ0lDQWdJQ0J0WVhKbmFXNHRjbWxuYUhRNklERXdjSGc3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0xuSnBibWNnTG5SeVlXTnJJSHRjY2x4dUlDQWdJQ0FnSUNCemRISnZhMlV0ZDJsa2RHZzZJREZ3ZUR0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQXVjbWx1WnlBdWNISnZaM0psYzNNZ2UxeHlYRzRnSUNBZ0lDQWdJSE4wY205clpTMTNhV1IwYURvZ01uQjRPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUM1MllXeDFaU0I3WEhKY2JpQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXlOSEI0TzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDNXNZV0psYkNCN1hISmNiaUFnSUNBZ0lDQWdkRzl3T2lBdE1qQndlRHRjY2x4dUlDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklERXdjSGc3WEhKY2JpQWdJQ0I5WEhKY2JuMGdYSEpjYmk1emFHOTNMVzF2WW1sc1pYdGNjbHh1SUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEhKY2JuMWNjbHh1UUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxaGVDMTNhV1IwYURvZ05qVXdjSGdwSUh0Y2NseHVJQ0FnSUM1bWIzSnRJSHRjY2x4dUlDQWdJQ0FnSUNCd1lXUmthVzVuT2lBMU1IQjRJREFnTmpCd2VDQXdPMXh5WEc0Z0lDQWdJQ0FnSUNZdGRHOXdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2dZMjlzZFcxdU8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBbVgxOTBhWFJzWlh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYjNKa1pYSTZJREk3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJsZUhRdFlXeHBaMjQ2SUd4bFpuUTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxMGIzQTZJRFV3Y0hnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNZZ1luSjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNaZlgzUnBiV1Z5ZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J2Y21SbGNqb2dNVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdKbDlmY21sbmFIUjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxMGIzQTZJREkxY0hnN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNaZlgyeGxablFnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVMWEpwWjJoME9pQXdPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnSmw5ZlluUnVJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjR0ZrWkdsdVp6b2dNakJ3ZUNBeU5YQjRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJRE13Y0hnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTEwYjNBNklESXdjSGc3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklERXljSGc3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNBbVgxOXNZV0psYkNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01UaHdlRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjR0ZrWkdsdVp5MXNaV1owT2lBME4zQjRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUF4TUhCNE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdKaUJ6Y0dGdUlIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQXlPWEI0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBeU9YQjRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dOSEI0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0kwUkJSRUZFUVR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0ppQnBibkIxZENCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQnViMjVsTzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1k2WTJobFkydGxaSDV6Y0dGdU9qcGlaV1p2Y21VZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4T1hCNE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nTVRsd2VEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnSmw5ZmFYUmxiU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzFoY21kcGJpMWliM1IwYjIwNklERXdjSGc3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBbUlIQWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeE9IQjRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dObkI0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBbUlHbHVjSFYwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lDTkZSa1ZHUlVZN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmliM0prWlhJdGNtRmthWFZ6T2lBeE1uQjRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nTVRsd2VDQXpNSEI0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXhPSEI0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNBbVgxOTBaWGgwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJREV3TUNVN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dNRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDWmZYMmx0WnlCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SUdGMWRHODdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDNW1iM0p0TFhkeVlYQndaWElnZTF4eVhHNGdJQ0FnSUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCamIyeDFiVzQ3WEhKY2JpQWdJQ0FnSUNBZ2JXRnlaMmx1TFhSdmNEb2dPREJ3ZUR0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQXVaM1ZoY21GdWRHVmxJSHRjY2x4dUlDQWdJQ0FnSUNCdFlYSm5hVzR0ZEc5d09pQXhOSEI0TzF4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FtSUdsdFp5QjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lBek5IQjRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklEUTBjSGc3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzFoY21kcGJpMXlhV2RvZERvZ01UWndlRHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUNZZ2NDQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNVGh3ZUR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnTG1admNtMHRkR2x0WlhJZ2UxeHlYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMTBiM0E2SURBN1hISmNiaUFnSUNBZ0lDQWdKaUJvTXlCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01UZHdlRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiR2x1WlMxb1pXbG5hSFE2SURJeGNIZzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURJemNIZzdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDNW1iM0p0TFd4cGMzUWdlMXh5WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTEwYjNBNklESTFjSGc3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ1lnYURNZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklETXljSGc3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzFoY21kcGJpMWliM1IwYjIwNklERXdjSGc3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNBbUlHeHBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjR0ZrWkdsdVp5MXNaV1owT2lBek5IQjRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREUyY0hnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREV3Y0hnN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQW1PanBpWldadmNtVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJREkwY0hnN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklESTBjSGc3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdMbkpwYm1jZ2UxeHlYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQTBNM0I0TzF4eVhHNGdJQ0FnSUNBZ0lHaGxhV2RvZERvZ05ETndlRHRjY2x4dUlDQWdJQ0FnSUNCdFlYSm5hVzR0Y21sbmFIUTZJRGR3ZUR0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQXVjbWx1WnlBdWRISmhZMnNnZTF4eVhHNGdJQ0FnSUNBZ0lITjBjbTlyWlMxM2FXUjBhRG9nTVhCNE8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQzV5YVc1bklDNXdjbTluY21WemN5QjdYSEpjYmlBZ0lDQWdJQ0FnYzNSeWIydGxMWGRwWkhSb09pQXljSGc3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0xuWmhiSFZsSUh0Y2NseHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREU0Y0hnN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdMbXhoWW1Wc0lIdGNjbHh1SUNBZ0lDQWdJQ0IwYjNBNklDMHlNSEI0TzF4eVhHNGdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dPSEI0TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTG5Ob2IzY3RiVzlpYVd4bGUxeHlYRzRnSUNBZ0lDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ0xtaHBaR1V0Ylc5aWFXeGxlMXh5WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYSEpjYmlBZ0lDQjlYSEpjYm4wZ1hISmNiaUlzSWk1bWIyOTBaWElnZTF4eVhHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ0l6TXhNekV6TVR0Y2NseHVJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQTBNSEI0TzF4eVhHNGdJQ0FnTHk4Z0xtWnZiM1JsY2w5ZmJHOW5iMXh5WEc1Y2NseHVJQ0FnSUNaZlgyeHZaMjhnZTF4eVhHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE1qbHdlRHRjY2x4dUlDQWdJQ0FnSUNCb1pXbG5hSFE2SURRemNIZzdYSEpjYmlBZ0lDQWdJQ0FnYldGeVoybHVMWEpwWjJoME9pQTBNWEI0TzF4eVhHNGdJQ0FnSUNBZ0lDWWdhVzFuZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF4TURBbE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBdkx5QXVabTl2ZEdWeVgxOXRaVzUxWEhKY2JseHlYRzRnSUNBZ0psOWZiV1Z1ZFNCN1hISmNiaUFnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2NseHVJQ0FnSUNBZ0lDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh5WEc0Z0lDQWdJQ0FnSUNZdWMyaHZkeTEwWVdKc1pYUjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ1lnYkdsN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzFoY21kcGJpMXlhV2RvZERvZ016QndlRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdKanBzWVhOMExXTm9hV3hrSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nTUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FtSUdGN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0kyWm1aanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01UaHdlRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQmNJazF2Ym5SelpYSnlZWFJjSWp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVmVnh5WEc0dVkyOXVkR0ZwYm1WeUlIdGNjbHh1ZlZ4eVhHNHVabTl2ZEdWeUxYUnZjQ0I3WEhKY2JpQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHlYRzRnSUNBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNjbHh1WEhKY2JuMWNjbHh1TG1admIzUmxjaTF3Y21sMllXTjVJSHRjY2x4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUNNeU9USTVNams3WEhKY2JpQWdJQ0J0WVhKbmFXNHRkRzl3T2lBek1IQjRPMXh5WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNVEZ3ZUNBd08xeHlYRzRnSUNBZ1kyOXNiM0k2SUNNNVJUbEZPVVU3WEhKY2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFMmNIZzdYSEpjYmlBZ0lDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hISmNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hISmNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dYQ0pOYjI1MGMyVnljbUYwWENJN1hISmNibjFjY2x4dVFHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMWhlQzEzYVdSMGFEb2dNVGt4T1hCNEtTQjdYSEpjYmlBZ0lDQXVabTl2ZEdWeUlIdGNjbHh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ01pNHdPRE4yZHp0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSmw5ZmJHOW5ieUI3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQTJMamN4T1haM08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SURJdU1qUXdkbmM3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzFoY21kcGJpMXlhV2RvZERvZ01pNHhNelYyZHp0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDWmZYMjFsYm5VZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBbUlHeHBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dNUzQxTmpOMmR6dGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBbUlHRWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNQzQ1TXpoMmR6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQXVabTl2ZEdWeUxYQnlhWFpoWTNrZ2UxeHlYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMTBiM0E2SURFdU5UWXpkbmM3WEhKY2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01DNDFOek4yZHlBd08xeHlYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTUM0NE16TjJkenRjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2lBeE1ESTBjSGdwSUh0Y2NseHVJQ0FnSUM1bWIyOTBaWElnZTF4eVhHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jdGRHOXdPaUExTGpJd09IWjNPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQW1YMTlzYjJkdklIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SURJNExqSTFOWFozTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJREV4TGpVNE9YWjNPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dGNtbG5hSFE2SURBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTFzWldaME9pQmhkWFJ2TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhKbmFXNHRjbWxuYUhRNklHRjFkRzg3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNBbVgxOXRaVzUxSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVMWFJ2Y0RvZ05pNDFNVEIyZHp0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDWXVjMmh2ZHkxMFlXSnNaWFFnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdac1pYZ3RkM0poY0RvZ2QzSmhjRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQnpjR0ZqWlMxaVpYUjNaV1Z1TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBbUlIVnNJSHQ5WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBbUlHeHBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dNRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJRFV1TWpBNGRuYzdYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pqcHNZWE4wTFdOb2FXeGtJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBd08xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDWWdZU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF5TGpZd05IWjNPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUEyTURBN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0xtWnZiM1JsY2kxd2NtbDJZV041SUh0Y2NseHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dGRHOXdPaUEzTGpneE0zWjNPMXh5WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWM2SURFdU5ETXlkbmNnTUR0Y2NseHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJREl1TURnemRuYzdYSEpjYmlBZ0lDQjlYSEpjYm4xY2NseHVRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFoZUMxM2FXUjBhRG9nTmpVd2NIZ3BJSHRjY2x4dUlDQWdJQzVtYjI5MFpYSWdlMXh5WEc0Z0lDQWdJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQTNMakkwTm5aM08xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBbVgxOXNiMmR2SUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJRE14TGpFMU9YWjNPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklERXlMamd3TW5aM08xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDQWdKbDlmYldWdWRTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxMGIzQTZJRGd1TmprMmRuYzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCamIyeDFiVzQ3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBbUlIVnNJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREl1TkRFMWRuYzdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ1lnYkdrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNaTQwTVRWMmR6dGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBbUlHRWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dOQzR6TkRoMmR6dGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWGRsYVdkb2REb2dOREF3TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUM1bWIyOTBaWEl0Y0hKcGRtRmplU0I3WEhKY2JpQWdJQ0FnSUNBZ2JXRnlaMmx1TFhSdmNEb2dNVEV1TVRFeGRuYzdYSEpjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nTWk0Mk5UZDJkeUF3TzF4eVhHNGdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNeTQ0TmpWMmR6dGNjbHh1SUNBZ0lIMWNjbHh1ZlZ4eVhHNGdJRnh5WEc0Z0lDQWdJbDE5ICovXHJcbiIsIioge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmh0bWwge1xuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbn1cblxubWFpbiB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJCZWJhcyBCb29rXCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udC9CZWJhc05ldWVCb29rLndvZmYyXCIpO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiSW50ZXJcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250L0ludGVyLVJlZ3VsYXIud29mZjJcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJJbnRlclwiO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvSW50ZXItQm9sZC53b2ZmMlwiKTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkludGVyXCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udC9JbnRlci1NZWRpdW0ud29mZjJcIik7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJJbnRlclwiO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvSW50ZXItTGlnaHRCRVRBLndvZmYyXCIpO1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC1SZWd1bGFyLndvZmYyXCIpO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC1Cb2xkLndvZmYyXCIpO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC1NZWRpdW0ud29mZjJcIik7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udC9Nb250c2VycmF0LUxpZ2h0LndvZmYyXCIpO1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC1TZW1pQm9sZC53b2ZmMlwiKTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xufVxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBcIkludGVyXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE0MCU7XG4gIGNvbG9yOiAjNDE0MTQxO1xufVxuXG4uY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAxNDQwcHg7XG4gIHBhZGRpbmc6IDAgMjBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxOTE5cHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA3NXZ3O1xuICAgIHBhZGRpbmc6IDAgMS4wNDJ2dztcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5jb250YWluZXIge1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAwIDIuNjA0dnc7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY1MHB4KSB7XG4gIC5jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDAgMy42MjN2dztcbiAgfVxufVxuXG4udGl0bGUge1xuICBmb250LWZhbWlseTogXCJCZWJhcyBOZXVlXCIsIHNhbnMtc2VyaWY7XG4gIGxpbmUtaGVpZ2h0OiAxMDAlO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDc2cHg7XG59XG4udGl0bGUgc3BhbiB7XG4gIGNvbG9yOiAjNjhDQUI3O1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTkxOXB4KSB7XG4gIC50aXRsZSB7XG4gICAgZm9udC1zaXplOiAzLjk1OHZ3O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLnRpdGxlIHtcbiAgICBmb250LXNpemU6IDcuNTUydnc7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY1MHB4KSB7XG4gIC50aXRsZSB7XG4gICAgZm9udC1zaXplOiA5LjY2MnZ3O1xuICB9XG59XG5cbi5zaG93LXRhYmxldCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuc2hvdy10YWJsZXQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIC5oaWRlLXRhYmxldCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuLmhlYWRlciB7XG4gIGJhY2tncm91bmQ6ICMwRDcxNjE7XG59XG4uaGVhZGVyX19pbm5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogMTVweCAwIDIzcHggMDtcbn1cbi5oZWFkZXJfX2xvZ28gaW1nIHtcbiAgd2lkdGg6IDEwM3B4O1xuICBoZWlnaHQ6IDQycHg7XG59XG4uaGVhZGVyX19uYXYge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuLmhlYWRlcl9fbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4uaGVhZGVyX19pdGVtIHtcbiAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuLmhlYWRlcl9faXRlbTpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xufVxuLmhlYWRlcl9fbGluayB7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLmJ1cmdlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE5MTlweCkge1xuICAuaGVhZGVyX19pbm5lciB7XG4gICAgcGFkZGluZzogMC43ODF2dyAwIDEuMTk4dncgMDtcbiAgfVxuICAuaGVhZGVyX19sb2dvIGltZyB7XG4gICAgd2lkdGg6IDUuMzY1dnc7XG4gICAgaGVpZ2h0OiAyLjE4OHZ3O1xuICB9XG4gIC5oZWFkZXJfX25hdiB7XG4gICAgbWFyZ2luLXRvcDogMS4wNDJ2dztcbiAgfVxuICAuaGVhZGVyX19pdGVtIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDEuNTYzdnc7XG4gIH1cbiAgLmhlYWRlcl9fbGluayB7XG4gICAgZm9udC1zaXplOiAwLjkzOHZ3O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhlYWRlcl9faW5uZXIge1xuICAgIHBhZGRpbmc6IDEuNjkzdncgMDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiA2LjUxdnc7XG4gICAgaGVpZ2h0OiA2LjUxdnc7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIGJhY2tncm91bmQ6ICNGRkZGRkY7XG4gICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXIgc3BhbiB7XG4gICAgd2lkdGg6IDIuNjA0dnc7XG4gICAgaGVpZ2h0OiAwLjI2dnc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDAuNTIxdnc7XG4gICAgYmFja2dyb3VuZDogIzBENzE2MTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlciBzcGFuOm50aC1jaGlsZCgxKSB7XG4gICAgdG9wOiAyLjQ3NHZ3O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlciBzcGFuOm50aC1jaGlsZCgyKSB7XG4gICAgdG9wOiAzLjEyNXZ3O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlciBzcGFuOm50aC1jaGlsZCgzKSB7XG4gICAgYm90dG9tOiAyLjQ3NHZ3O1xuICB9XG4gIC5oZWFkZXJfX2xvZ28ge1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICB9XG4gIC5oZWFkZXJfX2xvZ28gaW1nIHtcbiAgICB3aWR0aDogMTMuOTMydnc7XG4gICAgaGVpZ2h0OiA1LjcyOXZ3O1xuICB9XG4gIC5oZWFkZXJfX25hdiB7XG4gICAgcGFkZGluZzogMTMuMDIxdnc7XG4gIH1cbiAgLmhlYWRlcl9fbWVudSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBtYXg7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgei1pbmRleDogMTA7XG4gICAgYmFja2dyb3VuZDogI0ZGRkZGRjtcbiAgfVxuICAuaGVhZGVyX19tZW51LmFjdGl2ZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbiAgLmhlYWRlciAubW9iLWNsb3NlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1LjIwOHZ3O1xuICAgIHJpZ2h0OiAyLjYwNHZ3O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB3aWR0aDogMi4zNDR2dztcbiAgICBoZWlnaHQ6IDIuMzQ0dnc7XG4gIH1cbiAgLmhlYWRlciAubW9iLWNsb3NlIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG4gIC5oZWFkZXJfX2xpc3Qge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbiAgLmhlYWRlcl9faXRlbSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiA2LjUxdnc7XG4gIH1cbiAgLmhlYWRlcl9faXRlbTpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG4gIC5oZWFkZXJfX2xpbmsge1xuICAgIGNvbG9yOiAjNDE0MTQxO1xuICAgIGZvbnQtc2l6ZTogMi42MDR2dztcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjUwcHgpIHtcbiAgLmhlYWRlcl9faW5uZXIge1xuICAgIHBhZGRpbmc6IDUuMDcydncgMDtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXIge1xuICAgIHdpZHRoOiA3LjI0NnZ3O1xuICAgIGhlaWdodDogMy4xNHZ3O1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICB9XG4gIC5oZWFkZXIgLmJ1cmdlciBzcGFuIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDAuNzI1dnc7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIGxlZnQ6IDAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXIgc3BhbjpudGgtY2hpbGQoMSkge1xuICAgIHRvcDogMDtcbiAgfVxuICAuaGVhZGVyIC5idXJnZXIgc3BhbjpudGgtY2hpbGQoMikge1xuICAgIHRvcDogMS4yMDh2dztcbiAgfVxuICAuaGVhZGVyIC5idXJnZXIgc3BhbjpudGgtY2hpbGQoMykge1xuICAgIGJvdHRvbTogMDtcbiAgfVxuICAuaGVhZGVyX19sb2dvIHtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgfVxuICAuaGVhZGVyX19sb2dvIGltZyB7XG4gICAgd2lkdGg6IDIyLjIyMnZ3O1xuICAgIGhlaWdodDogOS4xNzl2dztcbiAgfVxuICAuaGVhZGVyX19uYXYge1xuICAgIHBhZGRpbmc6IDI0LjE1NXZ3IDAgMTkuMzI0dncgMDtcbiAgfVxuICAuaGVhZGVyX19tZW51IHtcbiAgICB0b3A6IDIuNDE1dnc7XG4gIH1cbiAgLmhlYWRlciAubW9iLWNsb3NlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1LjMxNHZ3O1xuICAgIHJpZ2h0OiA1LjMxNHZ3O1xuICAgIHdpZHRoOiA0LjgzMXZ3O1xuICAgIGhlaWdodDogNC44MzF2dztcbiAgfVxuICAuaGVhZGVyX19pdGVtIHtcbiAgICBtYXJnaW4tYm90dG9tOiAzLjYyM3Z3O1xuICB9XG4gIC5oZWFkZXJfX2xpbmsge1xuICAgIGZvbnQtc2l6ZTogNC4zNDh2dztcbiAgfVxufVxuLmZvcm0ge1xuICBwYWRkaW5nOiAxMjBweCAwIDEwMHB4IDA7XG59XG4uZm9ybV9fdGl0bGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uZm9ybV9fbGVmdCB7XG4gIHdpZHRoOiA0NTNweDtcbiAgbWFyZ2luLXJpZ2h0OiA1NHB4O1xufVxuLmZvcm1fX2J0biB7XG4gIHBhZGRpbmc6IDE2cHggNDBweDtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgI0ZGRTAyMiAwJSwgI0ZGQzYyMiAxMDAlKTtcbiAgZm9udC1zaXplOiAzMnB4O1xuICBmb250LWZhbWlseTogXCJCZWJhcyBOZXVlXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxMDAlO1xuICBjb2xvcjogI2ZmZjtcbiAgbWFyZ2luLXRvcDogMjVweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3JkZXI6IHVuc2V0O1xuICBib3JkZXItcmFkaXVzOiAxMnB4O1xufVxuLmZvcm1fX2xhYmVsIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogNTAwO1xuICBwYWRkaW5nLWxlZnQ6IDQ3cHg7XG4gIG1hcmdpbi10b3A6IDE0cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xufVxuLmZvcm1fX2xhYmVsIHNwYW4ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIHdpZHRoOiAyOXB4O1xuICBoZWlnaHQ6IDI5cHg7XG4gIGJhY2tncm91bmQ6ICM2OENBQjc7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI0RBREFEQTtcbn1cbi5mb3JtX19sYWJlbCBpbnB1dCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uZm9ybV9fbGFiZWwgaW5wdXQ6Y2hlY2tlZCB+IHNwYW46OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHdpZHRoOiAxOXB4O1xuICBoZWlnaHQ6IDE5cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvY2hlY2staWNvbi5zdmcpO1xuICBiYWNrZ3JvdW5kLXNpemU6IDEwMCU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbn1cbi5mb3JtX19pdGVtIHtcbiAgbWFyZ2luLWJvdHRvbTogMjVweDtcbn1cbi5mb3JtX19pdGVtOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuLmZvcm1fX2l0ZW0gcCB7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgbWFyZ2luLWJvdHRvbTogNnB4O1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG59XG4uZm9ybV9faXRlbSBwIHNwYW4ge1xuICBjb2xvcjogI0U5MTMxMztcbn1cbi5mb3JtX19pdGVtIGlucHV0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI0VGRUZFRjtcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDE5cHggMzBweDtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuLmZvcm1fX2l0ZW0gaW5wdXQ6OnBsYWNlaG9sZGVyIHtcbiAgY29sb3I6ICNCM0IzQjM7XG59XG4uZm9ybV9fcmlnaHQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLmZvcm1fX3RleHQge1xuICB3aWR0aDogNDQwcHg7XG4gIG1hcmdpbi1yaWdodDogNTRweDtcbn1cbi5mb3JtX19pbWcge1xuICB3aWR0aDogMzk5cHg7XG4gIGhlaWdodDogNzExcHg7XG59XG4uZm9ybV9faW1nIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5mb3JtLXdyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW4tdG9wOiA0MHB4O1xufVxuXG4uZ3VhcmFudGVlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjBweDtcbn1cbi5ndWFyYW50ZWUgaW1nIHtcbiAgd2lkdGg6IDM0cHg7XG4gIGhlaWdodDogNDRweDtcbiAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xufVxuLmd1YXJhbnRlZSBwIHtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG59XG5cbi5mb3JtLXRpbWVyIGgzIHtcbiAgZm9udC1zaXplOiAyMnB4O1xuICBmb250LXdlaWdodDogNzAwO1xuICBsaW5lLWhlaWdodDogMjdweDtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5mb3JtLWxpc3Qge1xuICBtYXJnaW4tdG9wOiA0MHB4O1xufVxuLmZvcm0tbGlzdCBoMyB7XG4gIGZvbnQtc2l6ZTogNDJweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1mYW1pbHk6IFwiQmViYXMgTmV1ZVwiO1xuICBsaW5lLWhlaWdodDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cbi5mb3JtLWxpc3QgbGkge1xuICBwYWRkaW5nLWxlZnQ6IDM0cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG4uZm9ybS1saXN0IGxpOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuLmZvcm0tbGlzdCBsaTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgd2lkdGg6IDI0cHg7XG4gIGhlaWdodDogMjRweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2hlcm8tbGlzdC1pY29uLnN2Zyk7XG4gIGJhY2tncm91bmQtc2l6ZTogMTAwJTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xufVxuXG4uY291bnRkb3duIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5yaW5nIHtcbiAgd2lkdGg6IDU1cHg7XG4gIGhlaWdodDogNTVweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBncmlkO1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIHBsYWNlLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5yaW5nIHN2ZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRyYW5zZm9ybTogcm90YXRlKC05MGRlZyk7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4ucmluZyAudHJhY2sge1xuICBzdHJva2U6ICNDQ0NDQ0M7XG4gIGZpbGw6IG5vbmU7XG4gIHN0cm9rZS13aWR0aDogMXB4O1xufVxuXG4ucmluZyAucHJvZ3Jlc3Mge1xuICBzdHJva2U6ICM2OENBQjc7XG4gIGZpbGw6IG5vbmU7XG4gIHN0cm9rZS13aWR0aDogMnB4O1xuICBzdHJva2UtbGluZWNhcDogcm91bmQ7XG4gIHRyYW5zaXRpb246IHN0cm9rZS1kYXNob2Zmc2V0IDAuMjVzIGxpbmVhcjtcbn1cblxuLnZhbHVlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG59XG5cbi5sYWJlbCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAtMjBweDtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBvcGFjaXR5OiAwLjg7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE5MTlweCkge1xuICAuZm9ybSB7XG4gICAgcGFkZGluZzogNi4yNXZ3IDAgNS4yMDh2dyAwO1xuICB9XG4gIC5mb3JtX19sZWZ0IHtcbiAgICB3aWR0aDogMjMuNTk0dnc7XG4gICAgbWFyZ2luLXJpZ2h0OiAyLjgxM3Z3O1xuICB9XG4gIC5mb3JtX19idG4ge1xuICAgIHBhZGRpbmc6IDAuODMzdncgMi4wODN2dztcbiAgICBmb250LXNpemU6IDEuNjY3dnc7XG4gICAgbWFyZ2luLXRvcDogMS4zMDJ2dztcbiAgICBib3JkZXItcmFkaXVzOiAwLjYyNXZ3O1xuICB9XG4gIC5mb3JtX19sYWJlbCB7XG4gICAgZm9udC1zaXplOiAwLjgzM3Z3O1xuICAgIHBhZGRpbmctbGVmdDogMi40NDh2dztcbiAgICBtYXJnaW4tdG9wOiAwLjcyOXZ3O1xuICB9XG4gIC5mb3JtX19sYWJlbCBzcGFuIHtcbiAgICB3aWR0aDogMS41MXZ3O1xuICAgIGhlaWdodDogMS41MXZ3O1xuICAgIGJvcmRlci1yYWRpdXM6IDAuMjA4dnc7XG4gICAgYm9yZGVyOiAwLjA1MnZ3IHNvbGlkICNEQURBREE7XG4gIH1cbiAgLmZvcm1fX2xhYmVsIGlucHV0IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5mb3JtX19sYWJlbCBpbnB1dDpjaGVja2VkIH4gc3Bhbjo6YmVmb3JlIHtcbiAgICB3aWR0aDogMC45OXZ3O1xuICAgIGhlaWdodDogMC45OXZ3O1xuICB9XG4gIC5mb3JtX19pdGVtIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjMwMnZ3O1xuICB9XG4gIC5mb3JtX19pdGVtIHAge1xuICAgIGZvbnQtc2l6ZTogMC45Mzh2dztcbiAgICBtYXJnaW4tYm90dG9tOiAwLjMxM3Z3O1xuICB9XG4gIC5mb3JtX19pdGVtIGlucHV0IHtcbiAgICBib3JkZXI6IDAuMDUydncgc29saWQgI0VGRUZFRjtcbiAgICBib3JkZXItcmFkaXVzOiAwLjYyNXZ3O1xuICAgIHBhZGRpbmc6IDAuOTl2dyAxLjU2M3Z3O1xuICAgIGZvbnQtc2l6ZTogMC45Mzh2dztcbiAgfVxuICAuZm9ybV9fdGV4dCB7XG4gICAgd2lkdGg6IDIyLjkxN3Z3O1xuICAgIG1hcmdpbi1yaWdodDogMi44MTN2dztcbiAgfVxuICAuZm9ybV9faW1nIHtcbiAgICB3aWR0aDogMjAuNzgxdnc7XG4gICAgaGVpZ2h0OiAzNy4wMzF2dztcbiAgfVxuICAuZm9ybS13cmFwcGVyIHtcbiAgICBtYXJnaW4tdG9wOiAyLjA4M3Z3O1xuICB9XG4gIC5ndWFyYW50ZWUge1xuICAgIG1hcmdpbi10b3A6IDEuMDQydnc7XG4gIH1cbiAgLmd1YXJhbnRlZSBpbWcge1xuICAgIHdpZHRoOiAxLjc3MXZ3O1xuICAgIGhlaWdodDogMi4yOTJ2dztcbiAgICBtYXJnaW4tcmlnaHQ6IDAuODMzdnc7XG4gIH1cbiAgLmd1YXJhbnRlZSBwIHtcbiAgICBmb250LXNpemU6IDAuOTM4dnc7XG4gIH1cbiAgLmZvcm0tdGltZXIgaDMge1xuICAgIGZvbnQtc2l6ZTogMS4xNDZ2dztcbiAgICBsaW5lLWhlaWdodDogMS40MDZ2dztcbiAgICBtYXJnaW4tYm90dG9tOiAxLjU2M3Z3O1xuICB9XG4gIC5mb3JtLWxpc3Qge1xuICAgIG1hcmdpbi10b3A6IDIuMDgzdnc7XG4gIH1cbiAgLmZvcm0tbGlzdCBoMyB7XG4gICAgZm9udC1zaXplOiAyLjE4OHZ3O1xuICAgIG1hcmdpbi1ib3R0b206IDEuMDQydnc7XG4gIH1cbiAgLmZvcm0tbGlzdCBsaSB7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjc3MXZ3O1xuICAgIGZvbnQtc2l6ZTogMC45Mzh2dztcbiAgICBtYXJnaW4tYm90dG9tOiAxLjA0MnZ3O1xuICB9XG4gIC5mb3JtLWxpc3QgbGk6OmJlZm9yZSB7XG4gICAgd2lkdGg6IDEuMjV2dztcbiAgICBoZWlnaHQ6IDEuMjV2dztcbiAgfVxuICAucmluZyB7XG4gICAgd2lkdGg6IDIuODY1dnc7XG4gICAgaGVpZ2h0OiAyLjg2NXZ3O1xuICAgIG1hcmdpbi1yaWdodDogMC41MjF2dztcbiAgfVxuICAucmluZyAudHJhY2sge1xuICAgIHN0cm9rZS13aWR0aDogMC4wNTJ2dztcbiAgfVxuICAucmluZyAucHJvZ3Jlc3Mge1xuICAgIHN0cm9rZS13aWR0aDogMC4xMDR2dztcbiAgfVxuICAudmFsdWUge1xuICAgIGZvbnQtc2l6ZTogMS4yNXZ3O1xuICB9XG4gIC5sYWJlbCB7XG4gICAgdG9wOiAtMS4wNDJ2dztcbiAgICBmb250LXNpemU6IDAuNTIxdnc7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuZm9ybSB7XG4gICAgcGFkZGluZzogMTAwcHggMCA4MHB4IDA7XG4gIH1cbiAgLmZvcm1fX3JpZ2h0IHtcbiAgICBtYXJnaW4tdG9wOiAyNXB4O1xuICB9XG4gIC5mb3JtX19sZWZ0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gIH1cbiAgLmZvcm1fX2J0biB7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBmb250LXNpemU6IDQwcHg7XG4gICAgbWFyZ2luLXRvcDogMjVweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICB9XG4gIC5mb3JtX19sYWJlbCB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIHBhZGRpbmctbGVmdDogNDdweDtcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICB9XG4gIC5mb3JtX19sYWJlbCBzcGFuIHtcbiAgICB3aWR0aDogMjlweDtcbiAgICBoZWlnaHQ6IDI5cHg7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNEQURBREE7XG4gIH1cbiAgLmZvcm1fX2xhYmVsIGlucHV0IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5mb3JtX19sYWJlbCBpbnB1dDpjaGVja2VkIH4gc3Bhbjo6YmVmb3JlIHtcbiAgICB3aWR0aDogMTlweDtcbiAgICBoZWlnaHQ6IDE5cHg7XG4gIH1cbiAgLmZvcm1fX2l0ZW0ge1xuICAgIG1hcmdpbi1ib3R0b206IDI1cHg7XG4gIH1cbiAgLmZvcm1fX2l0ZW0gcCB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDZweDtcbiAgfVxuICAuZm9ybV9faXRlbSBpbnB1dCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI0VGRUZFRjtcbiAgICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICAgIHBhZGRpbmc6IDE5cHggMzBweDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gIH1cbiAgLmZvcm1fX3RleHQge1xuICAgIHdpZHRoOiA0NDBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDMxcHg7XG4gIH1cbiAgLmZvcm1fX2ltZyB7XG4gICAgd2lkdGg6IDI1N3B4O1xuICAgIGhlaWdodDogNTM2cHg7XG4gIH1cbiAgLmZvcm0td3JhcHBlciB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBtYXJnaW4tdG9wOiA0MHB4O1xuICB9XG4gIC5ndWFyYW50ZWUge1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gIH1cbiAgLmd1YXJhbnRlZSBpbWcge1xuICAgIHdpZHRoOiAzNHB4O1xuICAgIGhlaWdodDogNDRweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XG4gIH1cbiAgLmd1YXJhbnRlZSBwIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gIH1cbiAgLmZvcm0tdGltZXIge1xuICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gIH1cbiAgLmZvcm0tdGltZXIgaDMge1xuICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICBsaW5lLWhlaWdodDogMjdweDtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICB9XG4gIC5mb3JtLWxpc3Qge1xuICAgIG1hcmdpbi10b3A6IDE2cHg7XG4gIH1cbiAgLmZvcm0tbGlzdCBoMyB7XG4gICAgZm9udC1zaXplOiA0MnB4O1xuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gIH1cbiAgLmZvcm0tbGlzdCBsaSB7XG4gICAgcGFkZGluZy1sZWZ0OiAzNHB4O1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG4gIC5mb3JtLWxpc3QgbGk6OmJlZm9yZSB7XG4gICAgd2lkdGg6IDI0cHg7XG4gICAgaGVpZ2h0OiAyNHB4O1xuICB9XG4gIC5yaW5nIHtcbiAgICB3aWR0aDogNTVweDtcbiAgICBoZWlnaHQ6IDU1cHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICB9XG4gIC5yaW5nIC50cmFjayB7XG4gICAgc3Ryb2tlLXdpZHRoOiAxcHg7XG4gIH1cbiAgLnJpbmcgLnByb2dyZXNzIHtcbiAgICBzdHJva2Utd2lkdGg6IDJweDtcbiAgfVxuICAudmFsdWUge1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgfVxuICAubGFiZWwge1xuICAgIHRvcDogLTIwcHg7XG4gICAgZm9udC1zaXplOiAxMHB4O1xuICB9XG59XG4uc2hvdy1tb2JpbGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2NTBweCkge1xuICAuZm9ybSB7XG4gICAgcGFkZGluZzogNTBweCAwIDYwcHggMDtcbiAgfVxuICAuZm9ybS10b3Age1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxuICAuZm9ybV9fdGl0bGUge1xuICAgIG9yZGVyOiAyO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgbWFyZ2luLXRvcDogNTBweDtcbiAgfVxuICAuZm9ybV9fdGl0bGUgYnIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmZvcm1fX3RpbWVyIHtcbiAgICBvcmRlcjogMTtcbiAgfVxuICAuZm9ybV9fcmlnaHQge1xuICAgIG1hcmdpbi10b3A6IDI1cHg7XG4gIH1cbiAgLmZvcm1fX2xlZnQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgfVxuICAuZm9ybV9fYnRuIHtcbiAgICBwYWRkaW5nOiAyMHB4IDI1cHg7XG4gICAgZm9udC1zaXplOiAzMHB4O1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgfVxuICAuZm9ybV9fbGFiZWwge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDQ3cHg7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgfVxuICAuZm9ybV9fbGFiZWwgc3BhbiB7XG4gICAgd2lkdGg6IDI5cHg7XG4gICAgaGVpZ2h0OiAyOXB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjREFEQURBO1xuICB9XG4gIC5mb3JtX19sYWJlbCBpbnB1dCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuZm9ybV9fbGFiZWwgaW5wdXQ6Y2hlY2tlZCB+IHNwYW46OmJlZm9yZSB7XG4gICAgd2lkdGg6IDE5cHg7XG4gICAgaGVpZ2h0OiAxOXB4O1xuICB9XG4gIC5mb3JtX19pdGVtIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB9XG4gIC5mb3JtX19pdGVtIHAge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBtYXJnaW4tYm90dG9tOiA2cHg7XG4gIH1cbiAgLmZvcm1fX2l0ZW0gaW5wdXQge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNFRkVGRUY7XG4gICAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgICBwYWRkaW5nOiAxOXB4IDMwcHg7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICB9XG4gIC5mb3JtX190ZXh0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuZm9ybV9faW1nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gIH1cbiAgLmZvcm0td3JhcHBlciB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBtYXJnaW4tdG9wOiA4MHB4O1xuICB9XG4gIC5ndWFyYW50ZWUge1xuICAgIG1hcmdpbi10b3A6IDE0cHg7XG4gIH1cbiAgLmd1YXJhbnRlZSBpbWcge1xuICAgIHdpZHRoOiAzNHB4O1xuICAgIGhlaWdodDogNDRweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XG4gIH1cbiAgLmd1YXJhbnRlZSBwIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gIH1cbiAgLmZvcm0tdGltZXIge1xuICAgIG1hcmdpbi10b3A6IDA7XG4gIH1cbiAgLmZvcm0tdGltZXIgaDMge1xuICAgIGZvbnQtc2l6ZTogMTdweDtcbiAgICBsaW5lLWhlaWdodDogMjFweDtcbiAgICBtYXJnaW4tYm90dG9tOiAyM3B4O1xuICB9XG4gIC5mb3JtLWxpc3Qge1xuICAgIG1hcmdpbi10b3A6IDI1cHg7XG4gIH1cbiAgLmZvcm0tbGlzdCBoMyB7XG4gICAgZm9udC1zaXplOiAzMnB4O1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIH1cbiAgLmZvcm0tbGlzdCBsaSB7XG4gICAgcGFkZGluZy1sZWZ0OiAzNHB4O1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB9XG4gIC5mb3JtLWxpc3QgbGk6OmJlZm9yZSB7XG4gICAgd2lkdGg6IDI0cHg7XG4gICAgaGVpZ2h0OiAyNHB4O1xuICB9XG4gIC5yaW5nIHtcbiAgICB3aWR0aDogNDNweDtcbiAgICBoZWlnaHQ6IDQzcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiA3cHg7XG4gIH1cbiAgLnJpbmcgLnRyYWNrIHtcbiAgICBzdHJva2Utd2lkdGg6IDFweDtcbiAgfVxuICAucmluZyAucHJvZ3Jlc3Mge1xuICAgIHN0cm9rZS13aWR0aDogMnB4O1xuICB9XG4gIC52YWx1ZSB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICB9XG4gIC5sYWJlbCB7XG4gICAgdG9wOiAtMjBweDtcbiAgICBmb250LXNpemU6IDhweDtcbiAgfVxuICAuc2hvdy1tb2JpbGUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIC5oaWRlLW1vYmlsZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuLmZvb3RlciB7XG4gIGJhY2tncm91bmQ6ICMzMTMxMzE7XG4gIHBhZGRpbmctdG9wOiA0MHB4O1xufVxuLmZvb3Rlcl9fbG9nbyB7XG4gIHdpZHRoOiAxMjlweDtcbiAgaGVpZ2h0OiA0M3B4O1xuICBtYXJnaW4tcmlnaHQ6IDQxcHg7XG59XG4uZm9vdGVyX19sb2dvIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG4uZm9vdGVyX19tZW51IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5mb290ZXJfX21lbnUuc2hvdy10YWJsZXQge1xuICBkaXNwbGF5OiBub25lO1xufVxuLmZvb3Rlcl9fbWVudSBsaSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbi1yaWdodDogMzBweDtcbn1cbi5mb290ZXJfX21lbnUgbGk6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cbi5mb290ZXJfX21lbnUgbGkgYSB7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXNpemU6IDE4cHg7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uZm9vdGVyLXRvcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5mb290ZXItcHJpdmFjeSB7XG4gIGJhY2tncm91bmQ6ICMyOTI5Mjk7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG4gIHBhZGRpbmc6IDExcHggMDtcbiAgY29sb3I6ICM5RTlFOUU7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTkxOXB4KSB7XG4gIC5mb290ZXIge1xuICAgIHBhZGRpbmctdG9wOiAyLjA4M3Z3O1xuICB9XG4gIC5mb290ZXJfX2xvZ28ge1xuICAgIHdpZHRoOiA2LjcxOXZ3O1xuICAgIGhlaWdodDogMi4yNHZ3O1xuICAgIG1hcmdpbi1yaWdodDogMi4xMzV2dztcbiAgfVxuICAuZm9vdGVyX19tZW51IGxpIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDEuNTYzdnc7XG4gIH1cbiAgLmZvb3Rlcl9fbWVudSBsaSBhIHtcbiAgICBmb250LXNpemU6IDAuOTM4dnc7XG4gIH1cbiAgLmZvb3Rlci1wcml2YWN5IHtcbiAgICBtYXJnaW4tdG9wOiAxLjU2M3Z3O1xuICAgIHBhZGRpbmc6IDAuNTczdncgMDtcbiAgICBmb250LXNpemU6IDAuODMzdnc7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuZm9vdGVyIHtcbiAgICBwYWRkaW5nLXRvcDogNS4yMDh2dztcbiAgfVxuICAuZm9vdGVyX19sb2dvIHtcbiAgICB3aWR0aDogMjguMjU1dnc7XG4gICAgaGVpZ2h0OiAxMS41ODl2dztcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICB9XG4gIC5mb290ZXJfX21lbnUge1xuICAgIG1hcmdpbi10b3A6IDYuNTF2dztcbiAgfVxuICAuZm9vdGVyX19tZW51LnNob3ctdGFibGV0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIH1cbiAgLmZvb3Rlcl9fbWVudSBsaSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDUuMjA4dnc7XG4gIH1cbiAgLmZvb3Rlcl9fbWVudSBsaTpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG4gIC5mb290ZXJfX21lbnUgbGkgYSB7XG4gICAgZm9udC1zaXplOiAyLjYwNHZ3O1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIH1cbiAgLmZvb3Rlci1wcml2YWN5IHtcbiAgICBtYXJnaW4tdG9wOiA3LjgxM3Z3O1xuICAgIHBhZGRpbmc6IDEuNDMydncgMDtcbiAgICBmb250LXNpemU6IDIuMDgzdnc7XG4gIH1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY1MHB4KSB7XG4gIC5mb290ZXIge1xuICAgIHBhZGRpbmctdG9wOiA3LjI0NnZ3O1xuICB9XG4gIC5mb290ZXJfX2xvZ28ge1xuICAgIHdpZHRoOiAzMS4xNTl2dztcbiAgICBoZWlnaHQ6IDEyLjgwMnZ3O1xuICB9XG4gIC5mb290ZXJfX21lbnUge1xuICAgIG1hcmdpbi10b3A6IDguNjk2dnc7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG4gIC5mb290ZXJfX21lbnUgdWwge1xuICAgIG1hcmdpbi1ib3R0b206IDIuNDE1dnc7XG4gIH1cbiAgLmZvb3Rlcl9fbWVudSBsaSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDIuNDE1dnc7XG4gIH1cbiAgLmZvb3Rlcl9fbWVudSBsaSBhIHtcbiAgICBmb250LXNpemU6IDQuMzQ4dnc7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgfVxuICAuZm9vdGVyLXByaXZhY3kge1xuICAgIG1hcmdpbi10b3A6IDExLjExMXZ3O1xuICAgIHBhZGRpbmc6IDIuNjU3dncgMDtcbiAgICBmb250LXNpemU6IDMuODY1dnc7XG4gIH1cbn1cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuLmZvcm1fX2xhYmVsIGlucHV0OmNoZWNrZWQgfiBzcGFuOjpiZWZvcmV7YmFja2dyb3VuZC1pbWFnZTp1cmwoLi4vaW1nL2NoZWNrLWljb24uc3ZnKX1cbi5mb3JtLWxpc3QgbGk6OmJlZm9yZXtiYWNrZ3JvdW5kLWltYWdlOnVybCguLi9pbWcvaGVyby1saXN0LWljb24uc3ZnKX1cbn1cblxuIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE5MTlweCl7XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbn1cblxuIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjRweCl7XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbn1cblxuIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY1MHB4KXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuIiwiLmhlYWRlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMEQ3MTYxO1xyXG4gICAgLy8gLmhlYWRlcl9faW5uZXJcclxuXHJcbiAgICAmX19pbm5lciB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBwYWRkaW5nOiAxNXB4IDAgMjNweCAwO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIC5oZWFkZXJfX2xvZ29cclxuXHJcbiAgICAmX19sb2dvIHtcclxuICAgICAgICAmIGltZ3tcclxuICAgICAgICAgICAgd2lkdGg6IDEwM3B4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDQycHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIC5oZWFkZXJfX21lbnVcclxuXHJcbiAgICAmX19tZW51IHtcclxuICAgIH1cclxuXHJcbiAgICAvLyAuaGVhZGVyX19uYXZcclxuXHJcbiAgICAmX19uYXYge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gLmhlYWRlcl9fbGlzdFxyXG5cclxuICAgICZfX2xpc3Qge1xyXG4gICAgICAgIFxyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIH1cclxuXHJcbiAgICAvLyAuaGVhZGVyX19pdGVtXHJcblxyXG4gICAgJl9faXRlbSB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xyXG4gICAgICAgIGxpc3Qtc3R5bGU6bm9uZTtcclxuXHJcbiAgICAgICAgJjpsYXN0LWNoaWxke1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIC5oZWFkZXJfX2xpbmtcclxuXHJcbiAgICAmX19saW5rIHtcclxuICAgICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG59XHJcbi5idXJnZXIge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjE5MTlweCkge1xyXG4gIC5oZWFkZXIge1xyXG4gICAgJl9faW5uZXIge1xyXG4gICAgICBwYWRkaW5nOiAwLjc4MXZ3IDAgMS4xOTh2dyAwO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIC5oZWFkZXJfX2xvZ29cclxuICAgICZfX2xvZ28ge1xyXG4gICAgICAmIGltZyB7XHJcbiAgICAgICAgd2lkdGg6IDUuMzY1dnc7XHJcbiAgICAgICAgaGVpZ2h0OiAyLjE4OHZ3O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gLmhlYWRlcl9fbWVudVxyXG4gICAgJl9fbmF2IHtcclxuICAgICAgbWFyZ2luLXRvcDogMS4wNDJ2dztcclxuICAgIH1cclxuXHJcbiAgICAvLyAuaGVhZGVyX19saXN0XHJcbiAgICAmX19saXN0IHt9XHJcblxyXG4gICAgLy8gLmhlYWRlcl9faXRlbVxyXG4gICAgJl9faXRlbSB7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogMS41NjN2dztcclxuICAgIH1cclxuXHJcbiAgICAvLyAuaGVhZGVyX19saW5rXHJcbiAgICAmX19saW5rIHtcclxuICAgICAgZm9udC1zaXplOiAwLjkzOHZ3O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjEwMjRweCkge1xyXG4gIC5oZWFkZXIge1xyXG4gICAgJl9faW5uZXIge1xyXG4gICAgICBwYWRkaW5nOiAxLjY5M3Z3IDA7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogc3RhcnQ7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIH1cclxuICAgIC5idXJnZXIge1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgd2lkdGg6IDYuNTEwdnc7XHJcbiAgICAgIGhlaWdodDogNi41MTB2dztcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgICAgYmFja2dyb3VuZDogI0ZGRkZGRjtcclxuICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcclxuICAgICAgJiBzcGFuIHtcclxuICAgICAgICB3aWR0aDogMi42MDR2dztcclxuICAgICAgICBoZWlnaHQ6IDAuMjYwdnc7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDAuNTIxdnc7XHJcbiAgICAgICAgYmFja2dyb3VuZDogIzBENzE2MTtcclxuICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xyXG4gICAgICAgICY6bnRoLWNoaWxkKDEpIHtcclxuICAgICAgICAgIHRvcDogMi40NzR2dztcclxuICAgICAgICB9XHJcbiAgICAgICAgJjpudGgtY2hpbGQoMikge1xyXG4gICAgICAgICAgdG9wOiAzLjEyNXZ3O1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOm50aC1jaGlsZCgzKSB7XHJcbiAgICAgICAgICBib3R0b206IDIuNDc0dnc7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmX19sb2dvIHtcclxuICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICAgICYgaW1nIHtcclxuICAgICAgICB3aWR0aDogMTMuOTMydnc7XHJcbiAgICAgICAgaGVpZ2h0OiA1LjcyOXZ3O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmX19uYXYge1xyXG4gICAgICBwYWRkaW5nOiAxMy4wMjF2dztcclxuICAgIH1cclxuICAgICZfX21lbnUge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IG1heDtcclxuICAgICAgdG9wOiAwO1xyXG4gICAgICBsZWZ0OiAwO1xyXG4gICAgICB6LWluZGV4OiAxMDtcclxuICAgICAgYmFja2dyb3VuZDogI0ZGRkZGRjtcclxuICAgICAgJi5hY3RpdmUge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAubW9iLWNsb3NlIHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDUuMjA4dnc7XHJcbiAgICAgIHJpZ2h0OiAyLjYwNHZ3O1xyXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgIHdpZHRoOiAyLjM0NHZ3O1xyXG4gICAgICBoZWlnaHQ6IDIuMzQ0dnc7XHJcbiAgICAgICYgaW1nIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICZfX2xpc3Qge1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG4gICAgJl9faXRlbSB7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiA2LjUxMHZ3O1xyXG4gICAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICZfX2xpbmsge1xyXG4gICAgICBjb2xvcjogIzQxNDE0MTtcclxuICAgICAgZm9udC1zaXplOiAyLjYwNHZ3O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjY1MHB4KSB7XHJcbiAgLmhlYWRlciB7XHJcbiAgICAmX19pbm5lciB7XHJcbiAgICAgIHBhZGRpbmc6IDUuMDcydncgMDtcclxuICAgIH1cclxuICAgIC5idXJnZXIge1xyXG4gICAgICB3aWR0aDogNy4yNDZ2dztcclxuICAgICAgaGVpZ2h0OiAzLjE0MHZ3O1xyXG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgICAgJiBzcGFuIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDAuNzI1dnc7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgICAgIGxlZnQ6IDAlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcclxuICAgICAgICAmOm50aC1jaGlsZCgxKSB7XHJcbiAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICY6bnRoLWNoaWxkKDIpIHtcclxuICAgICAgICAgIHRvcDogMS4yMDh2dztcclxuICAgICAgICB9XHJcbiAgICAgICAgJjpudGgtY2hpbGQoMykge1xyXG4gICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9fbG9nbyB7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgICAmIGltZyB7XHJcbiAgICAgICAgd2lkdGg6IDIyLjIyMnZ3O1xyXG4gICAgICAgIGhlaWdodDogOS4xNzl2dztcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9fbmF2IHtcclxuICAgICAgcGFkZGluZzogMjQuMTU1dncgMCAxOS4zMjR2dyAwO1xyXG4gICAgfVxyXG4gICAgJl9fbWVudSB7XHJcbiAgICAgIHRvcDogMi40MTV2dztcclxuICAgIH1cclxuICAgIC5tb2ItY2xvc2Uge1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHRvcDogNS4zMTR2dztcclxuICAgICAgcmlnaHQ6IDUuMzE0dnc7XHJcbiAgICAgIHdpZHRoOiA0LjgzMXZ3O1xyXG4gICAgICBoZWlnaHQ6IDQuODMxdnc7XHJcbiAgICB9XHJcbiAgICAmX19pdGVtIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMy42MjN2dztcclxuICAgIH1cclxuICAgICZfX2xpbmsge1xyXG4gICAgICBmb250LXNpemU6IDQuMzQ4dnc7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4iLCIuZm9ybSB7XHJcbiAgICBcclxuICAgIHBhZGRpbmc6IDEyMHB4IDAgMTAwcHggMDtcclxuICAgIC8vIC5mb3JtX19pbm5lclxyXG5cclxuICAgICZfX2lubmVyIHtcclxuICAgICAgICAvLyBkaXNwbGF5OiBmbGV4O1xyXG4gICAgfVxyXG5cclxuICAgIC8vIC5mb3JtX190aXRsZVxyXG5cclxuICAgICZfX3RpdGxlIHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gLmZvcm1fX2xlZnRcclxuXHJcbiAgICAmX19sZWZ0IHtcclxuICAgICAgICB3aWR0aDogNDUzcHg7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA1NHB4O1xyXG4gICAgfVxyXG4gICAgJl9fYnRue1xyXG4gICAgICAgIHBhZGRpbmc6IDE2cHggNDBweDtcclxuICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjRkZFMDIyIDAlLCAjRkZDNjIyIDEwMCUpO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMzJweDtcclxuICAgICAgICBmb250LWZhbWlseTogXCJCZWJhcyBOZXVlXCI7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMTAwJTtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICBtYXJnaW4tdG9wOiAyNXB4O1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICBib3JkZXI6IHVuc2V0O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDEycHg7XHJcbiAgICB9XHJcbiAgICAvLyAuZm9ybV9faXRlbVxyXG4gICAgJl9fbGFiZWx7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA0N3B4O1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDE0cHg7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xyXG4gICAgICAgICYgc3BhbntcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG4gICAgICAgICAgICB3aWR0aDogMjlweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAyOXB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjNjhDQUI3O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNEQURBREE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYgaW5wdXR7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICAgICY6Y2hlY2tlZCB+IHNwYW46OmJlZm9yZXtcclxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTlweDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTlweDtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1nL2NoZWNrLWljb24uc3ZnKTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogMTAwJTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICAmX19pdGVtIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xyXG4gICAgICAgICY6bGFzdC1jaGlsZHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJiBwe1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDZweDtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xyXG4gICAgICAgICAgICAmIHNwYW57XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogI0U5MTMxMztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmIGlucHV0e1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjRUZFRkVGO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMnB4O1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgcGFkZGluZzogMTlweCAzMHB4O1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICAgICAgICAgICY6OnBsYWNlaG9sZGVye1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICNCM0IzQjM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gLmZvcm1fX3JpZ2h0XHJcblxyXG4gICAgJl9fcmlnaHQge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIH1cclxuXHJcbiAgICAvLyAuZm9ybV9fdGV4dFxyXG5cclxuICAgICZfX3RleHQge1xyXG4gICAgICAgIHdpZHRoOiA0NDBweDtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDU0cHg7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gLmZvcm1fX2ltZ1xyXG5cclxuICAgICZfX2ltZyB7XHJcbiAgICAgICAgd2lkdGg6IDM5OXB4O1xyXG4gICAgICAgIGhlaWdodDogNzExcHg7XHJcbiAgICAgICAgJiBpbWd7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uZm9ybS13cmFwcGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBtYXJnaW4tdG9wOiA0MHB4O1xyXG5cclxufVxyXG4uZ3VhcmFudGVlIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgICYgaW1ne1xyXG4gICAgICAgIHdpZHRoOiAzNHB4O1xyXG4gICAgICAgIGhlaWdodDogNDRweDtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XHJcbiAgICB9XHJcbiAgICAmIHB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xyXG4gICAgfVxyXG59XHJcbi5mb3JtLXRpbWVyIHtcclxuICAgICYgaDN7XHJcbiAgICAgICAgZm9udC1zaXplOiAyMnB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDI3cHg7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG59XHJcblxyXG4uZm9ybS1saXN0IHtcclxuICAgIG1hcmdpbi10b3A6IDQwcHg7XHJcbiAgICAmIGgze1xyXG4gICAgICAgIGZvbnQtc2l6ZTogNDJweDtcclxuICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIkJlYmFzIE5ldWVcIjtcclxuICAgICAgICBsaW5lLWhlaWdodDogMTAwJTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgfVxyXG4gICAgJiBsaXtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDM0cHg7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgICAgICY6bGFzdC1jaGlsZHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJjo6YmVmb3Jle1xyXG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICB3aWR0aDogMjRweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAyNHB4O1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvaGVyby1saXN0LWljb24uc3ZnKTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiAxMDAlO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuLmNvdW50ZG93biB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4ucmluZyB7XHJcbiAgICB3aWR0aDogNTVweDtcclxuICAgIGhlaWdodDogNTVweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICBwbGFjZS1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4ucmluZyBzdmcge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xyXG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XHJcbn1cclxuXHJcbi5yaW5nIC50cmFjayB7XHJcbiAgICBzdHJva2U6ICNDQ0NDQ0M7XHJcbiAgICBmaWxsOiBub25lO1xyXG4gICAgc3Ryb2tlLXdpZHRoOiAxcHhcclxufVxyXG5cclxuLnJpbmcgLnByb2dyZXNzIHtcclxuICAgIHN0cm9rZTogIzY4Q0FCNztcclxuICAgIGZpbGw6IG5vbmU7XHJcbiAgICBzdHJva2Utd2lkdGg6IDJweDtcclxuICAgIHN0cm9rZS1saW5lY2FwOiByb3VuZDtcclxuICAgIHRyYW5zaXRpb246IHN0cm9rZS1kYXNob2Zmc2V0IC4yNXMgbGluZWFyXHJcbn1cclxuXHJcbi52YWx1ZSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcclxuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcblxyXG59XHJcblxyXG4ubGFiZWwge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAtMjBweDtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogMTBweDtcclxuICAgIG9wYWNpdHk6IC44O1xyXG59XHJcblxyXG5cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE5MTlweCkge1xyXG4gICAgLmZvcm0ge1xyXG4gICAgICAgIHBhZGRpbmc6IDYuMjUwdncgMCA1LjIwOHZ3IDA7XHJcblxyXG4gICAgICAgICZfX2xlZnQge1xyXG4gICAgICAgICAgICB3aWR0aDogMjMuNTk0dnc7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMi44MTN2dztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2J0biB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDAuODMzdncgMi4wODN2dztcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjY2N3Z3O1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxLjMwMnZ3O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwLjYyNXZ3O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fbGFiZWwge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDAuODMzdnc7XHJcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMi40NDh2dztcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMC43Mjl2dztcclxuXHJcbiAgICAgICAgICAgICYgc3BhbiB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMS41MTB2dztcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMS41MTB2dztcclxuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDAuMjA4dnc7XHJcbiAgICAgICAgICAgICAgICBib3JkZXI6IDAuMDUydncgc29saWQgI0RBREFEQTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJiBpbnB1dCB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG5cclxuICAgICAgICAgICAgICAgICY6Y2hlY2tlZH5zcGFuOjpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAwLjk5MHZ3O1xyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMC45OTB2dztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faXRlbSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEuMzAydnc7XHJcblxyXG4gICAgICAgICAgICAmIHAge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAwLjkzOHZ3O1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMC4zMTN2dztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJiBpbnB1dCB7XHJcbiAgICAgICAgICAgICAgICBib3JkZXI6IDAuMDUydncgc29saWQgI0VGRUZFRjtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDAuNjI1dnc7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwLjk5MHZ3IDEuNTYzdnc7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDAuOTM4dnc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICB3aWR0aDogMjIuOTE3dnc7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMi44MTN2dztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2ltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAyMC43ODF2dztcclxuICAgICAgICAgICAgaGVpZ2h0OiAzNy4wMzF2dztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmZvcm0td3JhcHBlciB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMi4wODN2dztcclxuICAgIH1cclxuXHJcbiAgICAuZ3VhcmFudGVlIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxLjA0MnZ3O1xyXG5cclxuICAgICAgICAmIGltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxLjc3MXZ3O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDIuMjkydnc7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMC44MzN2dztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYgcCB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMC45Mzh2dztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmZvcm0tdGltZXIge1xyXG4gICAgICAgICYgaDMge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMTQ2dnc7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQwNnZ3O1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxLjU2M3Z3O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuZm9ybS1saXN0IHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAyLjA4M3Z3O1xyXG5cclxuICAgICAgICAmIGgzIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyLjE4OHZ3O1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxLjA0MnZ3O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJiBsaSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMS43NzF2dztcclxuICAgICAgICAgICAgZm9udC1zaXplOiAwLjkzOHZ3O1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxLjA0MnZ3O1xyXG5cclxuICAgICAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxLjI1MHZ3O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxLjI1MHZ3O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5yaW5nIHtcclxuICAgICAgICB3aWR0aDogMi44NjV2dztcclxuICAgICAgICBoZWlnaHQ6IDIuODY1dnc7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwLjUyMXZ3O1xyXG4gICAgfVxyXG5cclxuICAgIC5yaW5nIC50cmFjayB7XHJcbiAgICAgICAgc3Ryb2tlLXdpZHRoOiAwLjA1MnZ3O1xyXG4gICAgfVxyXG5cclxuICAgIC5yaW5nIC5wcm9ncmVzcyB7XHJcbiAgICAgICAgc3Ryb2tlLXdpZHRoOiAwLjEwNHZ3O1xyXG4gICAgfVxyXG5cclxuICAgIC52YWx1ZSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjI1MHZ3O1xyXG4gICAgfVxyXG5cclxuICAgIC5sYWJlbCB7XHJcbiAgICAgICAgdG9wOiAtMS4wNDJ2dztcclxuICAgICAgICBmb250LXNpemU6IDAuNTIxdnc7XHJcbiAgICB9XHJcbn1cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAuZm9ybSB7XHJcbiAgICAgICAgcGFkZGluZzogMTAwcHggMCA4MHB4IDA7XHJcbiAgICAgICAgJl9fcmlnaHR7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDI1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICZfX2xlZnQge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fYnRuIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMjBweDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNDBweDtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMjVweDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTJweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2xhYmVsIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDQ3cHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcblxyXG4gICAgICAgICAgICAmIHNwYW4ge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDI5cHg7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDI5cHg7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjREFEQURBO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmIGlucHV0IHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcblxyXG4gICAgICAgICAgICAgICAgJjpjaGVja2VkfnNwYW46OmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDE5cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxOXB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19pdGVtIHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjVweDtcclxuXHJcbiAgICAgICAgICAgICYgcCB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA2cHg7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYgaW5wdXQge1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI0VGRUZFRjtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEycHg7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxOXB4IDMwcHg7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICB3aWR0aDogNDQwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMzFweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2ltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAyNTdweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA1MzZweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmZvcm0td3JhcHBlciB7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBtYXJnaW4tdG9wOiA0MHB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5ndWFyYW50ZWUge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcblxyXG4gICAgICAgICYgaW1nIHtcclxuICAgICAgICAgICAgd2lkdGg6IDM0cHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogNDRweDtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJiBwIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuZm9ybS10aW1lciB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgICAgICAmIGgzIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyMnB4O1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMjdweDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmZvcm0tbGlzdCB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMTZweDtcclxuXHJcbiAgICAgICAgJiBoMyB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNDJweDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTZweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYgbGkge1xyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDM0cHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuXHJcbiAgICAgICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMjRweDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMjRweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAucmluZyB7XHJcbiAgICAgICAgd2lkdGg6IDU1cHg7XHJcbiAgICAgICAgaGVpZ2h0OiA1NXB4O1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgIH1cclxuXHJcbiAgICAucmluZyAudHJhY2sge1xyXG4gICAgICAgIHN0cm9rZS13aWR0aDogMXB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5yaW5nIC5wcm9ncmVzcyB7XHJcbiAgICAgICAgc3Ryb2tlLXdpZHRoOiAycHg7XHJcbiAgICB9XHJcblxyXG4gICAgLnZhbHVlIHtcclxuICAgICAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICB9XHJcblxyXG4gICAgLmxhYmVsIHtcclxuICAgICAgICB0b3A6IC0yMHB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTBweDtcclxuICAgIH1cclxufSBcclxuLnNob3ctbW9iaWxle1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2NTBweCkge1xyXG4gICAgLmZvcm0ge1xyXG4gICAgICAgIHBhZGRpbmc6IDUwcHggMCA2MHB4IDA7XHJcbiAgICAgICAgJi10b3B7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgfVxyXG4gICAgICAgICZfX3RpdGxle1xyXG4gICAgICAgICAgICBvcmRlcjogMjtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogNTBweDtcclxuICAgICAgICAgICAgJiBicntcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgJl9fdGltZXJ7XHJcbiAgICAgICAgICAgIG9yZGVyOiAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmX19yaWdodHtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMjVweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJl9fbGVmdCB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19idG4ge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAyMHB4IDI1cHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMzBweDtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTJweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2xhYmVsIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDQ3cHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcblxyXG4gICAgICAgICAgICAmIHNwYW4ge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDI5cHg7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDI5cHg7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjREFEQURBO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmIGlucHV0IHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcblxyXG4gICAgICAgICAgICAgICAgJjpjaGVja2VkfnNwYW46OmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDE5cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxOXB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19pdGVtIHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuXHJcbiAgICAgICAgICAgICYgcCB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA2cHg7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYgaW5wdXQge1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI0VGRUZFRjtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEycHg7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxOXB4IDMwcHg7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faW1nIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmZvcm0td3JhcHBlciB7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBtYXJnaW4tdG9wOiA4MHB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5ndWFyYW50ZWUge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDE0cHg7XHJcblxyXG4gICAgICAgICYgaW1nIHtcclxuICAgICAgICAgICAgd2lkdGg6IDM0cHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogNDRweDtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJiBwIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuZm9ybS10aW1lciB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgICAgICAmIGgzIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxN3B4O1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMjFweDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjNweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmZvcm0tbGlzdCB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMjVweDtcclxuXHJcbiAgICAgICAgJiBoMyB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMzJweDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYgbGkge1xyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDM0cHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuXHJcbiAgICAgICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMjRweDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMjRweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAucmluZyB7XHJcbiAgICAgICAgd2lkdGg6IDQzcHg7XHJcbiAgICAgICAgaGVpZ2h0OiA0M3B4O1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogN3B4O1xyXG4gICAgfVxyXG5cclxuICAgIC5yaW5nIC50cmFjayB7XHJcbiAgICAgICAgc3Ryb2tlLXdpZHRoOiAxcHg7XHJcbiAgICB9XHJcblxyXG4gICAgLnJpbmcgLnByb2dyZXNzIHtcclxuICAgICAgICBzdHJva2Utd2lkdGg6IDJweDtcclxuICAgIH1cclxuXHJcbiAgICAudmFsdWUge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIH1cclxuXHJcbiAgICAubGFiZWwge1xyXG4gICAgICAgIHRvcDogLTIwcHg7XHJcbiAgICAgICAgZm9udC1zaXplOiA4cHg7XHJcbiAgICB9XHJcbiAgICAuc2hvdy1tb2JpbGV7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbiAgICAuaGlkZS1tb2JpbGV7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxufSBcclxuIiwiLmZvb3RlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMzEzMTMxO1xyXG4gICAgcGFkZGluZy10b3A6IDQwcHg7XHJcbiAgICAvLyAuZm9vdGVyX19sb2dvXHJcblxyXG4gICAgJl9fbG9nbyB7XHJcbiAgICAgICAgd2lkdGg6IDEyOXB4O1xyXG4gICAgICAgIGhlaWdodDogNDNweDtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDQxcHg7XHJcbiAgICAgICAgJiBpbWd7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIC5mb290ZXJfX21lbnVcclxuXHJcbiAgICAmX19tZW51IHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgJi5zaG93LXRhYmxldHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJiBsaXtcclxuICAgICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xyXG4gICAgICAgICAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICYgYXtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiO1xyXG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbi5jb250YWluZXIge1xyXG59XHJcbi5mb290ZXItdG9wIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxufVxyXG4uZm9vdGVyLXByaXZhY3kge1xyXG4gICAgYmFja2dyb3VuZDogIzI5MjkyOTtcclxuICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICBwYWRkaW5nOiAxMXB4IDA7XHJcbiAgICBjb2xvcjogIzlFOUU5RTtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcclxufVxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxOTE5cHgpIHtcclxuICAgIC5mb290ZXIge1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiAyLjA4M3Z3O1xyXG5cclxuICAgICAgICAmX19sb2dvIHtcclxuICAgICAgICAgICAgd2lkdGg6IDYuNzE5dnc7XHJcbiAgICAgICAgICAgIGhlaWdodDogMi4yNDB2dztcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAyLjEzNXZ3O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fbWVudSB7XHJcbiAgICAgICAgICAgICYgbGkge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxLjU2M3Z3O1xyXG5cclxuICAgICAgICAgICAgICAgICYgYSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAwLjkzOHZ3O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5mb290ZXItcHJpdmFjeSB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMS41NjN2dztcclxuICAgICAgICBwYWRkaW5nOiAwLjU3M3Z3IDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAwLjgzM3Z3O1xyXG4gICAgfVxyXG59XHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgLmZvb3RlciB7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDUuMjA4dnc7XHJcblxyXG4gICAgICAgICZfX2xvZ28ge1xyXG4gICAgICAgICAgICB3aWR0aDogMjguMjU1dnc7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTEuNTg5dnc7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX21lbnUge1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiA2LjUxMHZ3O1xyXG5cclxuICAgICAgICAgICAgJi5zaG93LXRhYmxldCB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYgdWwge31cclxuXHJcbiAgICAgICAgICAgICYgbGkge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNS4yMDh2dztcclxuXHJcbiAgICAgICAgICAgICAgICAmOmxhc3QtY2hpbGQge1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgJiBhIHtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDIuNjA0dnc7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuZm9vdGVyLXByaXZhY3kge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDcuODEzdnc7XHJcbiAgICAgICAgcGFkZGluZzogMS40MzJ2dyAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMi4wODN2dztcclxuICAgIH1cclxufVxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2NTBweCkge1xyXG4gICAgLmZvb3RlciB7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDcuMjQ2dnc7XHJcblxyXG4gICAgICAgICZfX2xvZ28ge1xyXG4gICAgICAgICAgICB3aWR0aDogMzEuMTU5dnc7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTIuODAydnc7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19tZW51IHtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogOC42OTZ2dztcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICAgICAgICAgICYgdWwge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMi40MTV2dztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJiBsaSB7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyLjQxNXZ3O1xyXG5cclxuICAgICAgICAgICAgICAgICYgYSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiA0LjM0OHZ3O1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmZvb3Rlci1wcml2YWN5IHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxMS4xMTF2dztcclxuICAgICAgICBwYWRkaW5nOiAyLjY1N3Z3IDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAzLjg2NXZ3O1xyXG4gICAgfVxyXG59XHJcbiAgXHJcbiAgICAiXX0= */
